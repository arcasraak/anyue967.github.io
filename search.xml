<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>pmp</title>
      <link href="/posts/2be6d594.html"/>
      <url>/posts/2be6d594.html</url>
      
        <content type="html"><![CDATA[<p>2020-09-26-PMP</p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> PMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pyData</title>
      <link href="/posts/62a7ad9d.html"/>
      <url>/posts/62a7ad9d.html</url>
      
        <content type="html"><![CDATA[<p>2020-09-23-pyData</p><a id="more"></a><h3 id="一、环境搭建"><a href="#一、环境搭建" class="headerlink" title="一、环境搭建"></a>一、环境搭建</h3><p>pip常用命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查找模块</span></span><br><span class="line">pip search &lt;包名&gt;</span><br><span class="line"><span class="comment">#安装/更新/卸载模块</span></span><br><span class="line">pip install -r requirements.txt -i SOURCE</span><br><span class="line">    pip install / uninstall &lt;包名&gt;</span><br><span class="line">    pip install -U &lt;包名&gt;</span><br><span class="line"><span class="comment">#列出已安装模块</span></span><br><span class="line">    pip freeze &gt;requirements.txt<span class="comment">#导出模块清单</span></span><br><span class="line">    pip list</span><br><span class="line"></span><br><span class="line"><span class="comment">#指定全局安装源</span></span><br><span class="line"><span class="comment">##在unix和macos，配置文件为：$HOME/.pip/pip.conf</span></span><br><span class="line"><span class="comment">##在windows上，配置文件为：%HOME%\pip\pip.ini</span></span><br><span class="line">    <span class="comment">## 阿里源</span></span><br><span class="line">    [<span class="keyword">global</span>]</span><br><span class="line">    timeout = <span class="number">6000</span></span><br><span class="line">    index-url = http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">    trusted-host = mirrors.aliyun.com</span><br><span class="line"><span class="comment">## 豆瓣源</span></span><br><span class="line">[<span class="keyword">global</span>]</span><br><span class="line">    timeout = <span class="number">6000</span></span><br><span class="line">index-url = http://pypi.douban.com/simple</span><br><span class="line">trusted-host = pypi.douban.com</span><br><span class="line"><span class="comment">#解决 ModuleNotFoundError: No module named &#x27;pip&#x27;</span></span><br><span class="line">python -m ensurepip</span><br><span class="line">python -m pip install --upgrade pip </span><br><span class="line">python -m pip install --upgrade setuptools</span><br><span class="line"><span class="comment">#源</span></span><br><span class="line"><span class="comment">##豆瓣 http://pypi.douban.com/ </span></span><br><span class="line"><span class="comment">##中国科学技术大 http://pypi.mirrors.ustc.edu.cn/simple/ </span></span><br><span class="line"><span class="comment">##清华：https://pypi.tuna.tsinghua.edu.cn/simple</span></span><br><span class="line"><span class="comment">##阿里云：http://mirrors.aliyun.com/pypi/simple/</span></span><br></pre></td></tr></table></figure><h4 id="安装virtualenv-与virtualenvwrapper-win模块"><a href="#安装virtualenv-与virtualenvwrapper-win模块" class="headerlink" title="安装virtualenv 与virtualenvwrapper-win模块"></a>安装virtualenv 与virtualenvwrapper-win模块</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip3 install virtualenv</span><br><span class="line">pip3 install virtualenvwrapper-win</span><br><span class="line"></span><br><span class="line">WORKON_HOME</span><br><span class="line">Path:</span><br></pre></td></tr></table></figure><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkvirtualenv pyData<span class="comment">#创建虚拟环境</span></span><br><span class="line">lsvirtualenv / workon<span class="comment">#查看虚拟环境</span></span><br><span class="line">workon pyData<span class="comment">#进入虚拟环境</span></span><br><span class="line">rmvirtualenv pyData<span class="comment">#删除虚拟环境</span></span><br><span class="line">deactivate<span class="comment">#停止 虚拟环境</span></span><br></pre></td></tr></table></figure><h3 id="二、数据可视化库Matplotlib快速入门"><a href="#二、数据可视化库Matplotlib快速入门" class="headerlink" title="二、数据可视化库Matplotlib快速入门"></a>二、数据可视化库Matplotlib快速入门</h3><h3 id="三、科学计算库NumPy快速入门"><a href="#三、科学计算库NumPy快速入门" class="headerlink" title="三、科学计算库NumPy快速入门"></a>三、科学计算库NumPy快速入门</h3><h3 id="五、数据分析库Pandas快速入门"><a href="#五、数据分析库Pandas快速入门" class="headerlink" title="五、数据分析库Pandas快速入门"></a>五、数据分析库Pandas快速入门</h3><h3 id="六、Python爬虫"><a href="#六、Python爬虫" class="headerlink" title="六、Python爬虫"></a>六、Python爬虫</h3>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Tools</title>
      <link href="/posts/df044da8.html"/>
      <url>/posts/df044da8.html</url>
      
        <content type="html"><![CDATA[<p>2019-11-29-LinuxTools</p><a id="more"></a><h2 id="Linux-系统观测工具"><a href="#Linux-系统观测工具" class="headerlink" title="Linux 系统观测工具"></a>Linux 系统观测工具</h2><h2 id="系统负载及性能"><a href="#系统负载及性能" class="headerlink" title="系统负载及性能"></a>系统负载及性能</h2><h3 id="1-uptime"><a href="#1-uptime" class="headerlink" title="1. uptime"></a>1. uptime</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@192.168.1.161:~<span class="variable">$uptime</span></span><br><span class="line">10:30:06 up 10 days, 19:26,  1 user,  load average: 3.05, 2.81, 2.15</span><br><span class="line"></span><br><span class="line">1、当前时间 10:30:06</span><br><span class="line">2、系统已运行的时间 10 days, 19:26</span><br><span class="line">3、当前前在线用户 1 user</span><br><span class="line">4、平均负载：0.54, 0.40, 0.20，最近1分钟、5分钟、15分钟系统的负载</span><br><span class="line">5、load average数据是每隔5秒钟检查一次活跃的进程数，然后按特定算法计算出的数值。如果这个数除以逻辑CPU的数量，结果高于5的时候就表明系统在超负荷运转了；</span><br></pre></td></tr></table></figure><h3 id="2-dmesg"><a href="#2-dmesg" class="headerlink" title="2. dmesg"></a>2. dmesg</h3><h3 id="3-top"><a href="#3-top" class="headerlink" title="3. top"></a>3. top</h3><ul><li><a href="https://www.cnblogs.com/zhoug2020/p/6336453.html">top参考</a></li><li><code>系统运行时间和平均负载</code></li><li><code>Tasks — 任务（进程）</code>，系统现在共有137个进程，其中处于运行中的有1个，136个在休眠（sleep），stoped状态的有0个，zombie状态（僵尸）的有0个</li><li><code>CPU 状态</code><ul><li>us, user: 运行(未调整优先级的) 用户进程的CPU时间 √</li><li>sy，system: 运行内核进程的CPU时间 √</li><li>ni，niced: 运行已调整优先级的用户进程的CPU时间</li><li>wa，IO wait: 用于等待IO完成的CPU时间</li><li>hi: 处理硬件中断的CPU时间</li><li>si: 处理软件中断的CPU时间</li><li>st：这个虚拟机被hypervisor偷去的CPU时间（译注：如果当前处于一个hypervisor下的vm，实际上hypervisor也是要消耗一部分CPU处理时间的）</li></ul></li><li><code>内存使用</code><ul><li>第一行是物理内存使用，第二行是虚拟内存使用(交换空间)</li><li>第四行的free + 第四行的buffers + 第五行的cached √</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">top - 10:41:25 up 10 days, 19:37,  1 user,  load average: 0.34, 1.03, 1.56</span><br><span class="line">Tasks: 137 total,   1 running, 136 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s): 16.6 us,  1.7 sy,  0.0 ni, 81.2 id,  0.3 wa,  0.0 hi,  0.3 si,  0.0 st</span><br><span class="line">KiB Mem :  7730168 total,   204536 free,  7324360 used,   201272 buff/cache</span><br><span class="line">KiB Swap:  5242876 total,   399728 free,  4843148 used.    81848 avail Mem</span><br><span class="line"></span><br><span class="line">  PID USER PR  NI  VIRT    RES    SHR  S  %CPU %MEM   TIME+   COMMAND</span><br><span class="line">21257 xy   20  0   4757972 990552 3384 S  12.0 12.8   3173:53 /opt/xy/java+</span><br><span class="line"></span><br><span class="line">16.6% us — 用户空间占用CPU的百分比；1.7% sy — 内核空间占用CPU的百分比。</span><br><span class="line">0.0% ni  — 改变过优先级的进程占用CPU的百分比</span><br><span class="line">81.2% id — 空闲CPU百分比</span><br><span class="line">0.3% wa — IO等待占用CPU的百分比</span><br><span class="line">0.0% hi — 硬中断（Hardware IRQ）占用CPU的百分比</span><br><span class="line">0.3% si — 软中断（Software Interrupts）占用CPU的百分比</span><br></pre></td></tr></table></figure><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>d</td><td>指定刷新时间（s）</td></tr><tr><td>M</td><td>按内存占用率显示</td></tr><tr><td>P</td><td>按CPU占用率显示</td></tr><tr><td>T</td><td>按累计时间显示</td></tr><tr><td>c</td><td>切换显示命令名称和完整命令行</td></tr></tbody></table><h3 id="4-htop"><a href="#4-htop" class="headerlink" title="4. htop"></a>4. htop</h3><h2 id="CPU使用率"><a href="#CPU使用率" class="headerlink" title="CPU使用率"></a>CPU使用率</h2><h3 id="1-vmstat-Virtual-Meomory-Statistic"><a href="#1-vmstat-Virtual-Meomory-Statistic" class="headerlink" title="1. vmstat(Virtual Meomory Statistic)"></a>1. vmstat(Virtual Meomory Statistic)</h3><blockquote><p>对系统的整体情况进行统计，对系统的整体情况进行统计<br>r经常大于4，id经常少于40，表示<code>cpu的负荷很重</code>; bi，bo长期不等于0，表示<code>内存不足</code>; disk经常不等于0，且在b中的队列大于3，表示<code>io性能不好</code><br><code>-f,--fork</code> 显示从系统启动至今的fork数量<br><code>-s</code> 显示内存相关统计信息及多种系统活动数量<br><code>-d,--disk</code> 查看磁盘的读写 </p></blockquote><ul><li>Procs（进程）<ul><li>r: 运行队列中进程数量</li><li>b: 等待IO的进程数量</li></ul></li><li>Memory（内存）<ul><li>swpd: 使用虚拟内存大小</li><li>free: 可用内存大小</li><li>buff: 用作缓冲的内存大小</li><li>cache: 用作缓存的内存大小</li></ul></li><li>Swap<ul><li>si: 每秒从交换区写到内存的大小</li><li>so: 每秒写入交换区的内存大小</li></ul></li><li>IO(现在的Linux版本块的大小为1024bytes）<ul><li>bi: 每秒从块设备接收到的块数，单位：块/秒 也就是读块设备</li><li>bo: 每秒发送到块设备的块数，单位：块/秒  也就是写块设备</li></ul></li><li>系统<ul><li>in: 每秒中断数，包括时钟中断[interrupt]</li><li>cs: 每秒上下文切换数[count/second]</li></ul></li><li>CPU(以百分比表示)<ul><li>us: 用户进程执行时间(user time)</li><li>sy: 系统进程执行时间(system time)</li><li>id: 空闲时间(包括IO等待时间),中央处理器的空闲时间,以百分比表示</li><li>wa: 等待IO时间</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@192.168.1.161:~<span class="variable">$vmstat</span> 5 5  <span class="comment"># 5s内采集5个样本</span></span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line">r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs us sy id wa st</span><br><span class="line">4  0 4216792 187800      0 212148   88   40   746    84    9    4 10  2 86  2  0</span><br><span class="line"></span><br><span class="line">root@192.168.1.161:~<span class="variable">$vmstat</span> -a 2 5  <span class="comment"># -a,--active</span></span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line">r  b   swpd   free  inact active   si   so    bi    bo   <span class="keyword">in</span>   cs us sy id wa st</span><br><span class="line">1  0 4215656 196520 1385284 5829956   88   40   746    84    9    5 10  2 86  2  0</span><br></pre></td></tr></table></figure><h3 id="2-mpstat"><a href="#2-mpstat" class="headerlink" title="2. mpstat"></a>2. mpstat</h3><blockquote><p>主要用于多CPU环境下，它显示各个可用CPU的状态<br>mpstat -P CPU 时间间隔 采集次数  </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@192.168.1.161:~<span class="variable">$mpstat</span> -P ALL</span><br><span class="line">Linux 3.10.0-693.el7.x86_64 (centos) 2019年11月29日 _x86_64_(4 CPU)</span><br><span class="line"></span><br><span class="line">12时10分00秒  CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest  %gnice   %idle</span><br><span class="line">12时10分00秒  all    9.62    0.00    1.44    2.34    0.00    0.35    0.01    0.00    0.00   86.24</span><br></pre></td></tr></table></figure><h3 id="3-sar-System-Activity-Reporter"><a href="#3-sar-System-Activity-Reporter" class="headerlink" title="3. sar(System Activity Reporter)"></a>3. sar(System Activity Reporter)</h3><blockquote><p><a href="https://blog.51cto.com/11555417/2138903">参考sar</a><br>sar [options][-o file] [t] [n]<br>t为采样间隔，n为采样次数，默认值是1；  </p></blockquote><ul><li>%nice：显示在用户级别，用于nice操作，所占用 CPU 总时间的百分比</li><li>%steal：管理程序(hypervisor)为另一个虚拟进程提供服务而等待虚拟 CPU 的百分比。</li><li>%idle：显示 CPU 空闲时间占用 CPU 总时间的百分比。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@192.168.1.161:~<span class="variable">$sar</span> -u -o <span class="built_in">test</span> 10 3  <span class="comment"># 周期 次数</span></span><br><span class="line">Linux 3.10.0-693.el7.x86_64 (centos) 2019年11月29日 _x86_64_(4 CPU)</span><br><span class="line"></span><br><span class="line">12时16分46秒     CPU     %user     %nice   %system   %iowait    %steal     %idle</span><br><span class="line">12时16分56秒     all     12.16      0.00      1.90      5.22      0.00     80.72</span><br><span class="line"></span><br><span class="line">root@192.168.1.161:~<span class="variable">$sar</span> -u -f <span class="built_in">test</span><span class="comment"># 查看  </span></span><br></pre></td></tr></table></figure><h3 id="4-pidstat"><a href="#4-pidstat" class="headerlink" title="4. pidstat"></a>4. pidstat</h3><blockquote><p>主要用于监控全部或指定进程占用系统资源的情况，如CPU，内存、设备IO、任务切换、线程等<br>cpu使用情况统计(-u)<br>内存使用情况统计(-r)<br>IO情况统计(-d)  </p></blockquote><h3 id="5-dstat"><a href="#5-dstat" class="headerlink" title="5. dstat"></a>5. dstat</h3><blockquote><p>综合了vmstat，iostat，ifstat，netstat<br>dstat [option] [time] [count]<br>常用选项：-l,–load; -m,–memory; -tcp  </p></blockquote><h2 id="内存使用率"><a href="#内存使用率" class="headerlink" title="内存使用率"></a>内存使用率</h2><ul><li>free -m</li></ul><h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><ul><li>vmstat 1：查看进程是否阻塞（r）</li><li>pidstat 1：查看每个进程的情况”</li></ul><h2 id="磁盘IO"><a href="#磁盘IO" class="headerlink" title="磁盘IO"></a>磁盘IO</h2><ul><li>iostat -xzm 1 </li></ul><h2 id="网络IO"><a href="#网络IO" class="headerlink" title="网络IO"></a>网络IO</h2><ul><li>sar -n DEV 1</li><li>sar -n TCP,ETCP 1</li></ul><h3 id="6-磁盘扩容"><a href="#6-磁盘扩容" class="headerlink" title="6. 磁盘扩容"></a>6. 磁盘扩容</h3><ul><li><code>df -h</code>       # 查看分区空间使用情况 <code>-T</code>,显示<strong>文件系统</strong>类型<ul><li><code>parted -l</code></li><li><code>lsblk -f</code></li><li><code>file -s /dev/sda1</code></li></ul></li><li><code>du -sh *</code>    # 查看文件所占用大小</li><li><code>fdisk -l</code>    # 查看磁盘</li></ul><h4 id="6-1-新增加的磁盘"><a href="#6-1-新增加的磁盘" class="headerlink" title="6.1 新增加的磁盘"></a>6.1 新增加的磁盘</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@anyue ~]<span class="comment"># pvs             # 查看新增加的盘</span></span><br><span class="line">[root@anyue ~]<span class="comment"># fdisk /dev/sdb  # 建立新分区更改类型为8e</span></span><br><span class="line">[root@anyue ~]<span class="comment"># mkfs.ext4 /dev/sdb1</span></span><br><span class="line">[root@anyue ~]<span class="comment"># pvcreate /dev/sdb1      # pvscan</span></span><br><span class="line">[root@anyue ~]<span class="comment"># vgextend VolGroup /dev/sdb1     # 当前需要扩容的LVM的组名，通过lvs查看</span></span><br><span class="line">[root@anyue ~]<span class="comment"># lvextend -L +20G /dev/mapper/VolGroup-lv_root </span></span><br><span class="line">[root@anyue ~]<span class="comment"># resize2fs -p /dev/mapper/VolGroup-lv_root</span></span><br></pre></td></tr></table></figure><h4 id="6-2-从其他分区获得空间-home-299G"><a href="#6-2-从其他分区获得空间-home-299G" class="headerlink" title="6.2 从其他分区获得空间,/home 299G"></a>6.2 从其他分区获得空间,/home 299G</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@anyue ~]<span class="comment"># umount /home    # 提到无法卸载，fuser -m /home</span></span><br><span class="line">[root@anyue ~]<span class="comment"># e2fsck -f /dev/mapper/VolGroup-lv_home</span></span><br><span class="line">[root@anyue ~]<span class="comment"># resize2fs -p /dev/mapper/VolGroup-lv_home 279G</span></span><br><span class="line">[root@anyue ~]<span class="comment"># mount /home     # 此时可查看 df -h /home</span></span><br><span class="line">[root@anyue ~]<span class="comment"># lvreduce -L 279G /dev/mapper/VolGroup-lv_home   # -L,减小到20G；-l,减小20G；+</span></span><br><span class="line">[root@anyue ~]<span class="comment"># lvextend -L +20G /dev/mapper/VolGroup-lv_root</span></span><br><span class="line">[root@anyue ~]<span class="comment"># resize2fs -p /dev/mapper/VolGroup-lv_root  </span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SPL</title>
      <link href="/posts/546a1914.html"/>
      <url>/posts/546a1914.html</url>
      
        <content type="html"><![CDATA[<p>2019-11-20-SPL</p><a id="more"></a><h2 id="堆-栈-队列"><a href="#堆-栈-队列" class="headerlink" title="堆 栈 队列"></a>堆 栈 队列</h2><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><p><a href="https://www.cnblogs.com/guoxiaoyan/p/8664150.html">参考1</a></p></li><li><p><a href="https://www.cnblogs.com/hedeyong/p/7841548.html">参考2</a></p></li><li><p><a href="https://www.cnblogs.com/jinbang/p/8658708.html">参考3</a></p></li><li><p>堆：</p><ul><li>堆是在<code>程序运行</code>时，而不是在程序编译时，申请某个大小的内存空间。即动态分配内存，对其访问和对一般内存的访问没有区别。</li><li>堆是应用程序在运行的时候请求操作系统<code>分配给自己内存</code>，一般是申请/给予的过程。</li><li>堆是指程序运行时申请的动态内存，而栈只是指一种使用堆的方法(即先进后出)。</li></ul></li><li><p>堆区：由程序员分配释放，若程序员不释放，程序结束时可能有OS回收（引用类型值）。</p></li><li><p>栈：</p><ul><li>一种运算受限的线性表。其限制是仅允许在表的一端进行插入和删除运算。这一端被称为栈顶，相对地，把另一端称为栈底。</li><li>栈就是一个桶，后放进去的先拿出来，它下面本来有的东西要等它出来之后才能出来（<code>先进后出</code>）。</li><li>栈(Stack)是操作系统在建立某个进程时或者线程（在支持多线程的操作系统中是线程）为这个线程建立的存储区域。</li></ul></li><li><p>栈区：由<code>编辑器自动分配释放</code>，存放函数的<code>参数值，局部变量</code>的值等（基本类型值）。</p></li><li><p>队列：</p><ul><li>队列是一种特殊的线性表，特殊之处在于它只允许在表的<code>前端（front）进行删除操作</code>，而在<code>表的后端（rear）进行插入操作</code>，和栈一样，队列是一种操作受限制的线性表。进行删除操作的端称为队头，进行插入操作的端称为队尾。</li><li>队列中没有元素时，称为空队列。</li><li>建立顺序队列结构必须为其静态分配或动态申请一片连续的存储空间，并设置两个指针进行管理。一个是队头指针front，它指向队头元素；另一个是队尾指针rear，它指向下一个入队元素的存储位置。</li><li>队列采用的FIFO(first in first out)，新元素（等待进入队列的元素）总是被插入到链表的尾部，而读取的时候总是从链表的头部开始读取。每次读取一个元素，释放一个元素。所谓的动态创建，动态释放。因而也不存在溢出等问题。由于链表由结构体间接而成，遍历也方便。（先进先出）</li></ul></li><li><p>堆栈的特性：</p><ul><li>堆本身就是栈，最后一个放入堆栈中的物体总是被最先拿出来， 这个特性通常称为后进先出(LIFO)队列。 </li><li>堆栈中定义了一些操作，两个最重要的是PUSH和POP。 PUSH操作在堆栈的顶部加入一 个元素。POP操作相反，在堆栈顶部移去一个元素，并将堆栈的大小减一。</li></ul></li></ul><h3 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h3><ul><li>链表中每一个元素都是一个对象，每个对象称为一个<code>节点</code>，包含有<code>数据域key和指向下一个节点的指针next</code>。通过各个节点之间的相互连接，最终串联成一个链表。</li></ul><h2 id="关于SPL"><a href="#关于SPL" class="headerlink" title="关于SPL"></a>关于SPL</h2><h3 id="SPL-Search-Process-Language-搜索处理语言"><a href="#SPL-Search-Process-Language-搜索处理语言" class="headerlink" title="SPL:Search Process Language(搜索处理语言)"></a>SPL:Search Process Language(搜索处理语言)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">AND OR () NOT </span><br><span class="line">通配符：&#x27;* ? []&#x27;</span><br><span class="line">field:[x TO y]</span><br><span class="line"></span><br><span class="line">cat /var/log/messages |grep Error |awk &#x27;&#123;print substr($3,1,5)&#125;&#x27; |sort |uniq -c |sort -nr |head 10 </span><br><span class="line">source:&quot;/var/log/messages&quot; Error |bucket timestamp sapn=1m as ts |stats count() by ts |sort by &#x27;count()&#x27; |limit 10 </span><br></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><h4 id="stats"><a href="#stats" class="headerlink" title="stats"></a>stats</h4><blockquote><p>提供统计信息，可以选择按照<code>字段分组</code>(单值统计)   </p></blockquote><ul><li><p>count() – 返回字段出现次数，统计事件数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计ip和stats的组合的事件数量</span></span><br><span class="line">logtype:apache </span><br><span class="line">|stats count() by apache.clientip,apache.status</span><br></pre></td></tr></table></figure></li><li><p>avg() – 返回字段平均值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计平均值</span></span><br><span class="line">logtype:apache </span><br><span class="line">|stats avg(apache.resp_len) as avg_resp_len by apache.request_path </span><br><span class="line">|<span class="keyword">rename</span> avg_resp_len <span class="keyword">as</span> <span class="string">&quot;平均响应长度&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>sum()</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计日志量</span></span><br><span class="line">* |stats sum(raw_message_length) as byte </span><br><span class="line">|eval Mb=byte/1024/1024</span><br></pre></td></tr></table></figure></li><li><p>max()</p></li><li><p>min()</p></li><li><p>dc() – 返回字段唯一个数，去重，<code>dedup field</code></p></li></ul><h4 id="bucket"><a href="#bucket" class="headerlink" title="bucket"></a>bucket</h4><blockquote><p>将字段连续的值放到离散的数据桶中，可用于后续的stats等命令分组字段中  </p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*每1小时跨度内每个hostname的apache.resp_len平均值*/</span></span><br><span class="line">logtype:apache </span><br><span class="line">|bucket timestamp span=1h as ts </span><br><span class="line">|stats avg(apache.resp_len) by hostname,ts </span><br><span class="line">|eval ts_human=foramtdate(ts)</span><br><span class="line"><span class="comment">/******/</span></span><br><span class="line"><span class="comment">/*返回apache.status为100-200，200-400，400以上的apache.status事件数*/</span></span><br><span class="line">logtype:apache </span><br><span class="line">|bucket apache.status ranges=((100,200),(200,400),(400,)) as rs </span><br><span class="line">|stats count(apache.status) by rs</span><br></pre></td></tr></table></figure><h4 id="rename"><a href="#rename" class="headerlink" title="rename"></a>rename</h4><blockquote><p>重命名指定字段，支持对多字段同时进行重命名用<code>,</code>分开，支持通配符  </p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">logtype:apache </span><br><span class="line">|<span class="keyword">rename</span> apache.clientip <span class="keyword">as</span> <span class="string">&quot;ip地址&quot;</span></span><br></pre></td></tr></table></figure><h4 id="eval"><a href="#eval" class="headerlink" title="eval"></a>eval</h4><blockquote><p>计算表达式并将生成值放到新的字段中，存在将覆盖<br>常用函数：todouble()、formatdate(timestamp,”HH:mm”)  </p></blockquote><ul><li>根据响应时间获取short,middle,long三个分类值<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">logtype:apache </span><br><span class="line">|eval length=case(apache.resp_len&lt;1500,&quot;short&quot;,apache.resp_len&gt;2000,&quot;long&quot;,default,&quot;middle&quot;) </span><br><span class="line">|stats count(desc) by desc</span><br><span class="line"><span class="comment">/********************************/</span></span><br><span class="line"></span><br><span class="line">logtype:apache </span><br><span class="line">|eval desc=if(apache.status==20,&quot;OK&quot;,&quot;Error&quot;) </span><br><span class="line">|stats count(desc) by desc</span><br><span class="line"><span class="comment">/********************************/</span></span><br><span class="line">logtype apache </span><br><span class="line">|eval int status=tolong(apache.status)</span><br></pre></td></tr></table></figure></li></ul><h4 id="fileds"><a href="#fileds" class="headerlink" title="fileds"></a>fileds</h4><blockquote><p>保留搜索结果中的字段，支持通配  </p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">logtype:apache </span><br><span class="line">|stats count() by appname,hostname </span><br><span class="line">|fields appname,hostname</span><br></pre></td></tr></table></figure><h4 id="table"><a href="#table" class="headerlink" title="table"></a>table</h4><blockquote><p>将查询结果以表格形式展示，并对字段进行筛选，若不包含空行显示，支持通配符  </p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* |table apache.status,apache.method</span><br><span class="line"><span class="comment">/*****/</span>  </span><br><span class="line">appname:nginx AND nginx.request_time:* </span><br><span class="line">|eval new_reuqest_time=todouble(nginx.request_time) </span><br><span class="line">|table nginx.client_ip.geo.ip,nginx.client_ip.geo.isp,nginx.client_ip.gep.province</span><br></pre></td></tr></table></figure><h4 id="makeresults"><a href="#makeresults" class="headerlink" title="makeresults"></a>makeresults</h4><blockquote><p>构造指定的结果  </p></blockquote><ul><li>产生一条结果并生成新的app字段，用于后续map命令 <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* | makeresults count=1 </span><br><span class="line">|eval app=&quot;zookeeper&quot; </span><br><span class="line">|map &quot;* appname:$app$&quot;</span><br></pre></td></tr></table></figure></li></ul><h4 id="where"><a href="#where" class="headerlink" title="where"></a>where</h4><blockquote><p>使用表达式对结果进行过滤  </p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">logtype:apache AND apache.geo.city:&quot;深圳市&quot; </span><br><span class="line">|stats dc(apache.clientip) as dc_count by apache.request_path </span><br><span class="line">|where dc_count&gt;40 &amp;&amp; dc_count&lt;100</span><br></pre></td></tr></table></figure><h4 id="top"><a href="#top" class="headerlink" title="top"></a>top</h4><blockquote><p>获取字段出现次数前N的值集合  </p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* |top 5 nginx.client_ip.geo.province</span><br></pre></td></tr></table></figure><h4 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h4><blockquote><p>返回前n个结果  </p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">logtype:apache |limit 2</span><br><span class="line"><span class="comment">/*******/</span></span><br><span class="line">logtype:apache </span><br><span class="line">|stats count() by apache.clientip </span><br><span class="line">|limit 5</span><br></pre></td></tr></table></figure><h4 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h4><blockquote><p>按照指定字段对搜索结果排序，+升序，-降序  </p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">logtype:apache |sort by +timestamp</span><br><span class="line"><span class="comment">/********/</span></span><br><span class="line">logtype:apache </span><br><span class="line">|stats count(apache.clientip) as ip_count by appname </span><br><span class="line">|sort by -ip_count</span><br></pre></td></tr></table></figure><h4 id="join"><a href="#join" class="headerlink" title="join"></a>join</h4><blockquote><p>对父管道结果和子管道结果进行类似SQL的join，关联分析<br>type=left/inner   (取左/取并)  </p></blockquote><ul><li><p>统计昨天每个小时每个IP的事件数占当前这个小时总数的百分比</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">logtype:apache </span><br><span class="line">|bucket timestamp span=1h as ts </span><br><span class="line">|stats count() as ip_count by apache.clientip,ts </span><br><span class="line">|join type=left ts [[ </span><br><span class="line">  logtype:apache </span><br><span class="line">  |bucket timestamp span=1h as ts </span><br><span class="line">  |stats count() as hour_count by ts</span><br><span class="line">  ]] </span><br><span class="line">|eval ippercent=100*ip_count/hour_count</span><br></pre></td></tr></table></figure></li><li><p>按照运营商ISP统计总数，status：400-499数量及占比，status：500-599数量及占比，请求长度大于1000数量及占比，形成一张统计表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">logtype:apache </span><br><span class="line">|stats count(logtype) as count_all by apache.geo.isp </span><br><span class="line">|sort by count_all </span><br><span class="line">|limit 5</span><br><span class="line"><span class="comment">/**************/</span></span><br><span class="line">logtype:apache AND apache.status:[400 TO 499] </span><br><span class="line">|stats count(logtype) as count_400 by apache.geo.isp</span><br><span class="line"><span class="comment">/**************/</span></span><br><span class="line">logtype:apache AND apache.status:[500 TO 599] </span><br><span class="line">|stats count(logtype) as count_500 by apache.geo.isp</span><br><span class="line"><span class="comment">/**************/</span></span><br><span class="line">logtype:apache AND apache.resp_len&gt;1000 </span><br><span class="line">|stats count(logtype) as len_1000 by apache.geo.isp</span><br><span class="line"><span class="comment">/**************/</span></span><br><span class="line">logtype:apache </span><br><span class="line">|stats count(logtype) as count_all by apache.geo.isp </span><br><span class="line">|sort by count_all </span><br><span class="line">|limit 5 </span><br><span class="line">|join type=left apache.geo.isp [[ </span><br><span class="line">  logtype:apache AND apache.status:[400 TO 499] </span><br><span class="line">  |stats count(logtype) as count_400 by apache.geo.isp</span><br><span class="line">  ]]  </span><br><span class="line">|join type=left apache.geo.isp [[ </span><br><span class="line">  logtype:apache AND apache.status:[500 TO 599] </span><br><span class="line">  |stats count(logtype) as count_500 by apache.geo.isp</span><br><span class="line">  ]] </span><br><span class="line">|join type=left apache.geo.isp [[</span><br><span class="line">  logtype:apache AND apache.resp_len&gt;1000 </span><br><span class="line">  |stats count(logtype) as len_1000 by apache.geo.isp</span><br><span class="line">  ]]</span><br></pre></td></tr></table></figure></li></ul><h4 id="append"><a href="#append" class="headerlink" title="append"></a>append</h4><blockquote><p>将子管道结果附加在主管道结果之后，可以将不同类型数据进行关联分析，子查询 </p></blockquote><ul><li>主管道统计大前天的平均响应值，append命令中子管道统计昨天的平均值，其结果合并在一张表中   <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">starttime=&quot;-3d/d&quot; endtime=&quot;-2d/d&quot; * </span><br><span class="line">|stats avg(apache.resp_len) </span><br><span class="line">|eval day=&quot;the day before yesterday&quot; </span><br><span class="line">|append [[</span><br><span class="line">  starttime=&quot;-1d/d&quot; endtime=&quot;now/d&quot; * </span><br><span class="line">  |stats avg(apache.resp_len) </span><br><span class="line">  |eval day=&quot;yesterday&quot;</span><br><span class="line">  ]]</span><br><span class="line"><span class="comment">/**************/</span></span><br><span class="line">starttime=&quot;-1d/d endtime=now/d&quot; </span><br><span class="line">|bucket timestamp span=1h as ts </span><br><span class="line">|eval time=formatdate(ts,&quot;HH&quot;) </span><br><span class="line">|stats count() as _count by time </span><br><span class="line">|eval group=&quot;yesterday&quot; </span><br><span class="line">|append [[</span><br><span class="line">  starttime=&quot;now/d endtime=now&quot; </span><br><span class="line">  |bucket timestamp span=1h as ts </span><br><span class="line">  |eval time=formatdate(ts,&quot;HH&quot;) </span><br><span class="line">  |stats count() as _count by time </span><br><span class="line">  |eval group=&quot;today&quot;</span><br><span class="line">  ]]</span><br></pre></td></tr></table></figure></li></ul><h4 id="autoregress"><a href="#autoregress" class="headerlink" title="autoregress"></a>autoregress</h4><blockquote><p>一般用作行与行之间的值计算，计算指标数据，如环比， </p></blockquote><ul><li>按小时统计事件数，并计算出当前小时和上个小时的事件变化率<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">* |bucket timestamp span=1h as ts </span><br><span class="line">|stats count() as count_ by ts </span><br><span class="line">|autoregress count_ as last_count p=1 </span><br><span class="line">|eval a=(last_count-count_) / count_ </span><br><span class="line">|eval change_rate=format(&quot;%.3f%%&quot;,(last_count - count_)*100 / count_)</span><br><span class="line"><span class="comment">/**************/</span></span><br><span class="line">starttime=&quot;-2h/h&quot; endtime=&quot;now/h&quot; * </span><br><span class="line">|bucket timestamp span=10m as ts </span><br><span class="line">|stats count() as count_app by ts \</span><br><span class="line">|eval time=formatdate(ts) </span><br><span class="line">|autoregress count_app p=3</span><br></pre></td></tr></table></figure></li></ul><h4 id="lookup"><a href="#lookup" class="headerlink" title="lookup"></a>lookup</h4><blockquote><p>外部导入生成新字段</p></blockquote><ul><li>csv 文件字段host,user,department将搜索结果的hostname字段与csv文件的host进行关联<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">logtype:apache </span><br><span class="line">|stats count() by hostname </span><br><span class="line">|lookup user,department /data/rizhiyi/share/host_user.csv on hostname=host</span><br></pre></td></tr></table></figure></li></ul><h4 id="map"><a href="#map" class="headerlink" title="map"></a>map</h4><blockquote><p>引用上次搜索结果</p></blockquote><ul><li>列出日志数最多的三种logtype他们各自最大的日志文本长度<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* |stats count() by logtype </span><br><span class="line">|limit 3 </span><br><span class="line">|<span class="keyword">rename</span> logtype <span class="keyword">as</span> <span class="keyword">type</span> </span><br><span class="line">|<span class="keyword">map</span> <span class="string">&quot;logtype:$type$ </span></span><br><span class="line"><span class="string">|stats max(raw_message_length)&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="parse"><a href="#parse" class="headerlink" title="parse"></a>parse</h4><blockquote><p>搜索时抽取字段  </p></blockquote><ul><li>从原文中抽取IP地址，得到新的字段ip_addr分组并计算appname的个数<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* |parse &quot;(?&lt;ip_addr&gt;\d+\.\d+\.\d+\.\d+)&quot; </span><br><span class="line">|stats count(appname) by ip_addr</span><br></pre></td></tr></table></figure></li></ul><h4 id="parsedate"><a href="#parsedate" class="headerlink" title="parsedate"></a>parsedate</h4><blockquote><p>时间处理<br>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|makeresults count=1 </span><br><span class="line">|eval pd=parsedate(&quot;28/04/2019:12:01:01&quot;,&quot;dd/MM/yyyy:HH:mm:ss&quot;) </span><br><span class="line">|eval fd=formatdate(bd,&quot;yyyy/dd/MM HH:mm:ss&quot;)</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="esma智能运维"><a href="#esma智能运维" class="headerlink" title="esma智能运维"></a>esma智能运维</h4><blockquote><p>对某一个字段的未来值进行预测  </p></blockquote><ul><li><p>统计过去一年的每天平均延迟，推测接下来一个月网络延迟  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* |bucket timestamp span&#x3D;1d as ts </span><br><span class="line">|stats avg(network.latency) as latency by ts </span><br><span class="line">|esma latency timefield&#x3D;ts period&#x3D;7 futurecount&#x3D;30</span><br></pre></td></tr></table></figure></li><li><p>主机内存使用预测</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">appname:top_info_system_stats AND ip:192.168.10.1 </span><br><span class="line">|bucket timestamp span=10m as ts </span><br><span class="line">|stats avg(json.Mem.used_percent) as mem_use by ts </span><br><span class="line">|esma mem_use timefield=ts</span><br></pre></td></tr></table></figure></li></ul><h4 id="movingavg"><a href="#movingavg" class="headerlink" title="movingavg"></a>movingavg</h4><blockquote><p>计算移动平均值  </p></blockquote><ul><li>以分钟为单位统计apache返回apache_len长度的和，以10为窗口计算移动平均值，得到每分钟的响应长度和平滑后的值  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">logtype:apache </span><br><span class="line">|bucket timestamp span=1m as ts </span><br><span class="line">|stats sum(apache.resp_len) as sum_len by ts </span><br><span class="line">|movingavg sum_len,10 as moving_avg_resp_len</span><br></pre></td></tr></table></figure></li></ul><h4 id="rollingavg"><a href="#rollingavg" class="headerlink" title="rollingavg"></a>rollingavg</h4><blockquote><p>计算移动标准差 </p></blockquote><ul><li>以时间分组算出apache返回的reponse长度的和，以10为窗口计算rolling的标准差，观察resp_len的波动情况 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">logtype:apache </span><br><span class="line">|stats sum(apache.resp_len) as sum_resp_len by timestamp </span><br><span class="line">|rollingstd sum_resp_len,10 as resp_len_rolling_std</span><br></pre></td></tr></table></figure></li></ul><h4 id="transpose"><a href="#transpose" class="headerlink" title="transpose"></a>transpose</h4><blockquote><p>将查询的表格数据进行行列转换<br>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* |stats count() as cnt by apache.method,apache.status </span><br><span class="line">|transpose row=apache.method column=apache.status valuefield=cnt</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> SPL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SPL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zookeeper和Kafka</title>
      <link href="/posts/e1f23b16.html"/>
      <url>/posts/e1f23b16.html</url>
      
        <content type="html"><![CDATA[<p>2019-11-08-Zookeeper&amp;Kafka</p><a id="more"></a><h1 id="Zookeeper"><a href="#Zookeeper" class="headerlink" title="Zookeeper"></a>Zookeeper</h1><h2 id="Zookeeper官网"><a href="#Zookeeper官网" class="headerlink" title="Zookeeper官网"></a><a href="http://zookeeper.apache.org/">Zookeeper官网</a></h2><h3 id="1-什么是Zookeeper"><a href="#1-什么是Zookeeper" class="headerlink" title="1. 什么是Zookeeper?"></a>1. 什么是Zookeeper?</h3><blockquote><p>Zookeeper是开源<code>分布式</code>的，为分布式应用<code>提供协调服务</code>的Apache项目；<br>Zookeeper 是一个基于<code>观察者模式</code>设计的<code>分布式服务管理框架</code>，负责<code>存储和管理</code>数据，接受观察者的注册，数据状态一旦发生变化，Zookeeper负责通知已经在Zookeeper注册的观察者做出相应的反应；<br>应用场景：统一命名服务；统一配置管理；统一集群管理；监控服务器动态上下线；软负载均衡；     </p></blockquote><h3 id="2-Zookeeper特点"><a href="#2-Zookeeper特点" class="headerlink" title="2. Zookeeper特点"></a>2. Zookeeper特点</h3><h4 id="2-1-Zookeeper的设计目标"><a href="#2-1-Zookeeper的设计目标" class="headerlink" title="2.1 Zookeeper的设计目标"></a>2.1 Zookeeper的设计目标</h4><img src="/posts/e1f23b16/zkservice.png" class title="[zkservice]">  <ul><li>一个Leader，多个Follwers；</li><li>集群只要有半数以上节点存活，集群就可以正常服务，适合安装奇数台服务器；</li><li>全局数据一致，每个Server保存一份相同数据副本；</li><li>数据更新<code>原子性</code>，要么成功，要么失败；</li><li><code>实时性</code>：一定时间内，Client能读到最新数据；</li><li><code>顺序性</code>：来自同一个Client的更新请求按其发送顺序一次执行；</li></ul><h4 id="2-2-Zookeeper数据模型和分层名称"><a href="#2-2-Zookeeper数据模型和分层名称" class="headerlink" title="2.2 Zookeeper数据模型和分层名称"></a>2.2 Zookeeper数据模型和分层名称</h4><img src="/posts/e1f23b16/zknamespace.png" class title="[zknamespace]">   <ul><li>类似于Unix文件系统，每个节点称为ZNode，默认存储1MB的数据，每个节点可以通过其路径唯一表示；</li></ul><h3 id="3-Zookeeper的使用"><a href="#3-Zookeeper的使用" class="headerlink" title="3. Zookeeper的使用"></a>3. Zookeeper的使用</h3><h4 id="3-1-下载地址"><a href="#3-1-下载地址" class="headerlink" title="3.1 下载地址"></a>3.1 下载地址</h4><p><a href="http://zookeeper.apache.org/releases.html">Zookeeper下载地址</a>  </p><h4 id="3-2-本地模式安装部署"><a href="#3-2-本地模式安装部署" class="headerlink" title="3.2 本地模式安装部署"></a>3.2 本地模式安装部署</h4><ul><li>JDK<ul><li><code>vim /etc/profile</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/opt/jdk1.8</span><br><span class="line">JRE_HOME=<span class="variable">$JAVA_HOME</span>/jre</span><br><span class="line">CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib:<span class="variable">$JRE_HOME</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></li></ul></li><li>解压Zookeeper到/opt</li></ul><h4 id="3-3-修改配置文件"><a href="#3-3-修改配置文件" class="headerlink" title="3.3 修改配置文件"></a>3.3 修改配置文件</h4><ul><li><p>路径：/zookeepr-version/conf</p><ul><li><code>mv ./zoo_sample.cfg ./zoo.cfg &amp;&amp; mkdir zkData</code></li><li><code>vim zoo.cfg</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tickTime=2000 <span class="comment"># 通信心跳时间 2s，S-C</span></span><br><span class="line">initLimit=10  <span class="comment"># 2sx10=20s，初始Leader与Followed通信时限</span></span><br><span class="line">syncLimit=5   <span class="comment"># LF同步通信时限，5x2s=10s</span></span><br><span class="line">clientPort=2181   <span class="comment"># 监听客户端连接端口号</span></span><br><span class="line">dataDir=/opt/zookeeper-version/zkData <span class="comment"># 数据文件目录和数据持久化路径  </span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>启动zookeeper服务端&amp;客户端</p><ul><li><code>./bin/zkServer.sh start</code></li><li><code>jps</code>  # Java Virtual Machine Process Status Tool</li><li><code>./bin/zkCli.sh -server IP</code>  # Command line Iteraction  </li></ul></li></ul><h4 id="3-4-测试"><a href="#3-4-测试" class="headerlink" title="3.4 测试"></a>3.4 测试</h4><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">ls</td><td align="left">查看节点</td></tr><tr><td align="left">–</td><td align="left">watch, 监听节点变化</td></tr><tr><td align="left">create</td><td align="left">创建节点</td></tr><tr><td align="left">–</td><td align="left">-s, 自动建立序号</td></tr><tr><td align="left">delete</td><td align="left">删除节点</td></tr><tr><td align="left">set</td><td align="left">设置节点值</td></tr><tr><td align="left">get</td><td align="left">获取节点的值</td></tr><tr><td align="left">–</td><td align="left">watch, 监听节点值的变化</td></tr><tr><td align="left">stat</td><td align="left">查看节点状态</td></tr></tbody></table><ul><li>连接到Zookeeper：</li></ul><ul><li><code>$ bin/zkCli.sh -server 127.0.0.1:2181</code> # help 查询帮助命令 </li></ul><ul><li>创建znode<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[zkshell: 9] create /zk_test <span class="string">&quot;my_data&quot;</span>    <span class="comment"># 要有相应的值 </span></span><br><span class="line">Created /zk_test</span><br><span class="line"></span><br><span class="line">[zkshell: 11] ls /</span><br><span class="line">[zookeeper, zk_test]</span><br><span class="line"></span><br><span class="line">[zkshell: 12] get /zk_test    <span class="comment"># set /zk_test junk     delete /zk_test</span></span><br><span class="line">my_data</span><br><span class="line">cZxid = 5</span><br><span class="line">...</span><br><span class="line">numChildren = 0</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-分布式安装部署-建议奇数台"><a href="#4-分布式安装部署-建议奇数台" class="headerlink" title="4. 分布式安装部署(建议奇数台)"></a>4. 分布式安装部署(建议奇数台)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vim conf/zoo.cfg</span><br><span class="line">tickTime=2000</span><br><span class="line">dataDir=/var/lib/zookeeper</span><br><span class="line">clientPort=2181</span><br><span class="line">initLimit=5</span><br><span class="line">syncLimit=2</span><br><span class="line">server.1=zoo1:2888:3888 <span class="comment"># zoo1建议为主机名； </span></span><br><span class="line">server.2=zoo2:2888:3888 <span class="comment"># 2888：该server与集群leader server交换信息的端口；</span></span><br><span class="line">server.3=zoo3:2888:3888 <span class="comment"># 3888选举端口；</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置myid 在数据目录下</span></span><br><span class="line">vim myid</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h1 id="Kafka"><a href="#Kafka" class="headerlink" title="Kafka"></a>Kafka</h1><h2 id="Kafka官网"><a href="#Kafka官网" class="headerlink" title="Kafka官网"></a><a href="http://kafka.apache.org/">Kafka官网</a></h2><h3 id="1-什么是Kafka？"><a href="#1-什么是Kafka？" class="headerlink" title="1. 什么是Kafka？"></a>1. 什么是Kafka？</h3><blockquote><p>Kafka 是一个<code>分布式</code>的<code>基于发布/订阅模式</code>的<code>消息队列</code>(Message Queue)，主要应用于大数据领域的实时计算以及日志采集。</p></blockquote><h3 id="2-什么是Message-Queue？"><a href="#2-什么是Message-Queue？" class="headerlink" title="2. 什么是Message Queue？"></a>2. 什么是Message Queue？</h3><blockquote><p>消息队列比作是一个<code>存放消息的容器</code>，需要使用消息的时候可以取出消息供自己使用，消息队列是<code>分布式系统</code>中重要的组件，目前使用较多的消息队列有<code>ActiveMQ，RabbitMQ，Kafka，RocketMQ</code>；队列 Queue 是一种<code>先进先出</code>的数据结构。 </p></blockquote><blockquote><p>消息队列的模式：  </p><blockquote><p>点对点模式，消费者<code>主动</code>拉取数据，消息收到后消息清除（阅后即焚）；<br>  <img src="/posts/e1f23b16/PP.png" class title="[点对点模式]"><br>发布-订阅模式，发布到Topic数据不会清除，分为push / pull；<br>  <img src="/posts/e1f23b16/PS.png" class title="[发布-订阅模式]">   </p></blockquote></blockquote><blockquote><p>优点：  </p><blockquote><p>1）通过异步处理提高系统性能（削峰、减少响应所需时间）；<br>2）降低系统耦合性，消息队列使利用<code>发布-订阅</code>模式工作，消息发送者（<code>生产者</code>）发布消息，一个或多个消息接受者（<code>消费者</code>）订阅消息；  </p></blockquote></blockquote><h3 id="3-Kafka的4个核心API"><a href="#3-Kafka的4个核心API" class="headerlink" title="3. Kafka的4个核心API"></a>3. Kafka的4个核心API</h3><ul><li><p><code>Producer API</code>：允许应用程序发布的记录流至一个或多个Kafka topics。</p></li><li><p><code>Consumer API</code>：允许应用程序订阅一个或多个主题，并处理所产生的记录流。</p></li><li><p><code>Streams API</code>：允许应用程序扮演流处理器，从一个或多个主题消耗的输入流，并产生一个输出流至一个或多个输出的主题，有效地把输入数据流转变输出流。</p></li><li><p><code>Connector API</code>：允许构建和运行可重复使用的生产者或消费者，将Kafka topics连接到现有的应用程序或数据系统。例如，关系数据库的连接器可能会捕获对表的所有更改。</p></li><li><p>在Kafka中，客户端和服务器之间的通信是通过简单，高性能，与语言无关的<code>TCP协议</code>完成的。</p></li></ul><img src="/posts/e1f23b16/kafka-apis.png" class title="[kafka-apis]">    <ul><li>topics：主题是被发布记录的一种类别或者订阅名称，Kafka的主题是通常是多用户的，也即一个主题可以有零个，一个或者多个消费者来订阅写入该主题的数据；对于每个主题，Kafka集群都会维护一个分区日志。</li></ul><img src="/posts/e1f23b16/Topic.png" class title="[Topic]">  <h3 id="4-kafka架构："><a href="#4-kafka架构：" class="headerlink" title="4. kafka架构："></a>4. kafka架构：</h3><img src="/posts/e1f23b16/kafka.png" class title="[kafka架构]">  <ul><li><code>Producer</code>：消息生产者，就是向kafka broker发消息的客户端；</li><li><code>Consumer</code>：消息消费者，向kafka broker取消息的客户端；</li><li><code>Consumer Group （CG）</code>：kafka用来实现一个topic消息的广播（发给所有的consumer）和单播（发给任意一个consumer）的手段；广播的实现：让每一个Consuner拥有独立的CG；<ul><li>第一：同一个消费者组里面，只能有一个消费者去消费分区的数据；</li><li>第二：同一个消费者组里面是不会重复消费消息的；</li><li>第三：同一个消费者组的一个消费者不是以一条一条数据为单元的，是以<code>分区为单元</code>，就相当于消费者和分区建立某种socket，进行传输数据，所以，一旦建立这个关系，这个分区的数据只能是由这个消费者消费；</li></ul></li><li><code>Broker</code>：一台kafka服务器就是一个broker；一个集群由多个broker组成。一个broker可以容纳多个topic；</li><li><code>Topic</code>：可以理解为一个队列；</li><li><code>Partition</code>：为了实现扩展性，数据量大的topic可以分布到多个broker（即服务器）上，一个topic可以分为多个partition，每个partition是一个有序的队列。partition中的每条消息都会被分配一个有序的id（offset）。kafka只保证按一个partition中的顺序将消息发给consumer，不保证一个topic的整体（多个partition间）的顺序；</li><li><code>Offset</code>：kafka的存储文件都是按照offset.kafka来命名，用offset做名字的好处是方便查找。例如你想找位于2049的位置，只要找到2048.kafka的文件即可。当然the first offset就是00000000000.kafka；</li><li>Zookeeper：存储Kafka集群信息，实现集群的高可用；</li></ul><h3 id="5-kafka安装部署："><a href="#5-kafka安装部署：" class="headerlink" title="5. kafka安装部署："></a>5. kafka安装部署：</h3><h4 id="5-1-下载地址"><a href="#5-1-下载地址" class="headerlink" title="5.1 下载地址"></a>5.1 <a href="http://kafka.apache.org/quickstart">下载地址</a></h4><blockquote><p>依赖于Zk  </p></blockquote><h4 id="5-2-安装部署"><a href="#5-2-安装部署" class="headerlink" title="5.2 安装部署"></a>5.2 安装部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf kafka_version.tgz -C /opt/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> Devops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>五笔和双拼</title>
      <link href="/posts/47b7e05b.html"/>
      <url>/posts/47b7e05b.html</url>
      
        <content type="html"><![CDATA[<p>2019-11-05-五笔和双拼</p><a id="more"></a>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux笔记</title>
      <link href="/posts/e511c25d.html"/>
      <url>/posts/e511c25d.html</url>
      
        <content type="html"><![CDATA[<p>2019-10-31</p><a id="more"></a><h4 id="用户操作练习"><a href="#用户操作练习" class="headerlink" title="用户操作练习"></a>用户操作练习</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个用户mandriva，其ID号为2002，基本组为distro（组ID为3003），附加组为linux</span></span><br><span class="line">groupadd -g 3003 distro</span><br><span class="line">groupadd linux</span><br><span class="line">useradd -u 2002 -g distro -G linux mandriva</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个用户fedora，其全名为Fedora Community，默认shell为tcsh</span></span><br><span class="line">useradd -c <span class="string">&quot;Fedora Community&quot;</span> -s /bin/tcsh fedora</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改mandriva的ID号为4004，基本组为linux，附加组为distro和fedora</span></span><br><span class="line">usermod -u 4004 -g linux -G distro,fedora mandriva</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给fedora加密码，并设定其密码最短使用期限2D，最长为50D</span></span><br><span class="line">passwd -n 2 -x 50 fedora</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将mandriva的默认shell修改为/bin/bash</span></span><br><span class="line">usermod -s /bin/bash mandriva</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加系统用户hbase，且不允许登录系统</span></span><br><span class="line">useradd -r -s /sbin/nologin hbase</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个没有家目录的用户openstack</span></span><br><span class="line">useradd -M openstack</span><br></pre></td></tr></table></figure><h4 id="权限练习"><a href="#权限练习" class="headerlink" title="权限练习"></a>权限练习</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 复制/etc/skel 为/home/openstack</span></span><br><span class="line">cp -r /etc/skel /home/openstack</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改变/home/openstack及其内部文件的属主属组均为openstack</span></span><br><span class="line">chown -R openstack.openstack /home/openstack</span><br><span class="line"></span><br><span class="line"><span class="comment"># /home/openstack及其内部文件属主与其他用户没有任何访问权限</span></span><br><span class="line">chmod -R go= /home/openstack</span><br></pre></td></tr></table></figure><h4 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计/usr/bin目录下的文件个数</span></span><br><span class="line">ls /usr/bin |wc -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取出当前系统上所有用户的shell，每种shell只显示一次，并且按顺序进行显示</span></span><br><span class="line">cat /etc/passwd |cut -d: -f7 |sort -u</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如何显示/var/log目录下每个文件的内容类型？</span></span><br><span class="line">file /var/<span class="built_in">log</span>/* </span><br><span class="line">file $(ls /var/<span class="built_in">log</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取出/etc/inittab文件的第六行</span></span><br><span class="line">head -n6 |tail -n1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取出/etc/passwd文件中倒数第九个用户的用户名和shell，显示到屏幕并将其保存至/tmp/users文件中</span></span><br><span class="line">tail -n9 |head -n1 |cut -d: -f1,7 &gt;/tmp/users</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示/etc目录所有以pa开头的文件，并统计个数</span></span><br><span class="line">ls -d /etc/pa* |wc -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不使用文本编辑器将alias cls=&quot;clear&quot;添加到当前用户的.bashrc文件中</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;alias cls=clear&quot;</span>&gt;&gt;~/.bashrc</span><br></pre></td></tr></table></figure><h4 id="grep-sed-awk"><a href="#grep-sed-awk" class="headerlink" title="grep/sed/awk"></a>grep/sed/awk</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 找出ifconfig命令结果中的1-255之间的整数</span></span><br><span class="line">grep -E <span class="string">&#x27;(\&lt;([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\&gt;\.)&#123;3&#125;\&lt;([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\&gt;&#x27;</span>  </span><br><span class="line">  A: 1-127  </span><br><span class="line">  B: 128-191  </span><br><span class="line">  C: 192-223  </span><br><span class="line">grep -E <span class="string">&#x27;\&lt;[1-9]|1[1-9]&#123;2&#125;|2[01][0-9]|22[0-3]\&gt;(\.\&lt;([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-4])\&gt;)&#123;2&#125;\.\&lt;([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-4])\&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除/etc/grub.conf文件中行首的空白符</span></span><br><span class="line">sed <span class="string">&#x27;s/[[:space:]]+//g&#x27;</span> /etc/grub.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换/etc/inittab文件中&quot;id:3:initdefault&quot;一行中的数字5</span></span><br><span class="line">sed <span class="string">&#x27;s@\(id:\)[0-9]\(:initdefault:\)@\15\2@g&#x27;</span> /etc/inittab </span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除/etc/inittab文件中的空白行</span></span><br><span class="line">sed <span class="string">&#x27;/^$/d&#x27;</span> /etc/inittab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除/etc/inittab文件开头的#号</span></span><br><span class="line">sed <span class="string">&#x27;s/^#//g&#x27;</span> /etc/inittab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除某文件中开头的#及后面的空白字符，但要求#后面必须有空白字符</span></span><br><span class="line">sed -r <span class="string">&#x27;s@^#[[:space:]]+@@&#x27;</span> /etc/inittab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除某文件以空白字符且后边跟#号的开头的行的空白字符及#</span></span><br><span class="line">sed <span class="string">&#x27;s/^[[:space:]+#//g&#x27;</span> /etc/inittab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取出一个文件路径的目录名称</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;/etc/rc.d&#x27;</span> |sed -r <span class="string">&#x27;s@^(/.*/)[^/]+/?@\1@g&#x27;</span>/etc/</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;/etc/rc.d&#x27;</span> |sed -r <span class="string">&#x27;s@^/.*/([^/]+)/?@\1@g&#x27;</span>rc.d</span><br></pre></td></tr></table></figure><h4 id="find"><a href="#find" class="headerlink" title="find"></a>find</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查找/var 下属主为root并且属组为mail的所有文件</span></span><br><span class="line">find /var -user root -a -group mail</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找/usr 下不属于root,bin,或student的文件</span></span><br><span class="line">find /usr -not \( -user root -o -user bin -o -user student \)</span><br><span class="line">find  /usr -not -user root -a -not -user bin -not -user student</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找/etc 下最近一周内内容修改过的且不属于root及student用户的文件</span></span><br><span class="line">find /etc -mtime -7 -not \( -user root -o -user student \)</span><br><span class="line">find /etc -mtime -7 -not -user root -a -not -user student</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找当前系统上没有属主或属组且最近1天内被访问过的文件，并将其属主属组均改为root</span></span><br><span class="line">find / \( -nouser -o -nogroup \) -a -atime -1 -<span class="built_in">exec</span> chown root.root &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找/etc下大于1M 的文件，并将其文件名写入/tmp/etc.largefiles文件中</span></span><br><span class="line">find /etc -size +1M -<span class="built_in">exec</span> <span class="built_in">echo</span> &#123;&#125; &gt;&gt;/tmp/etc.largefiles \;  </span><br><span class="line">find /etc -size +1M &gt;&gt;/tmp/etc.largefiles</span><br><span class="line"></span><br><span class="line"><span class="comment"># xargs - build and execute command lines from standford input</span></span><br><span class="line">find /etc -size +1M |xargs <span class="built_in">echo</span> &gt;&gt;/tmp/etc.largefiles </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找/etc下所有用户都没有写权限的文件，显示出详细信息</span></span><br><span class="line">find /etc -not -perm /222 -ls</span><br></pre></td></tr></table></figure><h4 id="磁盘"><a href="#磁盘" class="headerlink" title="磁盘"></a>磁盘</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建5G的分区，文件系统为ext3，卷标为MYDATA，块大小为1024，预留管理空间为磁盘分区3%，要求开机后自动挂载至/data目录，并且自动挂载的设备要使用卷标进行引导</span></span><br><span class="line">mke2fs -t ext3 -L MYDATA -b 1024 -m 3 /dev/sda2</span><br><span class="line">blkid<span class="comment"># 查看磁盘 UUID  TYPE  LABEL等属性  </span></span><br><span class="line">tune2fs <span class="comment"># 调整文件系统属性 -L -m -o</span></span><br><span class="line">dumpe2fs<span class="comment"># 显示文件属性信息  </span></span><br><span class="line">fsck / e2fsck</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上述如何操作，让其自动挂载的同时启用ACL功能</span></span><br><span class="line">/etc/fstab</span><br><span class="line">LABEL=<span class="string">&#x27;MYDATA&#x27;</span>/dataext3defaults,acl0 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个本地回环文件/var/swaptmp/swapfile来用于swap，要求大小为512MB，卷标为SWAP-FILE，且开机自动挂载此交换设备</span></span><br><span class="line"></span><br><span class="line">mkdir /var/swaptmp</span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=/var/swaptmp/swapfile bs=1M count=512</span><br><span class="line">mkswap LABLE=SWAP-FILE /var/swaptmp/swapfile</span><br><span class="line"></span><br><span class="line">/var/swaptmp/swapfileswapswapdefaults0 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis</title>
      <link href="/posts/bae4ff13.html"/>
      <url>/posts/bae4ff13.html</url>
      
        <content type="html"><![CDATA[<p>2019-09-14-Redis</p><a id="more"></a><h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><blockquote><p>Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。 </p></blockquote><blockquote><p>Redis支持数据的持久化，可以将<code>内存中的数据</code>保存在磁盘中，重启的时候可以再次加载进行使用; Redis不仅仅支持简单的<code>key-value</code>类型的数据，同时还提供<code>list，set，zset，hash</code>等数据结构的存储; Redis支持<code>数据的备份</code>，即master-slave模式的数据备份。</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">[root@anyue ~]<span class="comment"># wget http://download.redis.io/releases/redis-5.0.5.tar.gz</span></span><br><span class="line">[root@anyue redis-5.0.5]<span class="comment"># tar -xzf redis-5.0.5.tar.gz</span></span><br><span class="line">[root@anyue redis-5.0.5]<span class="comment"># make PREFIX=/usr/local/redis install </span></span><br><span class="line">[root@anyue redis-5.0.5]<span class="comment"># mkdir /usr/local/redis/etc</span></span><br><span class="line">[root@anyue redis-5.0.5]<span class="comment"># cp ./redis.conf /usr/local/redis/etc/</span></span><br><span class="line">[root@anyue redis-5.0.5]<span class="comment"># vim /usr/local/redis/etc/redis.conf   </span></span><br><span class="line">  daemonize yes  </span><br><span class="line">[root@anyue redis-5.0.5]<span class="comment"># ln -s /usr/local/redis/bin/* /usr/local/bin </span></span><br><span class="line">[root@anyue redis-5.0.5]<span class="comment"># cp /utils/redis_init_script /usr/local/redis/etc/  # 启动脚本</span></span><br><span class="line">[root@anyue redis-5.0.5]<span class="comment"># vim /usr/local/redis/etc/redis_init_script  </span></span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"><span class="comment"># chkconfig: 2345 80 90</span></span><br><span class="line"><span class="comment"># description: source package redis</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Simple Redis init.d script conceived to work on Linux systems</span></span><br><span class="line"><span class="comment"># as it does use of the /proc filesystem.</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:     redis_6379</span></span><br><span class="line"><span class="comment"># Default-Start:        2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:         0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description:    Redis data structure server</span></span><br><span class="line"><span class="comment"># Description:          Redis data structure server. See https://redis.io</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"></span><br><span class="line">REDISPORT=6379</span><br><span class="line">EXEC=/usr/<span class="built_in">local</span>/redis/bin/redis-server</span><br><span class="line">CLIEXEC=/usr/<span class="built_in">local</span>/redis/bin/redis-cli</span><br><span class="line"></span><br><span class="line">PIDFILE=/var/run/redis_<span class="variable">$&#123;REDISPORT&#125;</span>.pid</span><br><span class="line">CONF=<span class="string">&quot;/usr/local/redis/etc/<span class="variable">$&#123;REDISPORT&#125;</span>.conf&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$PIDFILE</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$PIDFILE</span> exists, process is already running or crashed&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Starting Redis server...&quot;</span></span><br><span class="line"><span class="variable">$EXEC</span> <span class="variable">$CONF</span> &amp;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line">stop)</span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="variable">$PIDFILE</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$PIDFILE</span> does not exist, process is not running&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">PID=$(cat <span class="variable">$PIDFILE</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Stopping ...&quot;</span></span><br><span class="line"><span class="variable">$CLIEXEC</span> -p <span class="variable">$REDISPORT</span> shutdown</span><br><span class="line"><span class="keyword">while</span> [ -x /proc/<span class="variable">$&#123;PID&#125;</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Waiting for Redis to shutdown ...&quot;</span></span><br><span class="line">sleep 1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Redis stopped&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Please use start or stop as first argument&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">[root@anyue redis-5.0.5]<span class="comment"># ln -s /usr/local/redis/etc/redis_init_script /etc/init.d/redisd  </span></span><br><span class="line">[root@anyue redis-5.0.5]<span class="comment"># chkconfig --add redisd`  # 加入开机自启  </span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="string-类型及操作"><a href="#string-类型及操作" class="headerlink" title="string 类型及操作"></a>string 类型及操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@anyue redis-5.0.5]# redis-cli -h 127.0.0.1 -p6379 -apasswd  # 远程</span><br></pre></td></tr></table></figure><h2 id="待续。。。"><a href="#待续。。。" class="headerlink" title="待续。。。"></a>待续。。。</h2>]]></content>
      
      
      <categories>
          
          <category> linux, Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES</title>
      <link href="/posts/3eb5a9f1.html"/>
      <url>/posts/3eb5a9f1.html</url>
      
        <content type="html"><![CDATA[<p>2019-09-14-ElasticSearch</p><a id="more"></a><h2 id="rsync-同步服务："><a href="#rsync-同步服务：" class="headerlink" title="rsync 同步服务："></a>rsync 同步服务：</h2><h3 id="rsync基本使用："><a href="#rsync基本使用：" class="headerlink" title="rsync基本使用："></a>rsync基本使用：</h3><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-a</td><td>归档模式</td></tr><tr><td>-v</td><td>显示同步过程</td></tr><tr><td>-z</td><td>传输时压缩</td></tr></tbody></table><ul><li>下载: rsync -avz 服务器IP:/服务器目录/file /本地目录   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  rsync -avz root@192.168.37.10:&#x2F;filesrc&#x2F;text.txt &#x2F;filedst&#x2F;</span><br><span class="line">  &#96;&#96;&#96;  </span><br><span class="line"></span><br><span class="line">+ 上传: rsync -avz &#x2F;本地目录&#x2F;file 服务器IP:&#x2F;服务器目录&#x2F;*  </span><br></pre></td></tr></table></figure>rsync -avz /filedst/test.txt <a href="mailto:&#x72;&#111;&#111;&#116;&#64;&#x31;&#x39;&#x32;&#x2e;&#49;&#x36;&#x38;&#46;&#51;&#x37;&#x2e;&#49;&#x30;">&#x72;&#111;&#111;&#116;&#64;&#x31;&#x39;&#x32;&#x2e;&#49;&#x36;&#x38;&#46;&#51;&#x37;&#x2e;&#49;&#x30;</a>:/filesrc/<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line">*ssh-keygen -t rsa -b 2048*  </span><br><span class="line">*ssh-copy-id root@192.168.37.20*  </span><br><span class="line"></span><br><span class="line">#### rsync服务端(NFS服务器)</span><br><span class="line">&#96;&#96;&#96;bash</span><br><span class="line">[root@xy ~]# vim &#x2F;etc&#x2F;rsyncd.conf  </span><br><span class="line">  address &#x3D; 192.168.37.10 #rsync服务绑定IP</span><br><span class="line">  port &#x3D; 873</span><br><span class="line">  log file &#x3D;&#x2F;var&#x2F;log&#x2F;rsyncd.log </span><br><span class="line">  pid file &#x3D; &#x2F;var&#x2F;run&#x2F;rsyncd.pid</span><br><span class="line">  [web]</span><br><span class="line">      comment &#x3D; web directory backup</span><br><span class="line">      path &#x3D; &#x2F;filesrc</span><br><span class="line">      read only &#x3D; no</span><br><span class="line">      dont commpress &#x3D; *.gz *.bz2</span><br><span class="line">      auth users &#x3D;user1   # 非系统用户, 自行创建</span><br><span class="line">      secrets file &#x3D; &#x2F;etc&#x2F;rsyncd_users.db</span><br><span class="line">[root@xy ~]# vim &#x2F;etc&#x2F;rsyncd_users.db   </span><br><span class="line">  user1:123456</span><br><span class="line">[root@xy ~]# chmod 600 &#x2F;etc&#x2F;rsyncd_users.db </span><br><span class="line">[root@xy ~]# rsync --daemon  </span><br><span class="line">[root@xy ~]# netstat -antp |grep :873  </span><br><span class="line">[root@xy ~]# setfacl -m u:nobody:rwx &#x2F;filesrc </span><br></pre></td></tr></table></figure></li></ul><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]# rsync -avz rsync:&#x2F;&#x2F;user1@192.168.37.10&#x2F;filesrc &#x2F;filedst      # 下载 </span><br><span class="line">[root@xy ~]# rsync -avz &#x2F;filedst&#x2F;* rsync:&#x2F;&#x2F;user1@192.168.37.10&#x2F;filesrc&#96;   # 上传    </span><br></pre></td></tr></table></figure><h3 id="rsync-基于xinetd-inotifywait-实现单向实时同步："><a href="#rsync-基于xinetd-inotifywait-实现单向实时同步：" class="headerlink" title="rsync(基于xinetd) + inotifywait 实现单向实时同步："></a>rsync(基于xinetd) + inotifywait 实现单向实时同步：</h3><table><thead><tr><th>inotifywait 命令选项</th><th>说明</th></tr></thead><tbody><tr><td>-m</td><td>始终保持监听</td></tr><tr><td>-r</td><td>递归查询目录</td></tr><tr><td>-q</td><td>只打印监控事件信息</td></tr></tbody></table><h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]# yum -y install gcc*  </span><br><span class="line">[root@xy ~]# tar -xvf inotify-tools-3.14.tar.gz </span><br><span class="line">[root@xy ~]# cd inotify-tools-3.14.tar.gz</span><br><span class="line">[root@xy ~]# .&#x2F;configure &amp;&amp; make make install  </span><br><span class="line"></span><br><span class="line"># 监控动作：modify,create,attrib,move,delete </span><br><span class="line">[root@xy ~]# inotifywait -mrq -e 监控动作1,监控动作2 &#x2F;监控目录 &amp;     </span><br><span class="line">[root@xy ~]# inotifywait -mrq -e create,delete,modify &#x2F;filesrc &amp;   </span><br><span class="line">  #!&#x2F;bin&#x2F;bash  </span><br><span class="line">  Inotfiy &#x3D; &quot;inotifywait -mrq -e create,delete,modify &#x2F;filesrc&quot;</span><br><span class="line">  Rsync &#x3D; &quot;rsync -avz &#x2F;filesrc&#x2F;* root@192.168.37.20:&#x2F;filedst&quot;</span><br><span class="line">  $Inotfiy | while read directory event file</span><br><span class="line">  do</span><br><span class="line">     $Rsync</span><br><span class="line">  done  </span><br></pre></td></tr></table></figure><h3 id="rsync-基于xinetd-unison-inotify-实现双向实时同步："><a href="#rsync-基于xinetd-unison-inotify-实现双向实时同步：" class="headerlink" title="rsync(基于xinetd) + unison + inotify 实现双向实时同步："></a>rsync(基于xinetd) + unison + inotify 实现双向实时同步：</h3><h4 id="服务端-192-168-37-10"><a href="#服务端-192-168-37-10" class="headerlink" title="服务端(192.168.37.10)"></a>服务端(192.168.37.10)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]# tar -xzvf inotify-tools-3.14.tar.gz  </span><br><span class="line">[root@xy ~]# cd inotify-tools-3.14</span><br><span class="line">[root@xy ~]# .&#x2F;configure &amp;&amp; make &amp;&amp; make install  </span><br><span class="line">[root@xy ~]# tar -xzvf ocaml-3.10.1.tar.gz </span><br><span class="line">[root@xy ~]# cd ocmal-3.10.1</span><br><span class="line">[root@xy ~]# .&#x2F;configure</span><br><span class="line">[root@xy ~]# make world opt</span><br><span class="line">[root@xy ~]# make install</span><br><span class="line">[root@xy ~]# tar -xzvf unison-2.13.16.tar.gz</span><br><span class="line">[root@xy ~]# cd unison-2.13.16</span><br><span class="line">[root@xy ~]# make UISTYLE&#x3D;text THREADS&#x3D;true STATIC&#x3D;true  </span><br><span class="line">[root@xy ~]# cp unison &#x2F;usr&#x2F;local&#x2F;bin </span><br><span class="line">  #!&#x2F;bin&#x2F;bash  </span><br><span class="line">  Inotfiy &#x3D; &quot;inotifywait -mrq -e create,delete,modify &#x2F;filesrc&quot;</span><br><span class="line">  Unison &#x3D; &quot;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;unison -batch &#x2F;filesrc ssh:&#x2F;&#x2F;192.168.37.20&#x2F;filedst&quot;</span><br><span class="line">  $Inotfiy | while read directory event file</span><br><span class="line">  do</span><br><span class="line">     $Unison</span><br><span class="line">  done</span><br></pre></td></tr></table></figure><h4 id="客户端-192-168-37-20"><a href="#客户端-192-168-37-20" class="headerlink" title="客户端(192.168.37.20)"></a>客户端(192.168.37.20)</h4><blockquote><p>安装 inotify-tools-3.14.tar.gz，ocaml-3.10.1.tar.gz，unison-2.13.16.tar.gz</p></blockquote>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash  </span></span><br><span class="line">Inotfiy = <span class="string">&quot;inotifywait -mrq -e create,delete,modify /filesrc&quot;</span></span><br><span class="line">Unison = <span class="string">&quot;/usr/local/bin/unison -batch /filedst ssh://192.168.37.10/filesrc&quot;</span></span><br><span class="line"><span class="variable">$Inotfiy</span> | <span class="keyword">while</span> <span class="built_in">read</span> directory event file</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="variable">$Unison</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="Linux-日志概述"><a href="#Linux-日志概述" class="headerlink" title="Linux 日志概述"></a>Linux 日志概述</h2><h3 id="系统常见日志文件"><a href="#系统常见日志文件" class="headerlink" title="系统常见日志文件"></a>系统常见日志文件</h3><ul><li>syslog服务<ul><li>syslogd：系统</li><li>klogd：内核</li></ul></li></ul><table><thead><tr><th>日志文件</th><th>说明</th></tr></thead><tbody><tr><td>/var/log/cron</td><td>定时任务log</td></tr><tr><td>/var/log/cpus</td><td>打印信息log</td></tr><tr><td>/var/log/dmesg</td><td>内核自检log, <code>dmesg</code></td></tr><tr><td>/var/log/btmp</td><td>错误登录log, 二进制格式, 用<code>lastb</code>查看</td></tr><tr><td>/var/log/lastlog</td><td>最后一次登录时间log, <code>lastlog</code>查看</td></tr><tr><td>/var/log/mailog</td><td>邮件log</td></tr><tr><td><strong>/var/log/messages</strong></td><td>系统重要信息log</td></tr><tr><td>/var/log/secure</td><td>验证与授权log</td></tr><tr><td>/var/log/wtmp</td><td>永久记录所有用户登录, <code>last</code>查看</td></tr><tr><td>/var/run/utmp</td><td>当前已经登录用户信息, <code>w who users</code>查看</td></tr><tr><td>/var/log/httpd</td><td>RPM安装apache服务默认日志目录</td></tr></tbody></table><h3 id="日志格式-syslog-服务"><a href="#日志格式-syslog-服务" class="headerlink" title="日志格式: syslog 服务"></a>日志格式: syslog 服务</h3><p>配置路径: <code>/etc/syslog.conf</code><br>配置格式: <code>日志服务[链接符号]日志等级    日志记录位置</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">35 # Include all config files in &#x2F;etc&#x2F;rsyslog.d&#x2F;</span><br><span class="line">36 $IncludeConfig &#x2F;etc&#x2F;rsyslog.d&#x2F;*.conf</span><br><span class="line">54 *.info;mail.none;authpriv.none;cron.none      &#x2F;var&#x2F;log&#x2F;messages </span><br><span class="line">55 authpriv.*                                   &#x2F;var&#x2F;log&#x2F;secure</span><br><span class="line">56 *.emerg                                      *   # 每个用户</span><br><span class="line">60 mail.*                                      -&#x2F;var&#x2F;log&#x2F;maillog    # 异步写入</span><br></pre></td></tr></table></figure><table><thead><tr><th>日志等级（从低到高）</th><th>说明(级别越低，信息越详细)</th></tr></thead><tbody><tr><td>debug</td><td>一般调试信息</td></tr><tr><td>info</td><td>基本通知信息</td></tr><tr><td>notice</td><td>普通信息</td></tr><tr><td>wraning</td><td>警告信息</td></tr><tr><td>err/error</td><td>错误信息</td></tr><tr><td>crit</td><td>大于err</td></tr><tr><td>alert</td><td>警告,大于crit</td></tr><tr><td>emerg/panic</td><td>会导致系统不可用</td></tr><tr><td>*</td><td>所有日志等级</td></tr><tr><td>none</td><td>和* 相反</td></tr></tbody></table><h3 id="日志轮替-logrotate-切割-轮替"><a href="#日志轮替-logrotate-切割-轮替" class="headerlink" title="日志轮替 logrotate(切割,轮替)"></a>日志轮替 logrotate(切割,轮替)</h3><blockquote><p>旧日志移动开改名,同时建立新的空日志文件,当旧日志文件超出保存范围,会进行删除,系统自带配置文件<code>/etc/logrotate.conf</code>  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">20 # no packages own wtmp and btmp -- we&#39;ll rotate them here</span><br><span class="line">21 &#x2F;var&#x2F;log&#x2F;wtmp &#123;</span><br><span class="line">22     monthly</span><br><span class="line">23     create 0664 root utmp</span><br><span class="line">24     minsize 1M</span><br><span class="line">25     rotate 1</span><br><span class="line">26 &#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>配置参数</th><th>说明</th></tr></thead><tbody><tr><td>daily</td><td>日志轮替周期是每天</td></tr><tr><td>weekly</td><td>每周</td></tr><tr><td>monthly</td><td>每月</td></tr><tr><td>compress</td><td>日志轮替时,压缩旧日志</td></tr><tr><td>rotate</td><td>保留日志个数</td></tr><tr><td>create mode owner group</td><td>建立新日志,指定权限与所有者/所属组</td></tr><tr><td>mail address</td><td>发送邮件</td></tr><tr><td>missingok</td><td>日志不存在忽略日志警告信息</td></tr><tr><td>notifempty</td><td>若日志为空,不进行轮替</td></tr><tr><td>minsize</td><td>轮替最小值</td></tr><tr><td>size</td><td>大于size才会轮替</td></tr><tr><td>dateext</td><td>使用日期作为轮替文件后缀</td></tr><tr><td>sharedscripts</td><td>此关键字后脚本只执行一次</td></tr><tr><td>prerotate/endscript</td><td>轮替前执行脚本</td></tr><tr><td>postrotate/endscript</td><td>轮替后执行脚本</td></tr></tbody></table><h2 id="ELK-Elasticsearch-Logstash-Kibana"><a href="#ELK-Elasticsearch-Logstash-Kibana" class="headerlink" title="ELK(Elasticsearch+Logstash+Kibana)"></a>ELK(Elasticsearch+Logstash+Kibana)</h2><h3 id="ELK日志分析："><a href="#ELK日志分析：" class="headerlink" title="ELK日志分析："></a>ELK日志分析：<div id="ELK"></div></h3><blockquote><p><strong>ELK</strong>是三个开源软件的缩写，分别表示：<strong>Elasticsearch、Logstash、Kibana</strong>它们都是开源软件,新增了<strong>FileBeat</strong> ，轻量级的日志收集处理工具；</p></blockquote><ul><li><strong>Filebeat</strong>：属于Beats<ul><li><strong>Filebeat</strong>：搜集文件数据 √</li><li><strong>Packetbeat</strong>：搜集网络流量数据</li><li><strong>Topbeat</strong>：搜集系统、进程和文件系统级别的CPU和内存使用情况  </li><li><strong>Winlogbeat</strong>：搜集Windows事件日志数据</li></ul></li><li>**Logstash(5044)**：负责日志的收集、分析、功率，支持大量数据获取方式，C/S架构，client 端安装在需要收集日志的主机上，server端负责将收集到的节点日志进行过滤发至Elastiserach上; </li><li>**ElastiSearch(9200)**：开源分布式搜索引擎，提供搜集、分析、存储数据三大功能;</li><li>**Kibana(5601)**：为 Logstash 和 Elasticserach 提供Web 界面;</li></ul><img src="/posts/3eb5a9f1/ELK.jpg" class title="[ELK]"> <img src="/posts/3eb5a9f1/ELK-Filebeat.jpg" class title="[ELK-Filebeat]">  <h3 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h3><h4 id="索引-分片-副本"><a href="#索引-分片-副本" class="headerlink" title="索引 分片 副本"></a>索引 分片 副本</h4><ul><li><a href="https://my.oschina.net/kenblog/blog/3009800">参考</a></li><li><code>index索引</code>:就类似于关系型数据库的<code>数据库</code>，数据库建立好，然后就把数据存到index中；<ul><li><code>Mapping</code>:定义文档字段的类型；</li><li><code>Settimt</code>:定义不同数据分布；</li></ul></li><li><code>shard分片</code>:对于分布式的搜索引擎, <strong>索引通常都会分解成不同部分</strong>, 而这些分布在不同节点的数据就是分片,<code>一个分片只存储一部分数据</code>，所有分片加起来就是一个完整的索引数据；<ul><li>分片分为primary shard主分片和replica副本分片,一个索引可以创建多个分片数量，es默认创建的就是5个主分片数量，可以根据自己的实际业务确定主分片数量;</li><li>注意的是主分片数量一旦确定创建就无法进行修改。</li></ul></li><li><code>replica副本</code>:就是对主分片（Primary shard）的备份；<ul><li>每个主分片（primary shard）不会和副本分片（replica shard）存在于同一个节点中，有效的保证es的数据高可用性；</li></ul></li></ul><h3 id="ELK-服务端部署-192-168-37-10"><a href="#ELK-服务端部署-192-168-37-10" class="headerlink" title="ELK 服务端部署(192.168.37.10)"></a>ELK 服务端部署(192.168.37.10)</h3><ul><li><a href="https://blog.csdn.net/wo18237095579/article/details/103880397/">Docker部署01</a></li><li><a href="https://www.cnblogs.com/dalianpai/p/11986481.html">Docker部署02</a></li><li><a href="https://www.cnblogs.com/cocowool/p/deploy_elk_and_collect_logs_via_filebeat.html">K8S部署</a></li></ul><h4 id="配置JAVA环境"><a href="#配置JAVA环境" class="headerlink" title="配置JAVA环境"></a>配置JAVA环境</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@xy elk]# mkdir &#x2F;usr&#x2F;local&#x2F;java</span><br><span class="line">[root@xy elk]# tar -xzvf  jdk-8u261-linux-x64.tar.gz -C &#x2F;usr&#x2F;local&#x2F;java</span><br><span class="line">[root@xy ~]# vim &#x2F;etc&#x2F;profile</span><br><span class="line">  # JAVA ENVIRONMENT</span><br><span class="line">  export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.8.0_261</span><br><span class="line">  export CLASSPATH&#x3D;.:$JAVA_HOME&#x2F;jre&#x2F;lib&#x2F;rt.jar:$JAVA_HOME&#x2F;lib&#x2F;dt.jar:$JAVA_HOME&#x2F;lib&#x2F;tools.jar</span><br><span class="line">  export PATH&#x3D;$PATH:$JAVA_HOME&#x2F;bin</span><br><span class="line">[root@xy ~]# source &#x2F;etc&#x2F;profile</span><br><span class="line">[root@xy ~]# java -version   # 验证</span><br></pre></td></tr></table></figure><h4 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]# mkdir &#x2F;elk;cd &#x2F;elk  </span><br><span class="line">[root@xy elk]# wget https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;downloads&#x2F;elasticsearch&#x2F;elasticsearch-6.2.3.tar.gz</span><br><span class="line">[root@xy elk]# wget https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;downloads&#x2F;logstash&#x2F;logstash-6.2.3.tar.gz</span><br><span class="line">[root@xy elk]# wget https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;downloads&#x2F;kibana&#x2F;kibana-6.2.3-linux-x86_64.tar.gz</span><br><span class="line">[root@xy elk]# tar -xzvf elasticsearch-6.2.3.tar.gz </span><br><span class="line">[root@xy elk]# tar -xzvf logstash-6.2.3.tar.gz</span><br><span class="line">[root@xy elk]# tar -xf kibana-6.2.3-linux-x86_64.tar.gz  </span><br></pre></td></tr></table></figure><h4 id="配置-elasticserch"><a href="#配置-elasticserch" class="headerlink" title="配置 elasticserch"></a>配置 elasticserch</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@xy elk]# chown -Rf root:root kibana-6.2.3-linux-x86_64</span><br><span class="line">[root@xy elk]# cp -a elasticsearch-6.2.3&#x2F; logstash-6.2.3&#x2F; kibana-6.2.3-linux-x86_64&#x2F; &#x2F;usr&#x2F;local</span><br><span class="line">[root@xy elk]# yum install -y java-1.8*   # JAVA 环境</span><br><span class="line">[root@xy elk]# useradd elasticsearch   </span><br><span class="line">[root@xy elk]# chown elasticsearch:elasticsearch &#x2F;usr&#x2F;local&#x2F;elasticsearch-6.2.3&#x2F;</span><br><span class="line">[root@xy elk]# su elasticsearch  # 以elasticsearch 用户运行</span><br><span class="line">[elasticsearch@xy elasticsearch-6.2.3]$ .&#x2F;bin&#x2F;elasticsearch -d  </span><br><span class="line">[elasticsearch@xy elasticsearch-6.2.3]$ netstat -antp  # 9200端口  </span><br><span class="line">[elasticsearch@xy elasticsearch-6.2.3]$ cat &#x2F;usr&#x2F;local&#x2F;elasticserch-6.2.3&#x2F;logs&#x2F;elasticsearch.log</span><br><span class="line">[elasticsearch@xy elasticsearch-6.2.3]$ curl localhost:9200  </span><br></pre></td></tr></table></figure><h4 id="配置-logstash"><a href="#配置-logstash" class="headerlink" title="配置 logstash"></a>配置 logstash</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@xy logstash-6.2.3]# vim &#x2F;vendor&#x2F;bundle&#x2F;jruby&#x2F;2.3.0&#x2F;gems&#x2F;logstash-patterns-core-4.1.2&#x2F;patterns&#x2F;grok-patterns   </span><br><span class="line">  # Nginx log</span><br><span class="line">  WZ ([^ ]*)</span><br><span class="line">  NGINXACCESS %&#123;IP:remote_ip&#125; \- \- \[%&#123;HTTPDATE:timestamp&#125;\] &quot;%&#123;WORD:method&#125; %&#123;WZ:request&#125; HTTP&#x2F;%&#123;NUMBER:httpversion&#125;&quot; %&#123;NUMBER:status&#125; %&#123;NUMBER:bytes&#125; %&#123;QS:referer&#125; %&#123;QS:agent&#125; %&#123;QS:xforward&#125;</span><br><span class="line">   </span><br><span class="line">[root@xy logstash-6.2.3]# vim &#x2F;usr&#x2F;local&#x2F;logstash-6.2.3&#x2F;default.conf </span><br><span class="line">  input &#123;</span><br><span class="line">      beats&#123;</span><br><span class="line">          port &#x3D;&gt; &quot;5044&quot;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  # 数据过滤</span><br><span class="line">  filter &#123;</span><br><span class="line">      grok &#123;</span><br><span class="line">          match &#x3D;&gt; &#123; &quot;message&quot; &#x3D;&gt; &quot;%&#123;NGINXACCESS&#125;&quot; &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      geoip &#123;</span><br><span class="line">          # nginx 客户端 ip</span><br><span class="line">          source &#x3D;&gt; &quot;192.168.37.20&quot;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  # 输出配置为本机的 9200 端口,这是elasticsearch 服务的监听端口</span><br><span class="line">  output &#123;</span><br><span class="line">      elasticsearch &#123;</span><br><span class="line">          hosts &#x3D;&gt; [&quot;127.0.0.1:9200&quot;]</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">    </span><br><span class="line">[root@xy logstash-6.2.3]# nohup .&#x2F;bin&#x2F;logstash -f default.conf &amp;</span><br><span class="line">[root@xy logstash-6.2.3]# tail -f nohup.out</span><br><span class="line">[root@xy logstash-6.2.3]# netstat -antp | grep 5044    </span><br></pre></td></tr></table></figure><h4 id="配置-Kibana"><a href="#配置-Kibana" class="headerlink" title="配置 Kibana"></a>配置 Kibana</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xy kibana-6.2.3-linux-x86_64]# vim &#x2F;usr&#x2F;local&#x2F;kibana-6.2.3-linux-x86_64&#x2F;config&#x2F;kibana.yml  </span><br><span class="line">  server.host: &quot;192.168.37.10&quot;</span><br><span class="line">[root@xy kibana-6.2.3-linux-x86_64]# nohup .&#x2F;bin&#x2F;kibana &amp;</span><br><span class="line">[root@xy kibana-6.2.3-linux-x86_64]# tail -f nohup.out</span><br><span class="line">[root@xy kibana-6.2.3-linux-x86_64]# netstat -antp | grep 5601  </span><br><span class="line"># 测试：192.168.37.10:5601   # Kibana 测试地址</span><br></pre></td></tr></table></figure><h4 id="问题解决："><a href="#问题解决：" class="headerlink" title="问题解决："></a>问题解决：</h4><ul><li><p>max file descriptors [4096] for elasticsearch process is too low, increase to at least [65535]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[elasticsearch@xy ~]$ sudo vim &#x2F;etc&#x2F;security&#x2F;limits.conf</span><br><span class="line">  * soft    nofile          65536</span><br><span class="line">  *    hard    nofile          65536</span><br></pre></td></tr></table></figure></li><li><p>dockercompose部署ES遇到 Error opening log file ‘logs/gc.log’: Permission denied</p><ul><li><a href="https://blog.csdn.net/qq_15256981/article/details/88605824">参考</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- TAKE_FILE_OWNERSHIP&#x3D;true  #volumes 挂载权限问题</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="Nginx部署-192-168-37-20"><a href="#Nginx部署-192-168-37-20" class="headerlink" title="Nginx部署(192.168.37.20)"></a>Nginx部署(192.168.37.20)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]# yum install -y nginx  </span><br><span class="line">[root@xy ~]# wget https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;downloads&#x2F;beats&#x2F;filebeat&#x2F;filebeat-6.2.3-linux-x86_64.tar.gz  </span><br><span class="line">[root@xy ~]# tar -xzf .&#x2F;filebeat-6.2.3-linux-x86_64.tar.gz -C &#x2F;usr&#x2F;local&#x2F;  </span><br><span class="line">[root@xy filebeat-6.2.3-linux-x86_64]# vim filebeat.yml  </span><br><span class="line">  enable：false                 #修改为true</span><br><span class="line">  paths：&#x2F;var&#x2F;log&#x2F;*.log         #修改为&#x2F;var&#x2F;log&#x2F;nginx&#x2F;*.log</span><br><span class="line">  #output.elasticsearch:        #将此行注释掉</span><br><span class="line">  #hosts: [&quot;localhost:9200&quot;]    #将此行注释掉</span><br><span class="line">  output.logstash:              #取消此行注释</span><br><span class="line">  hosts: [&quot;192.168.37.10:5044&quot;] #取消此行注释并修改IP 地址为ELK 服务器地址</span><br><span class="line">[root@xy filebeat-6.2.3-linux-x86_64]# nohup .&#x2F;filebeat -e -c filebeat.yml &amp;  </span><br><span class="line">[root@xy filebeat-6.2.3-linux-x86_64]# tailf nohup.out  </span><br></pre></td></tr></table></figure><img src="/posts/3eb5a9f1/ELK.png" class title="[ELK]">  <img src="/posts/3eb5a9f1/ELK01.png" class title="[ELK配置-01]">  <img src="/posts/3eb5a9f1/ELK02.png" class title="[ELK配置-02]">  <h3 id="设置服务自启动"><a href="#设置服务自启动" class="headerlink" title="设置服务自启动"></a>设置服务自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!bin/bash</span></span><br><span class="line"><span class="comment"># chkconfig: 2345 21  89</span></span><br><span class="line"><span class="comment"># description: elasticsearch</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># JAVA_HOME=/usr/local/jdk1.8</span></span><br><span class="line">ES_HOME=/usr/<span class="built_in">local</span>/elasticsearch</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">    start) sudo -iu elasticsearch <span class="variable">$ES_HOME</span>/bin/elasticsearch &amp;;;</span><br><span class="line">    *)  <span class="built_in">echo</span> <span class="string">&quot;require start&quot;</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># chkconfig: 2345 50  50</span></span><br><span class="line"><span class="comment"># description: logstash</span></span><br><span class="line"></span><br><span class="line">LS_HOME=/usr/<span class="built_in">local</span>/logstash</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">    start)sudo -iu elasticsearch <span class="variable">$LS_HOME</span>/bin/logstash -f <span class="variable">$LS_HOME</span>/config &amp;;;</span><br><span class="line">    *) <span class="built_in">echo</span> <span class="string">&quot;require start&quot;</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">-----------------------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># chkconfig: 2345 98  02</span></span><br><span class="line"><span class="comment"># description: kibana</span></span><br><span class="line"></span><br><span class="line">KIBANA_HOME=/usr/<span class="built_in">local</span>/kibana</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">    start) <span class="variable">$KIBANA_HOME</span>/bin/kibana &amp;;;</span><br><span class="line">    *) <span class="built_in">echo</span> <span class="string">&quot;require start&quot;</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><h3 id="tomcat-服务自启动"><a href="#tomcat-服务自启动" class="headerlink" title="tomcat 服务自启动"></a>tomcat 服务自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># description: Tomcat8 Start Stop Restart</span></span><br><span class="line"><span class="comment"># processname: tomcat8</span></span><br><span class="line"><span class="comment"># chkconfig: 234 20 80</span></span><br><span class="line"></span><br><span class="line">CATALINA_HOME=/usr/<span class="built_in">local</span>/tomcat8/</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">        sh <span class="variable">$CATALINA_HOME</span>/bin/startup.sh</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        sh <span class="variable">$CATALINA_HOME</span>/bin/shutdown.sh</span><br><span class="line">        ;;</span><br><span class="line">    restart)</span><br><span class="line">        sh <span class="variable">$CATALINA_HOME</span>/bin/shutdown.sh</span><br><span class="line">        sh <span class="variable">$CATALINA_HOME</span>/bin/startup.sh</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&#x27;please use : tomcat &#123;start | stop | restart&#125;&#x27;</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Devops, linux, ES </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> Devops </tag>
            
            <tag> ES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python</title>
      <link href="/posts/a4d4b8b8.html"/>
      <url>/posts/a4d4b8b8.html</url>
      
        <content type="html"><![CDATA[<p>2019-09-10-python</p><a id="more"></a><h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><blockquote><p>注释：<br><code>单行#comment  多行&#39;&#39;&#39;comment&#39;&#39;&#39; &quot;&quot;&quot;comment&quot;&quot;&quot;</code>   </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python2 -m pip install --upgrade pip  </span><br><span class="line">pip install virtualenv virtualenvwrapper  </span><br><span class="line">virtualenv testvir  </span><br><span class="line">active.bat 或者 deactive.bat  </span><br><span class="line">pip install flask  </span><br><span class="line">pip freeze &gt;requirements.txt  </span><br></pre></td></tr></table></figure><h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><img src="/posts/a4d4b8b8/python01.png" class title="[python01]">  <img src="/posts/a4d4b8b8/python02.png" class title="[python02]"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> package <span class="keyword">import</span> module  </span><br><span class="line"><span class="keyword">import</span> module <span class="keyword">as</span> alias</span><br></pre></td></tr></table></figure><h3 id="变量和数据类型"><a href="#变量和数据类型" class="headerlink" title="变量和数据类型"></a>变量和数据类型</h3><blockquote><p>对象（object）是内存中专门用来存储数据的一块区域，<code>id</code> &amp;&amp; <code>type</code> &amp;&amp; <code>value</code> </p></blockquote><blockquote><p>变量和对象：</p><p>(1)对象并没有直接存储到变量中，Python中<code>变量更像是给对象起了一个别名</code>；</p><p>(2)<code>变量中存储的不是对象的值，而是对象的id（内存地址）</code>，使用变量时，实际上就是在<code>通过对象id在查找对象</code>；</p><p>(3)变量中保存的对象，只有在为变量重新赋值时才会改变；</p><p>(4)变量和变量之间是相互独立的，修改一个变量不会影响另一个变量  </p></blockquote><blockquote><p>python中的数据类型: 不可变(<code>Number/String/Tuple</code>) 和 可变(<code>list/dict/set</code>)，不可变值得是不允许变量的值发生变化，如果改变变量的值，相当于新建了一个对象，而对于相同值的对象，在内存中只有一个对象。 </p></blockquote><blockquote><p>如果改变数字数据类型的值，意味着是一个新的对象，将会重新分配内存空间  </p></blockquote><blockquote><p>判断是否引用的是同一个对象: x is y,类似于id(x)===id(y)</p></blockquote><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><ul><li><p>整数、浮点数(1.23x10^9: 1.23e9)</p></li><li><p>字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;abc&#x27;</span>, <span class="string">&quot;xyz&quot;</span>         &gt;&gt; abc xyz</span><br><span class="line"><span class="string">&#x27;I\&#x27;m\&quot;OK\&quot;!&#x27;</span>        &gt;&gt; I<span class="string">&#x27;m OK！</span></span><br><span class="line"><span class="string">r&#x27;</span>\\\t\\<span class="string">&#x27;            &gt;&gt; &#x27;</span>\\\t\\<span class="string">&#x27;  # 原始字符串r</span></span><br><span class="line"><span class="string">r&#x27;</span><span class="string">&#x27;&#x27;</span>hello,\nworld<span class="string">&#x27;&#x27;&#x27; &gt;&gt; &#x27;hello,\\nworld&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>布尔值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span>: ture <span class="keyword">and</span> flase  &gt;&gt; false</span><br><span class="line"><span class="keyword">or</span>:  false <span class="keyword">or</span> true   &gt;&gt; true</span><br><span class="line"><span class="keyword">not</span>: <span class="keyword">not</span> false       &gt;&gt; true</span><br></pre></td></tr></table></figure></li></ul><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><blockquote><p>变量名必须是<code>大小写英文、数字和_</code>的组合，且不能用数字开头, Python支持多种数据类型，在计算机内部，可以把任何数据都看成一个<code>“对象”</code>，而<code>变量</code>就是在程序中用来<code>指向这些数据对象</code>的，对变量赋值就是把数据和变量给关联起来.  </p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">a = <span class="string">&#x27;ABC&#x27;</span><span class="comment"># 内存中创建&#x27;ABC&#x27;字符串</span></span><br><span class="line">b = a<span class="comment"># 内存创建变量b指向&#x27;ABC&#x27;</span></span><br><span class="line">a = <span class="string">&#x27;XYZ&#x27;</span>   <span class="comment"># 创建&#x27;XYZ&#x27;, 将a指向此字符串</span></span><br><span class="line">print(b)</span><br><span class="line"></span><br><span class="line">&gt;&gt; ABC</span><br></pre></td></tr></table></figure><h3 id="字符串和编码"><a href="#字符串和编码" class="headerlink" title="字符串和编码"></a>字符串和编码</h3><h4 id="Python-3版本中，字符串是以Unicode编码"><a href="#Python-3版本中，字符串是以Unicode编码" class="headerlink" title="Python 3版本中，字符串是以Unicode编码"></a>Python 3版本中，字符串是以<code>Unicode</code>编码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ord(<span class="string">&#x27;中&#x27;</span>)  &gt;&gt; <span class="number">20013</span></span><br><span class="line">chr(<span class="number">25991</span>) &gt;&gt; <span class="string">&#x27;文&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;中文&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">&gt;&gt; <span class="string">b&#x27;\xe4\xb8\xad\xe6\x96\x87&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">b&#x27;\xe4\xb8\xad\xff&#x27;</span>.decode(<span class="string">&#x27;utf-8&#x27;</span>, errors=<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line">&gt;&gt; <span class="string">&#x27;中&#x27;</span></span><br><span class="line"></span><br><span class="line">len(<span class="string">b&#x27;ABC&#x27;</span>)  &gt;&gt; <span class="number">3</span><span class="comment"># 字节</span></span><br><span class="line">len(<span class="string">&#x27;中文&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))  &gt;&gt; <span class="number">6</span></span><br></pre></td></tr></table></figure><h4 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出(%)"></a>格式化输出(<code>%</code>)</h4><ul><li><p>%s %d %?</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;Hello, %s&#x27;</span> % <span class="string">&#x27;world&#x27;</span>    &gt;&gt; <span class="string">&#x27;Hello, world&#x27;</span></span><br><span class="line">print(<span class="string">&#x27;%2d-%02d&#x27;</span> % (<span class="number">3</span>, <span class="number">1</span>))  &gt;&gt; 补空格<span class="number">3</span><span class="number">-01</span></span><br><span class="line">print(<span class="string">&#x27;%.2f&#x27;</span> % <span class="number">3.1415926</span>)   &gt;&gt; <span class="number">3.14</span></span><br></pre></td></tr></table></figure></li><li><p>format()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;Hello, &#123;0&#125;, 成绩提升了&#123;1:.1f&#125;%&#x27;</span>.format(<span class="string">&#x27;小明&#x27;</span>, <span class="number">17.125</span>)  &gt;&gt; <span class="string">&#x27;Hello, 小明, 成绩提升了17.1%&#x27;</span> </span><br></pre></td></tr></table></figure></li><li><p>格式化字符串</p><ul><li>格式化字符串，可以通过在字符串前添加一个f来创建一个格式化字符串</li><li>在格式化字符串中可以直接嵌入变量<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c = <span class="string">f&#x27;hello <span class="subst">&#123;a&#125;</span> <span class="subst">&#123;b&#125;</span>&#x27;</span> \ print(<span class="string">f&#x27;a = <span class="subst">&#123;a&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="list-tuple-dict-set"><a href="#list-tuple-dict-set" class="headerlink" title="list tuple dict set"></a>list tuple dict set</h3><h4 id="list"><a href="#list" class="headerlink" title="list[]"></a>list[]</h4><p>Python内置的数据类型列表：<code>list</code>是一种有序的集合，可以随时<code>添加</code>和<code>删除</code>其中的元素 </p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>list.append()</td><td>追加元素到末尾</td></tr><tr><td>list.insert()</td><td>插入到指定位置</td></tr><tr><td>list.pop()方法</td><td>删除指定位置元素</td></tr><tr><td>list.len()</td><td>列表元素个数</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">classmates = [<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>]  &gt;&gt; [<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>]</span><br><span class="line">len(classmates)  &gt;&gt; <span class="number">3</span></span><br><span class="line">classmates[<span class="number">-1</span>]   &gt;&gt; <span class="string">&#x27;Tracy&#x27;</span></span><br><span class="line">classmates[<span class="number">-2</span>]   &gt;&gt; <span class="string">&#x27;Bob&#x27;</span></span><br><span class="line">classmates.append(<span class="string">&#x27;Adam&#x27;</span>)  &gt;&gt; [<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>, <span class="string">&#x27;Adam&#x27;</span>]</span><br><span class="line">classmates.insert(<span class="number">1</span>, <span class="string">&#x27;Jack&#x27;</span>)  &gt;&gt; [<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>, <span class="string">&#x27;Adam&#x27;</span>]</span><br><span class="line">classmates.pop(3)          &gt;&gt; &#x27;Tracy&#x27; --&gt;[&#x27;Michael&#x27;, &#x27;Jack&#x27;, &#x27;Bob&#x27;, &#x27;Adam&#x27;]</span><br><span class="line">classmates[<span class="number">1</span>] = <span class="string">&#x27;Sarah&#x27;</span>       &gt;&gt; [<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Sarah&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>]</span><br><span class="line"></span><br><span class="line">L = [<span class="string">&#x27;Apple&#x27;</span>, <span class="number">123</span>, <span class="literal">True</span>]</span><br><span class="line">s = [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;java&#x27;</span>, [<span class="string">&#x27;asp&#x27;</span>, <span class="string">&#x27;php&#x27;</span>], <span class="string">&#x27;scheme&#x27;</span>]</span><br></pre></td></tr></table></figure><h4 id="tuple"><a href="#tuple" class="headerlink" title="tuple()"></a>tuple()</h4><p>Python内置的数据类型<code>有序列表</code>叫元组：<code>tuple</code>，tuple和list非常类似，但是<code>tuple一旦初始化就不能修改</code>  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">classmates = (<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>)</span><br><span class="line">t = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, [<span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>])</span><br><span class="line">&gt;&gt; t[<span class="number">2</span>][<span class="number">0</span>] = <span class="string">&#x27;X&#x27;</span></span><br><span class="line">&gt;&gt; t[<span class="number">2</span>][<span class="number">1</span>] = <span class="string">&#x27;Y&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="dict"><a href="#dict" class="headerlink" title="dict{}"></a>dict{}</h4><blockquote><p>字典的<code>键</code>可以是任意的<code>不可变对象</code>(int, str, bool, tuple…), 不能重复；字典的值可以是任何对象<br>{key1:value1,key2:value2,…}  </p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">d = dict(name=<span class="string">&#x27;Li&#x27;</span>,age=<span class="string">&#x27;1&#x27;</span>,gender=<span class="string">&#x27;boy&#x27;</span>)</span><br><span class="line">d = dict([(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;Li&#x27;</span>),(<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;1&#x27;</span>)])</span><br><span class="line">d = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Li&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;boy&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">d[<span class="string">&#x27;name&#x27;</span>]&gt;&gt; Li</span><br><span class="line">d[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&quot;Xing&quot;</span><span class="comment"># 修改</span></span><br><span class="line">d.get(<span class="string">&#x27;name&#x27;</span>, default)&gt;&gt; Li <span class="comment"># key存在返回对应值，不存在返回默认值</span></span><br><span class="line">d.pop(<span class="string">&#x27;name&#x27;</span>)&gt;&gt; 删除name对应的值</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> d.keys():<span class="comment"># keys()  返回序列，保存由字典所有键</span></span><br><span class="line">print(k,d[k])</span><br><span class="line"></span><br><span class="line">&gt;&gt; name Li</span><br><span class="line">   age <span class="number">1</span></span><br><span class="line">   gender by</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> d.values():  <span class="comment"># values()  返回序列，保存由字典所有值</span></span><br><span class="line">print(v)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> d.items(): <span class="comment"># items() dict_item([(&#x27;name&#x27;,&#x27;Li&#x27;), (&#x27;age&#x27;, &#x27;1&#x27;), (&#x27;gender&#x27;, &#x27;boy&#x27;)])</span></span><br><span class="line">print(k , <span class="string">&#x27;=&#x27;</span> , v)</span><br><span class="line"></span><br><span class="line">&gt;&gt; name = Li</span><br><span class="line">   age = <span class="number">18</span></span><br><span class="line">   gender = boy</span><br></pre></td></tr></table></figure><h4 id="set"><a href="#set" class="headerlink" title="set{}"></a>set{}</h4><blockquote><p>集合中只能存储不可变对象，<code>不重复且无序</code>; 将字典转为集合只包含字典中键<br>对于不变对象来说，调用对象自身的任意方法，也不会改变该对象自身的内容。相反，这些方法会创建新的对象并返回，这样，就保证了不可变对象本身永远是不可变的</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s = &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;1,&#x27;</span> <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>&#125;  &gt;&gt; &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">s = set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>])&gt;&gt; &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">s.add(<span class="number">5</span>)</span><br><span class="line">s.remove(<span class="number">4</span>)</span><br></pre></td></tr></table></figure><h3 id="条件判断-amp-amp-循环-注意缩进"><a href="#条件判断-amp-amp-循环-注意缩进" class="headerlink" title="条件判断&amp;&amp;循环(注意缩进)"></a>条件判断&amp;&amp;循环(注意缩进)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断水仙花数(n&gt;=3)</span></span><br><span class="line">i = <span class="number">100</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">1000</span>:</span><br><span class="line">bai = i // <span class="number">100</span></span><br><span class="line"><span class="comment"># shi = (i -a * 100) // 10</span></span><br><span class="line">shi = i // <span class="number">10</span> % <span class="number">10</span></span><br><span class="line">ge = i % <span class="number">10</span></span><br><span class="line"><span class="keyword">if</span> bai**<span class="number">3</span> + shi**<span class="number">3</span> + ge**<span class="number">3</span> == i:</span><br><span class="line">print(i)</span><br><span class="line">i += <span class="number">1</span></span><br><span class="line">----------------------------------------</span><br><span class="line"><span class="comment"># 判断质数(只能被1和它自身整除)</span></span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> *</span><br><span class="line">begin = time()</span><br><span class="line">num = int(input(<span class="string">&#x27;输入大于1的整数：&#x27;</span>))</span><br><span class="line">i = <span class="number">2</span> </span><br><span class="line"><span class="keyword">while</span> i &lt;= num: <span class="comment"># 取出 2-num 所有数</span></span><br><span class="line">flag = <span class="literal">True</span> <span class="comment"># </span></span><br><span class="line">j = <span class="number">2</span></span><br><span class="line"><span class="keyword">while</span> j &lt;= i ** <span class="number">0.5</span>:</span><br><span class="line"><span class="keyword">if</span> i % j == <span class="number">0</span>:<span class="comment"># num不是质数 </span></span><br><span class="line">flag = <span class="literal">False</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">j += <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> flag:</span><br><span class="line"><span class="comment"># pass</span></span><br><span class="line">print(i)</span><br><span class="line">i += <span class="number">1</span></span><br><span class="line">end = time()</span><br><span class="line">print(<span class="string">&quot;use time=&quot;</span>,end - begin, <span class="string">&#x27;秒&#x27;</span>)</span><br><span class="line">----------------------------------------------</span><br><span class="line"><span class="comment"># 99乘法表(嵌套)</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">9</span>:</span><br><span class="line">i += <span class="number">1</span><span class="comment"># 外层高度</span></span><br><span class="line"><span class="keyword">while</span> j &lt; i:<span class="comment"># 内层宽度</span></span><br><span class="line">j += <span class="number">1</span></span><br><span class="line">print(<span class="string">f&quot;<span class="subst">&#123;j&#125;</span>*<span class="subst">&#123;i&#125;</span>=<span class="subst">&#123;i*j&#125;</span> &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">print()</span><br><span class="line">----------------------------------------------</span><br><span class="line"><span class="comment"># break &amp;&amp; continue(对就近循环起作用)</span></span><br><span class="line">i = <span class="number">0</span> </span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">5</span>:</span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> i == <span class="number">2</span>:</span><br><span class="line"><span class="keyword">break</span><span class="comment"># 结束整个循环</span></span><br><span class="line"><span class="keyword">continue</span> <span class="comment"># 结束当次循环</span></span><br><span class="line">print(i)</span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">&#x27;循环结束&#x27;</span>)</span><br><span class="line">---------------------------------------------</span><br><span class="line">names = [<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    print(name)</span><br></pre></td></tr></table></figure><h3 id="迭代器：iter和生成器：yield"><a href="#迭代器：iter和生成器：yield" class="headerlink" title="迭代器：iter和生成器：yield"></a>迭代器：iter和生成器：yield</h3><blockquote><p>迭代器是访问集合元素的一种方式，是可以记住遍历的位置的对象，从集合第一个元素开始到所有元素被访问完结束，只能往前不会后退；基本方法<code>iter()和next()</code>，字符串、列表和元组均可用于创建迭代器  </p></blockquote><blockquote><p><code>生成器</code>是一个<code>返回迭代器的函数</code>，只能用于迭代操作，更简单点理解生成器就是一个迭代器，调用一个<code>生成器函数</code>，返回的是一个<code>迭代器对象</code>，在调用生成器运行的过程中，每次遇到 yield 时函数<code>会暂停并保存当前所有的运行信息</code>，返回 yield 的值, 并在下一次执行 next() 方法时从当前位置继续运行。  </p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fibonaci</span>(<span class="params">n,w=<span class="number">0</span></span>):</span><span class="comment"># 生成器函数:斐波那契</span></span><br><span class="line">    a, b, counter = <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span>(counter &gt;n):</span><br><span class="line">    <span class="keyword">return</span> </span><br><span class="line">    <span class="keyword">yield</span> a</span><br><span class="line">    a, b = b, a + b</span><br><span class="line">    print(<span class="string">&#x27;%d,%d&#x27;</span> % (a,b))</span><br><span class="line">    counter +=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">f = fibonaci(<span class="number">3</span>,<span class="number">0</span>) <span class="comment"># f 是一个迭代器，由生成器返回生成</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">print(next(f), enf=<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">sys.exit()</span><br><span class="line">------------</span><br><span class="line">Output:</span><br><span class="line"><span class="number">0</span> <span class="number">1</span>,<span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span>,<span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span>,<span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><ul><li>函数是一个对象，在内存中专门用来存储数据的一块区域；如果形参执行的是一个对象，当通过形参去改对象时，会影响到所有指向该对象的变量；<em>print(fn)，fn是函数对象，实际是打印函数对象；而print(fn())，则是在打印fn()函数的返回值</em>   </li><li>定义:  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">functionName</span>(<span class="params">argu1, argu2, ...</span>):</span></span><br><span class="line">  code block</span><br></pre></td></tr></table></figure></li></ul><h4 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数:"></a>函数的参数:</h4><ul><li><p>位置参数，调用函数时，传入的两个值按照位置顺序依次赋给参数x和n</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">power</span>(<span class="params">x,n</span>):</span></span><br><span class="line">  s = <span class="number">1</span></span><br><span class="line">  <span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">  n = n <span class="number">-1</span></span><br><span class="line">  s = s * x</span><br><span class="line">  <span class="keyword">return</span> s</span><br></pre></td></tr></table></figure></li><li><p>默认参数，必须指向不变对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_end</span>(<span class="params">L=None</span>):</span></span><br><span class="line">  <span class="keyword">if</span> L <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">     L = []</span><br><span class="line">     L.append(<span class="string">&#x27;END&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> L</span><br></pre></td></tr></table></figure></li><li><p>可变参数，允许传入0个或任意个参数，这些可变参数在函数调用时自动组装为一个<code>tuple</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span>(<span class="params">*numbers</span>):</span><span class="comment"># *nums表示把nums这个list的所有元素作为可变参数传进去</span></span><br><span class="line">  sum = <span class="number">0</span></span><br><span class="line">  <span class="keyword">for</span> n <span class="keyword">in</span> numbers:</span><br><span class="line">    sum = sum + n * n</span><br><span class="line">  <span class="keyword">return</span> sum</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calc(*nums)</span><br><span class="line">    <span class="number">14</span></span><br></pre></td></tr></table></figure></li><li><p>关键字参数，允许传入0个或任意个含参数名的参数，这些关键字参数在函数内部自动组装为一个<code>dict</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span>(<span class="params">name, age, **kw</span>):</span></span><br><span class="line">print(<span class="string">&#x27;name:&#x27;</span>, name, <span class="string">&#x27;age:&#x27;</span>, age, <span class="string">&#x27;other:&#x27;</span>, kw)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">&#x27;Bob&#x27;</span>, <span class="number">35</span>, city=<span class="string">&#x27;Beijing&#x27;</span>)</span><br><span class="line">    name: Bob age: <span class="number">35</span> other: &#123;<span class="string">&#x27;city&#x27;</span>: <span class="string">&#x27;Beijing&#x27;</span>&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="递归："><a href="#递归：" class="headerlink" title="递归："></a>递归：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factorial</span>(<span class="params">n</span>):</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">求任意数的阶乘</span></span><br><span class="line"><span class="string">参数: </span></span><br><span class="line"><span class="string">n: 要求阶乘的数字</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> n * factorial(n<span class="number">-1</span>)</span><br><span class="line">------------------------------</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">huiWen</span>(<span class="params">s</span>):</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">判断是否为回文字符串</span></span><br><span class="line"><span class="string">参数：</span></span><br><span class="line"><span class="string">s：要检查的字符串</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">if</span> len(s) == <span class="number">2</span>:</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">elif</span> s[<span class="number">0</span>] != s[<span class="number">-1</span>]:</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">return</span> huiWen(s[<span class="number">1</span>:<span class="number">-1</span>])</span><br></pre></td></tr></table></figure><h4 id="filter、匿名函数-lambda-与-map"><a href="#filter、匿名函数-lambda-与-map" class="headerlink" title="filter、匿名函数: lambda 与 map"></a>filter、匿名函数: lambda 与 map</h4><ul><li><p><code>filter(function,iterable)</code>: 可以从序列中过滤出符合条件的元素，保存到一个新的序列对象中，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = filter(<span class="keyword">lambda</span> x: x % <span class="number">2</span> == <span class="number">0</span>, range(<span class="number">10</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>&lt;filter object at <span class="number">0x0000027939040390</span>&gt;</span><br></pre></td></tr></table></figure></li><li><p><code>lambda 参数列表 : 返回值</code>: </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filter(<span class="keyword">lambda</span> i:i&gt;<span class="number">5</span>,l)</span><br></pre></td></tr></table></figure></li><li><p><code>map(function, iterable, ...)</code>: 可以对可迭代对象中的所有元素做指定操作，然后将其添加到一个新的对象中返回，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">map(<span class="keyword">lambda</span> x, y: x + y, [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>]) </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>&lt;map object at <span class="number">0x0000027939040CF8</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="闭包：函数嵌套-amp-amp-将内部函数作为返回值返回-amp-amp-内部函数必须使用到外部函数的变量"><a href="#闭包：函数嵌套-amp-amp-将内部函数作为返回值返回-amp-amp-内部函数必须使用到外部函数的变量" class="headerlink" title="闭包：函数嵌套 &amp;&amp; 将内部函数作为返回值返回 &amp;&amp; 内部函数必须使用到外部函数的变量"></a>闭包：<code>函数嵌套</code> &amp;&amp; <code>将内部函数作为返回值返回</code> &amp;&amp; <code>内部函数必须使用到外部函数的变量</code></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makeAverager</span>():</span></span><br><span class="line">  nums = []</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">averager</span>(<span class="params">n</span>):</span></span><br><span class="line">  nums.append(n)</span><br><span class="line">  <span class="keyword">return</span> sum(nums)/len(nums)</span><br><span class="line"><span class="keyword">return</span> averager</span><br><span class="line"></span><br><span class="line">averager = makeAverager()</span><br></pre></td></tr></table></figure><h4 id="装饰器-在不改变函数代码的情况下，扩展函数功能"><a href="#装饰器-在不改变函数代码的情况下，扩展函数功能" class="headerlink" title="装饰器: 在不改变函数代码的情况下，扩展函数功能"></a>装饰器: 在不改变函数代码的情况下，扩展函数功能</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span>(<span class="params">old</span>):</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>(<span class="params">*args, **kw</span>):</span></span><br><span class="line">    print(<span class="string">&#x27;call %s():&#x27;</span> % func.__name__)</span><br><span class="line">    <span class="keyword">return</span> func(*args, **kw)</span><br><span class="line"><span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">@log# now = log(now)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">now</span>():</span></span><br><span class="line">  print(<span class="string">&#x27;2015-3-25&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now()</span><br><span class="line">  call now():</span><br><span class="line">  <span class="number">2015</span><span class="number">-3</span><span class="number">-25</span></span><br></pre></td></tr></table></figure><h3 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h3><h4 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h4><ul><li><p>类：对<code>对象</code>的抽象，是创建对象的模板；属性&amp;&amp;方法</p></li><li><p>对象：则是由类创建的一个<code>实例</code>，而变量是指向对象的内容，如：<code>a=&#39;abc&#39;</code>，经常说的对象a的内容是’abc’，其实是指，a本身是一个变量，它指向的对象的内容才是’abc’  </p></li><li><p>定义类: <code>p1 = Person(&#39;an&#39;)</code>执行流程</p><ul><li>(1)创建一个变量；</li><li>(2)在内存中创建新对象；</li><li>(3)<code>__init__(self)</code>方法执行，init在对象创建以后执行，用来初始化新创建的对象</li><li>(4)将对象的id赋值给变量</li><li>(5)self指的是类实例对象本身(注意：不是类本身)</li><li><a href="https://www.cnblogs.com/chownjy/p/8663024.html">self参考</a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span><span class="comment"># 在对象初始化时执行</span></span><br><span class="line">     self.name = name    <span class="comment"># self为调用该属性/方法实例对象自身 </span></span><br><span class="line">  <span class="comment"># self.__name = name    # 隐藏属性 __name ==&gt; _Person__name</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sayHello</span>(<span class="params">self</span>):</span></span><br><span class="line">  print(<span class="string">&#x27;我是：%s&#x27;</span> %self.name)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_name</span>(<span class="params">self</span>):</span></span><br><span class="line">  <span class="comment"># print(&#x27;读取属性&#x27;)</span></span><br><span class="line">  <span class="keyword">return</span> self.name</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_name</span>(<span class="params">self, name</span>):</span></span><br><span class="line">     <span class="comment"># print(&#x27;设置属性&#x27;)</span></span><br><span class="line">  <span class="keyword">return</span> self.name = name</span><br><span class="line"></span><br><span class="line">p1 = Person(<span class="string">&#x27;an&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="特征："><a href="#特征：" class="headerlink" title="特征："></a>特征：</h4><ul><li><p>封装:隐藏对象中一些不希望被外部所访问到的属性或方法，确保对象中的数据安全</p><ul><li>getter 获取对象中的指定属性（get_属性名）</li><li>setter 用来设置对象的指定属性（set_属性名）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,name</span>):</span></span><br><span class="line">    self._name = name</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">get_name</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="keyword">return</span> self._name</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">set_name</span>(<span class="params">self , name</span>):</span></span><br><span class="line">    self._name = name   </span><br><span class="line"></span><br><span class="line"> p = Person(<span class="string">&#x27;孙悟空&#x27;</span>)</span><br><span class="line"> print(p._name)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>继承：实现子类的属性和方法的功能扩展，保证了对象的可扩展性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">     print(<span class="string">&#x27;动物会跑~~~&#x27;</span>)</span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">sleep</span>(<span class="params">self</span>):</span></span><br><span class="line">     print(<span class="string">&#x27;动物睡觉~~~&#x27;</span>)</span><br><span class="line"><span class="meta">   @property</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">name</span>(<span class="params">self</span>):</span></span><br><span class="line">     <span class="keyword">return</span> self._name</span><br><span class="line"><span class="meta">   @name.setter    </span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">name</span>(<span class="params">self,name</span>):</span></span><br><span class="line">     self._name = name</span><br><span class="line"></span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span>(<span class="params">Animal</span>):</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,name,age</span>):</span></span><br><span class="line">       <span class="comment"># 调用父类的__init__来初始化父类中定义的属性</span></span><br><span class="line">       <span class="comment"># super() 可以用来获取当前类的父类，</span></span><br><span class="line">       <span class="comment"># 并且通过super()返回对象调用父类方法时，不需要传递self</span></span><br><span class="line">     super().__init__(name)</span><br><span class="line">     self._age = age</span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">bark</span>(<span class="params">self</span>):</span></span><br><span class="line">     print(<span class="string">&#x27;汪汪汪~~~&#x27;</span>) </span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">     print(<span class="string">&#x27;狗跑~~~~&#x27;</span>) </span><br><span class="line"><span class="meta">   @property</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">age</span>(<span class="params">self</span>):</span></span><br><span class="line">  <span class="keyword">return</span> self._age</span><br><span class="line"><span class="meta">@age.setter    </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">age</span>(<span class="params">self,age</span>):</span></span><br><span class="line">  self._age = name</span><br><span class="line"></span><br><span class="line"> d = Dog(<span class="string">&#x27;旺财&#x27;</span>,<span class="number">18</span>) </span><br><span class="line"> print(d.name)       </span><br><span class="line"> print(d.age)</span><br></pre></td></tr></table></figure></li><li><p>多态：一个对象可以以不同的形态去呈现，保证了程序的灵活性</p></li></ul><h3 id="模块-python文件-包-文件"><a href="#模块-python文件-包-文件" class="headerlink" title="模块(python文件) 包(文件)"></a>模块(python文件) 包(文件)</h3><ul><li>导入模块: <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> 模块名 </span><br><span class="line"><span class="keyword">import</span> 模块名 <span class="keyword">as</span> 模块别名</span><br></pre></td></tr></table></figure></li><li>访问模块变量：模块名.变量名</li><li>导入模块部分内容: <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> 模块名 <span class="keyword">import</span> 变量 <span class="keyword">as</span> 别名</span><br></pre></td></tr></table></figure></li></ul><h3 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&#x27;异常出现前&#x27;</span>)</span><br><span class="line">l = []</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">  print(<span class="number">10</span>/<span class="number">0</span>)</span><br><span class="line"><span class="keyword">except</span> NameError:</span><br><span class="line">  <span class="comment"># 如果except后不跟任何的内容，则此时它会捕获到所有的异常</span></span><br><span class="line">  <span class="comment"># 如果在except后跟着一个异常的类型，那么此时它只会捕获该类型的异常</span></span><br><span class="line">  print(<span class="string">&#x27;出现 NameError 异常&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line">  print(<span class="string">&#x27;出现 ZeroDivisionError 异常&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> IndexError:</span><br><span class="line">  print(<span class="string">&#x27;出现 IndexError 异常&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Exception 是所有异常类的父类，所以如果except后跟的是Exception，他也会捕获到所有的异常</span></span><br><span class="line"><span class="comment"># 可以在异常类后边跟着一个 as xx 此时xx就是异常对象</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e :</span><br><span class="line">  print(<span class="string">&#x27;未知异常&#x27;</span>,e,type(e))</span><br><span class="line"><span class="keyword">finally</span> :</span><br><span class="line">  print(<span class="string">&#x27;无论是否出现异常，该子句都会执行&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;异常出现后&#x27;</span>)</span><br><span class="line">----------------------------------------------------------------------------------</span><br><span class="line"><span class="comment"># 自定义异常类，创建一个类继承Exception</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyError</span>(<span class="params">Exception</span>):</span></span><br><span class="line">  <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">a,b</span>):</span></span><br><span class="line"><span class="comment"># 如果a和b中有负数，就向调用处抛出异常</span></span><br><span class="line">  <span class="keyword">if</span> a &lt; <span class="number">0</span> <span class="keyword">or</span> b &lt; <span class="number">0</span>:</span><br><span class="line">  <span class="comment"># raise用于向外部抛出异常，后边可以跟一个异常类，或异常类的实例</span></span><br><span class="line">  <span class="comment"># raise Exception    </span></span><br><span class="line">  <span class="comment"># 抛出异常的目的</span></span><br><span class="line">  <span class="comment"># raise Exception(&#x27;两个参数中不能有负数！&#x27;)  </span></span><br><span class="line">  <span class="keyword">raise</span> MyError(<span class="string">&#x27;自定义的异常&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 也可以通过if else来代替异常的处理</span></span><br><span class="line">  <span class="comment"># return None</span></span><br><span class="line">  r = a + b</span><br><span class="line">  <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line">print(add(<span class="number">-123</span>,<span class="number">456</span>))</span><br></pre></td></tr></table></figure><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><blockquote><p>文件打开 –&gt;操作文件(读/写) –&gt;关闭文件</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">file_name = <span class="string">&#x27;demo.txt&#x27;</span></span><br><span class="line">file_obj = open(file_name)</span><br><span class="line">content = file_obj.read()</span><br><span class="line">file_obj.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># with ... as 语句</span></span><br><span class="line"><span class="comment"># with open(file_name) as file_obj :</span></span><br><span class="line"><span class="comment"># 在with语句中可以直接使用file_obj来做文件操作</span></span><br><span class="line"><span class="comment"># 此时这个文件只能在with中使用，一旦with结束则文件会自动close()</span></span><br><span class="line"><span class="comment"># print(file_obj.read())</span></span><br><span class="line"></span><br><span class="line">file_name = <span class="string">&#x27;demo.txt&#x27;</span></span><br><span class="line"><span class="keyword">try</span>: </span><br><span class="line">  <span class="keyword">with</span> open(file_name,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file_obj:</span><br><span class="line">    file_content = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    chunk = <span class="number">100</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">      content = file_obj.read(chunk)</span><br><span class="line">      <span class="keyword">if</span> <span class="keyword">not</span> content:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="comment"># print(content,end=&#x27;&#x27;)</span></span><br><span class="line">      file_content += content</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> FileNotFoundError :</span><br><span class="line">  print(<span class="string">f&#x27;<span class="subst">&#123;file_name&#125;</span> 这个文件不存在！&#x27;</span>)</span><br><span class="line">print(file_content)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>apache-nginx-tomcat</title>
      <link href="/posts/c9dd20a7.html"/>
      <url>/posts/c9dd20a7.html</url>
      
        <content type="html"><![CDATA[<p>2019-09-09-ANT</p><a id="more"></a><h2 id="进程与线程"><a href="#进程与线程" class="headerlink" title="进程与线程"></a>进程与线程</h2><blockquote><p><a href="https://www.zhihu.com/question/25532384">参考文章</a><br>进程是<code>资源分配</code>的最小单位，线程是<code>CPU调度</code>的最小单位； </p></blockquote><h3 id="二者关系"><a href="#二者关系" class="headerlink" title="二者关系"></a>二者关系</h3><blockquote><p>一个线程只能属于一个进程，而一个进程可以有多个线程，但至少有一个线程（通常说的主线程）;<br>资源分配给进程，<code>同一进程的所有线程共享该进程的所有资源</code>;<br>线程在执行过程中，需要协作同步。不同进程的线程间要利用<code>消息通信</code>的办法实现同步;<br>处理任务分给线程，即真正在处理任务上运行的是线程;<br>线程是指进程内的一个执行单元，也是进程内的可调度实体; </p></blockquote><img src="/posts/c9dd20a7/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B.png" class title="[进程与线程]">  <img src="/posts/c9dd20a7/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B01.png" class title="[进程与线程01]">  <h2 id="同步-异步-amp-amp-阻塞-非阻塞"><a href="#同步-异步-amp-amp-阻塞-非阻塞" class="headerlink" title="同步/异步 &amp;&amp; 阻塞/非阻塞"></a>同步/异步 &amp;&amp; 阻塞/非阻塞</h2><h3 id="同步-异步（被调用者）"><a href="#同步-异步（被调用者）" class="headerlink" title="同步/异步（被调用者）"></a>同步/异步（被调用者）</h3><ul><li><code>描述网络通信模式，适用于请求-响应模型</code></li><li>同步：发送方发送请求后，需要等待接收响应，否则将一直等待</li><li>异步：发送方发送请求后，不需要等待响应，可以继续发送下一个请求，或者主动挂起线程并释放CPU</li></ul><h3 id="阻塞-非阻塞（调用者-应用程序）"><a href="#阻塞-非阻塞（调用者-应用程序）" class="headerlink" title="阻塞/非阻塞（调用者-应用程序）"></a>阻塞/非阻塞（调用者-应用程序）</h3><ul><li><code>描述进程的函数调用方式</code>  </li><li>阻塞：IO 调用会一直阻塞，直至结果返回才能继续执行</li><li>非阻塞：IO 调用会立即返回，不需要等待结果，并可以执行下一个 I/O 调用</li></ul><h2 id="IO多路复用的三种模型-Select，Poll，Epoll"><a href="#IO多路复用的三种模型-Select，Poll，Epoll" class="headerlink" title="IO多路复用的三种模型:Select，Poll，Epoll"></a>IO多路复用的三种模型:Select，Poll，Epoll</h2><ul><li><a href="https://www.cnblogs.com/javalyy/p/8882066.html">参考文章</a>  </li><li>IO有<code>内存IO</code>、<code>网络IO</code>和<code>磁盘IO</code>三种，通常说的IO指的是后两者; 以文件IO为例,一个IO读过程是文件数据从<code>磁盘→内核缓冲区→用户内存</code>的过程。同步与异步的区别主要在于数据从内<code>核缓冲区→用户内存</code>这个过程需不需要用户进程等待，即实际的IO读写是否阻塞请求进程。(网络IO把磁盘换做网卡即可)</li></ul><table><thead><tr><th>项目</th><th>select</th><th>poll</th><th>epoll</th></tr></thead><tbody><tr><td>操作方式</td><td>遍历</td><td>遍历</td><td>回调</td></tr><tr><td>底层实现</td><td>数组</td><td>链表</td><td>哈希表</td></tr><tr><td>IO效率</td><td>线性遍历,时间复杂度O(n)</td><td>线性遍历, O(n)</td><td>事件通知方式,O(1)</td></tr><tr><td>最大连接数</td><td>1024(x86)/2048(x64)</td><td>无上限</td><td>无上限</td></tr><tr><td>fd拷贝</td><td>每次调用,fd集合从用户态拷贝到内核态</td><td>同select</td><td>拷贝进内核保存</td></tr></tbody></table><h2 id="apache、nginx与tomcat区别"><a href="#apache、nginx与tomcat区别" class="headerlink" title="apache、nginx与tomcat区别"></a>apache、nginx与tomcat区别</h2><blockquote><p>Apache和nginx应该叫做<code>HTTP Server</code>，而tomcat是一个<code>Application Server</code>，JSP/Servlet容器应用的容器;<br>Apache HTTP Server和Nginx都能够将某一个<code>静态资源</code>的内容通过HTTP协议返回到客户端，但是这个文本文件的内容是固定的——也就是说无论何时、任何人访问它得到的内容都是完全相同的; Tomcat能够<code>动态的生成资源</code>并返回到客户端; </p></blockquote><h2 id="apache"><a href="#apache" class="headerlink" title="apache"></a>apache</h2><h3 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站"></a><a href="http://httpd.apache.org/">官方网站</a></h3><img src="/posts/c9dd20a7/httpd_logo.png" class title="[https_logo]">   <h3 id="原理浅析"><a href="#原理浅析" class="headerlink" title="原理浅析"></a>原理浅析</h3><ul><li>Apache基于<code>多进程的HTTP服务器</code>，它需要对每个用户请求创建一个子进程进行响应，并发的请求量大就会需要非常多的进程，从而占用极多的cpu资源和内存;</li><li>Apache是基于<code>模块化</code>设计的，<code>MPM</code>（Multi -Processing Modules，多重处理模块）是Apache的核心组件之一，Apache通过MPM来使用操作系统的资源，对进程和线程池进行管理;</li><li>MPM有三种工作方式：<ul><li><a href="http://httpd.apache.org/docs/2.4/mod/prefork.html">Prefork MPM</a></li><li><a href="http://httpd.apache.org/docs/2.4/mod/worker.html">Worker MPM</a></li><li><a href="http://httpd.apache.org/docs/2.4/mod/event.html">Event MPM</a></li></ul></li></ul><h4 id="prefork-模式-预派生子进程"><a href="#prefork-模式-预派生子进程" class="headerlink" title="prefork 模式(预派生子进程)"></a>prefork 模式(预派生子进程)</h4><ul><li><code>prefork</code>是一个<code>非线程型的、预派生的MPM</code>，使用多个进程彼此独立，且<code>每个进程只有一个线程</code>，每个进程在某个确定的时间只单独处理一个连接，<code>效率高</code>，但<code>内存使用比较大</code>。</li><li>优点：适合于没有线程安全库，需要避免线程兼容性问题的系统。它是要求将每个请求相互独立的情况下最好的MPM，这样若一个请求出现问题就不会影响到其他请求。</li><li>缺点：一个进程相对占用更多的系统资源，消耗更多的内存。而且，它并不擅长处理高并发请求，在这种场景下，它会将请求放进队列中，一直等到有可用进程，请求才会被处理。</li></ul><h4 id="worker-模式"><a href="#worker-模式" class="headerlink" title="worker 模式"></a>worker 模式</h4><ul><li><code>worker</code>基于多进程, 但是使用了<code>多进程和多线程</code>的混合模式，worker模式也同样会先预派生一些子进程，然后<code>每个子进程创建一些线程</code>，同时包括一个监听线程，每个请求过来会被分配到一个线程来服务。</li><li>优点：线程比起进程会更轻量，因为<code>线程是通过共享父进程的内存空间</code>，因此，内存的占用会减少一些，在高并发，高流量的场景下会比prefork有更多可用的线程，表现会更优秀一些；</li><li>缺点：如果一个线程出现了问题也会导致同一进程下的线程出现问题，如果是多个线程出现问题，也只是影响Apache的一部分，而不是全部。由于用到多进程多线程，需要考虑到线程的安全了，在使用keep-alive长连接的时候，某个线程会一直被占用，即使中间没有请求，需要等待到超时才会被释放（该问题在prefork模式下也存在）。</li></ul><h4 id="event-模式"><a href="#event-模式" class="headerlink" title="event 模式"></a>event 模式</h4><ul><li>Apache最新的工作模式，它和worker模式很像</li><li>优点：不同的是在于它解决了<code>keep-alive长连接</code>的时候占用线程资源被浪费的问题（HTTP的Keepalive方式能减少TCP连接数量和网络负载），在event工作模式中，会有一些专门的线程用来管理这些keep-alive类型的线程，当有真实请求过来的时候，将请求传递给服务器的线程，执行完毕后，又允许它释放。这增强了在高并发场景下的请求处理；</li></ul><h2 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h2><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a><a href="https://www.cnblogs.com/strick/p/9336948.html">参考文章</a></h3><h3 id="官方网站-1"><a href="#官方网站-1" class="headerlink" title="官方网站"></a><a href="http://nginx.org/en/docs/">官方网站</a></h3><h3 id="原理浅析-1"><a href="#原理浅析-1" class="headerlink" title="原理浅析"></a>原理浅析</h3><h4 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h4><blockquote><p>Nginx由一个<code>master进程和多个worker进程</code>组成，主进程接收客户端请求，再转交给工作进程处理，从而很好地利用多核心CPU的计算能力。</p></blockquote><img src="/posts/c9dd20a7/nginx.png" class title="[nginx_logo]">   <h4 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># .&#x2F;configure --prefix&#x3D;&#x2F;srv&#x2F;nginx \</span><br><span class="line">  --with-file-aio \</span><br><span class="line">  --with-http_auth_request_module \  </span><br><span class="line">  --with-http_ssl_module \</span><br><span class="line">  --with-http_v2_module \</span><br><span class="line">  --with-http_realip_module \ </span><br><span class="line">  --with-http_addition_module \ </span><br><span class="line">  --with-http_xslt_module&#x3D;dynamic \ </span><br><span class="line">  --with-http_geoip_module&#x3D;dynamic \</span><br><span class="line">  --with-http_sub_module \</span><br><span class="line">  --with-http_dav_module \</span><br><span class="line">  --with-http_flv_module \</span><br><span class="line">  --with-http_mp4_module \</span><br><span class="line">  --with-http_gunzip_module \ </span><br><span class="line">  --with-http_gzip_static_module \ </span><br><span class="line">  --with-http_random_index_module \</span><br><span class="line">  --with-http_secure_link_module \</span><br><span class="line">  --with-http_degradation_module \</span><br><span class="line">  --with-http_slice_module \</span><br><span class="line">  --with-http_stub_status_module \ </span><br><span class="line">  --with-http_perl_module&#x3D;dynamic \</span><br><span class="line">  --with-pcre \</span><br><span class="line">  --with-pcre-jit \ </span><br><span class="line">  --with-stream&#x3D;dynamic \ </span><br><span class="line">  --with-stream_ssl_module \</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#39;&#x2F;^[[:space:]]*#&#x2F;d&#39; nginx.conf </span><br><span class="line">  user nginx;</span><br><span class="line">  worker_process auto; </span><br><span class="line">  error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log;</span><br><span class="line">  pid &#x2F;run&#x2F;nginx.pid;</span><br><span class="line">  include &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;modules&#x2F;*.conf;</span><br><span class="line"></span><br><span class="line">  event &#123;</span><br><span class="line">      worker_connections 1024;</span><br><span class="line">  &#125;</span><br><span class="line">  http &#123;</span><br><span class="line">      include         mime.types;</span><br><span class="line">      default_type    application&#x2F;octet-stream;</span><br><span class="line"></span><br><span class="line">      sendfile         on;</span><br><span class="line">      keepalived       65;</span><br><span class="line">      </span><br><span class="line">      include &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;*.conf;</span><br><span class="line">      include &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;vhosts&#x2F;*.conf;    # </span><br><span class="line"></span><br><span class="line">      server &#123;</span><br><span class="line">          listen       80;</span><br><span class="line">          server_name  localhost;</span><br><span class="line"></span><br><span class="line">          location &#x2F; &#123;                # localhost:80&#x2F; </span><br><span class="line">              root     html;          # 路径</span><br><span class="line">              index    index.html index.htm;</span><br><span class="line">          &#125;</span><br><span class="line">          </span><br><span class="line">          location &#x2F;demo &#123;        # localhost:80&#x2F;demo&#x2F;</span><br><span class="line">              root &#x2F;opt&#x2F;test;     # 实际访问 &#x2F;opt&#x2F;test&#x2F;demo</span><br><span class="line">              alias &#x2F;opt&#x2F;test;    # 实际访问 &#x2F;opt&#x2F;test</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          error_page   500 502 503 504  &#x2F;50x.html;</span><br><span class="line">          location &#x3D; &#x2F;50x.html &#123;</span><br><span class="line">              root html;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="CGI、FastCGI、PHP-FPM"><a href="#CGI、FastCGI、PHP-FPM" class="headerlink" title="CGI、FastCGI、PHP-FPM"></a>CGI、FastCGI、PHP-FPM</h3><ul><li>CGI（Common Interface，公共网关接口）是<strong>Web服务器与外部程序之间</strong>的接口标准，用于<code>两种不同程序之间的信息传递</code>。CGI规范允许Web服务器根据浏览器请求调用CGI程序，并将其输出结果通过响应发送给浏览器，从而使Web服务器支持处理复杂的网站业务需求;</li><li><code>FastCGI</code>主要用于解决CGI性能上的缺陷。传统CGI方式是每当客户端请求CGI时，Web服务器就通过操作系统创建一个新的CGI进程，一个CGI进程完成一个请求处理后就退出，下次请求再创建一个新CGI进程。由于这种方式需要不断为每个请求创建进程，因此在网站并发量很大时显得非常低效。FastCGI优化了这种工作方式，它由一个<code>常驻的CGI进程管理器</code>，通过管理<code>一个进程池</code>来处理Web服务器的请求，由此提高了性能;</li><li>PHP提供的<code>PHP-FPM</code>（FastCGI Process Manager）就是一个<code>FastCGI进程管理器</code>，其可执行文件位于PHP安装的目录中;</li></ul><h2 id="tomcat"><a href="#tomcat" class="headerlink" title="tomcat"></a>tomcat</h2><h3 id="参考文章-1"><a href="#参考文章-1" class="headerlink" title="参考文章"></a><a href="https://www.cnblogs.com/hggen/p/6264475.html">参考文章</a></h3><h3 id="官方网站-2"><a href="#官方网站-2" class="headerlink" title="官方网站"></a><a href="http://tomcat.apache.org/">官方网站</a></h3><img src="/posts/c9dd20a7/tomcat.png" class title="[tomcat_logo]">  ]]></content>
      
      
      <categories>
          
          <category> apache </category>
          
          <category> nginx </category>
          
          <category> tomcat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> devops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ansible</title>
      <link href="/posts/a71433d.html"/>
      <url>/posts/a71433d.html</url>
      
        <content type="html"><![CDATA[<p>2019-08-28-Ansible</p><a id="more"></a><h1 id="Ansible"><a href="#Ansible" class="headerlink" title="Ansible"></a>Ansible</h1><h2 id="前话"><a href="#前话" class="headerlink" title="前话"></a>前话</h2><ul><li><code>IAAS</code>(Infrastucture as a Service)  ‘’基础设施即服务’’      </li><li><code>PAAS</code>(Platform as a Service)  ‘’平台即服务’’    </li><li><code>SAAS</code>(Service as a Service)  ‘’软件即服务’’      </li></ul><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>ansible是新出现的<code>自动化运维工具</code>，<code>基于Python</code>开发，集合了众多运维工具（puppet、cfengine、chef、func、fabric）的优点，实现了<code>批量系统配置、批量程序部署、批量运行命令</code>等功能。  </p></blockquote><blockquote><p>ansible是<code>基于模块</code>工作的，本身没有批量部署的能力。真正具有批量部署的是ansible所运行的模块，ansible只是提供一种框架。主要包括：<br>(1)<code>connection plugins</code>：负责和被监控端实现通信；<br>(2)<code>host inventory</code>：指定操作的主机，是一个配置文件里面定义监控的主机；<br>(3)各种模块核心模块、command模块、自定义模块；<br>(4)借助于插件完成记录日志邮件等功能；<br>(5)<code>playbook</code>：剧本执行多个任务时，非必需可以让节点一次性运行多个任务。  </p></blockquote><h2 id="架构与原理"><a href="#架构与原理" class="headerlink" title="架构与原理"></a>架构与原理</h2><blockquote><p>ansible 通过<code>ssh实现</code>配置管理、应用部署、任务执行等功能  </p></blockquote><img src="/posts/a71433d/ansible%E6%9E%B6%E6%9E%84.png" class title="[ansible架构]">  <img src="/posts/a71433d/ansible%E5%8E%9F%E7%90%86.png" class title="[ansible原理]">  <h2 id="安装"><a href="#安装" class="headerlink" title="安装:"></a>安装:</h2><h3 id="RPM-方式"><a href="#RPM-方式" class="headerlink" title="RPM 方式"></a>RPM 方式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo.backup</span><br><span class="line">mv /etc/yum.repos.d/epel-testing.repo /etc/yum.repos.d/epel-testing.repo.backup</span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line"></span><br><span class="line">yum install ansible</span><br></pre></td></tr></table></figure><h3 id="Git-方式"><a href="#Git-方式" class="headerlink" title="Git 方式"></a>Git 方式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/ansible.git --recursive</span><br><span class="line"><span class="built_in">cd</span> ./ansible</span><br><span class="line"><span class="built_in">source</span> ./hacking/env-setup</span><br></pre></td></tr></table></figure><h3 id="相关文件"><a href="#相关文件" class="headerlink" title="相关文件"></a>相关文件</h3><ul><li><p>配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/ansible/ansible.cfg <span class="comment"># 主配置文件</span></span><br><span class="line">/etc/ansible/hosts <span class="comment"># 主机清单</span></span><br><span class="line">/etc/ansible/roles <span class="comment"># 存放角色</span></span><br></pre></td></tr></table></figure></li><li><p>程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ansible <span class="comment"># 主程序</span></span><br><span class="line">/usr/bin/ansible-doc  <span class="comment"># 帮助文档</span></span><br><span class="line">/usr/bin/ansible-galaxy <span class="comment"># Download/Upload Role Module</span></span><br><span class="line">/usr/bin/ansible-playbook <span class="comment"># 定制自动化任务编排剧本工具</span></span><br><span class="line">/usr/bin/ansible-pull <span class="comment"># 远程执行命令工具</span></span><br><span class="line">/usr/bin/ansible-vault<span class="comment"># 文件加密tool</span></span><br><span class="line">/usr/bin/ansible-console     <span class="comment"># Terminal Tool</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><h3 id="ansible-options"><a href="#ansible-options" class="headerlink" title="ansible  [options]"></a>ansible <host-pattern> [options]</host-pattern></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@anyue ~]<span class="comment"># /etc/ansible/ansible.cfg  </span></span><br><span class="line">  61 host_key_checking = False         <span class="comment"># 启用  </span></span><br><span class="line">  101 log_path = /var/<span class="built_in">log</span>/ansible.log  <span class="comment"># 启用日志  </span></span><br><span class="line">[root@anyue ~]<span class="comment"># /etc/ansible/hosts</span></span><br><span class="line">  [group1]  </span><br><span class="line">  hostIP1  </span><br><span class="line">  hostIP2  </span><br><span class="line"></span><br><span class="line">  [group2]  </span><br><span class="line">  hostIP1  </span><br><span class="line"></span><br><span class="line">  [group:children]  </span><br><span class="line">  group1   </span><br><span class="line">  group2</span><br></pre></td></tr></table></figure><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><table><thead><tr><th>命令</th><th>选项</th><th>说明</th></tr></thead><tbody><tr><td><code>ansible-doc</code></td><td>-a</td><td>显示所有模块文档</td></tr><tr><td>–</td><td><code>-l,--list</code></td><td>列出可用模块,也可以指定模块</td></tr><tr><td>–</td><td><code>-s,--snippet</code></td><td>指定模块playbook片段</td></tr><tr><td><code>ansible</code></td><td>-m</td><td>指定模块,默认command模块</td></tr><tr><td>–</td><td>-a</td><td>传递命令</td></tr><tr><td>–</td><td><code>-k,--ask-pass</code></td><td>提示输入ssh密码,默认Key验证</td></tr><tr><td>–</td><td>–list</td><td>显示主机</td></tr><tr><td>–</td><td><code>-C,--check</code></td><td>测试执行过程</td></tr><tr><td><code>ansible-galaxy</code></td><td>list</td><td>列出所装角色</td></tr><tr><td>–</td><td>info</td><td>角色信息</td></tr><tr><td>–</td><td>remove</td><td>删除角色</td></tr><tr><td><code>ansible-pull</code></td><td>–</td><td>推送命令至远程</td></tr><tr><td><code>ansible-playbook</code></td><td>-C</td><td>检查,不执行</td></tr><tr><td>–</td><td><code>--limit hosts</code></td><td>在指定主机执行</td></tr><tr><td>–</td><td><code>--list-hosts</code></td><td>列出运行任务的主机</td></tr><tr><td><code>ansible-vault</code></td><td>encrypt</td><td>加密playbook</td></tr><tr><td>–</td><td>decrypt</td><td></td></tr><tr><td><code>ansible-console</code></td><td>–</td><td>–</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@anyue ansible]<span class="comment"># ansible dbser --list</span></span><br><span class="line">[root@anyue ansible]<span class="comment"># ansible dbser -m ping -u root -k  </span></span><br><span class="line">[root@anyue ansible]<span class="comment"># ansible dbser -m command -u xy -k -a &#x27;ls/root&#x27; -b -K # 默认为command   </span></span><br></pre></td></tr></table></figure><h3 id="Host-pattern"><a href="#Host-pattern" class="headerlink" title="Host-pattern"></a>Host-pattern</h3><ul><li><p>all: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m ping</span><br></pre></td></tr></table></figure></li><li><p><code>*</code>: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible <span class="string">&quot;*&quot;</span> -m ping</span><br></pre></td></tr></table></figure></li><li><p>与或非关系: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible <span class="string">&#x27;dbser:webser&#x27;</span> -m ping  <span class="comment"># 或</span></span><br><span class="line">ansible <span class="string">&#x27;dbser:&amp;webser&#x27;</span> -m ping <span class="comment"># 与</span></span><br><span class="line">ansible <span class="string">&#x27;dbser:!webser&#x27;</span> -m ping <span class="comment"># 非</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="常见模块"><a href="#常见模块" class="headerlink" title="常见模块"></a>常见模块</h2><h3 id="文件类操作模块"><a href="#文件类操作模块" class="headerlink" title="文件类操作模块"></a>文件类操作模块</h3><blockquote><p>copy file blockinline lineinfile find replace fetch   </p></blockquote><h4 id="1-copy"><a href="#1-copy" class="headerlink" title="1.copy"></a>1.copy</h4><p>选项: src dest force backup owner group mode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m copy -a <span class="string">&#x27;src=/root/ansible/selinux dest=/etc/selinux/config backup=yes&#x27;</span></span><br><span class="line">ansible all -m copy -a <span class="string">&#x27;src=/etc/shadow dest=/data/ mode=000 owner=xy&#x27;</span> </span><br><span class="line">ansible all -m copy -a <span class="string">&#x27;content=&quot;hello\world\n&quot; dest=/data/f2 backup=yes mode=755 owner=root&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="2-file-path-dest-name"><a href="#2-file-path-dest-name" class="headerlink" title="2.file(path,dest,name)"></a>2.file(path,dest,name)</h4><p>选项: path state src force owner group mode recurse   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible dbsrv -m file <span class="string">&#x27;path=/root/a.sh owner=xy mode=755&#x27;</span>  </span><br><span class="line">ansible dbsrv -m file <span class="string">&#x27;src=/etc/fstab dest=/data/fstab-link state=link&#x27;</span>  </span><br><span class="line">ansible dbsrv -m file <span class="string">&#x27;path=/home/state/test te=directory owner=xy group=xy recuser=yes&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="3-blockinfile-在指定的文件中插入”一段文本”"><a href="#3-blockinfile-在指定的文件中插入”一段文本”" class="headerlink" title="3.blockinfile: 在指定的文件中插入”一段文本”"></a>3.blockinfile: 在指定的文件中插入”一段文本”</h4><p>选项: path block marker state insertafter insertbefore backup create    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible dbsvr -m blockfile -a <span class="string">&#x27;path=/test/rc.local block=&quot;systemctl start mariadb\nsystemctl start httpd&quot; marker=&quot;#&#123;mark&#125; service to start&quot;&#x27;</span></span><br><span class="line">ansible dbsvr -m blockfile -a <span class="string">&#x27;path=/test/rc.local marker=&quot;#&#123;mark&#125; service to start&quot; state=absent&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="4-lineinfile"><a href="#4-lineinfile" class="headerlink" title="4.lineinfile:"></a>4.lineinfile:</h4><p>选项: path line regexp state backrefs inserafter insertbefore backup create </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 确保某一行文本存在指定的文件中，若存在不做任何操作，默认在文件的末尾插入这行文本  </span></span><br><span class="line">ansible dbsvr -m lineinfile -a <span class="string">&#x27;path=/test/test.txt regexp=&quot;^line&quot; line=&quot;test text&quot;&#x27;</span>  </span><br><span class="line">ansible dbsvr -m -m lineinfile -a <span class="string">&#x27;path=/test/test.txt regexp=&quot;(H.&#123;4&#125;).*(H.&#123;4&#125;)&quot; line=&quot;\2&quot; backrefs=yes&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="5-find"><a href="#5-find" class="headerlink" title="5.find"></a>5.find</h4><p>选项: path recurse hidden file_type patterns <br>      use_regex contains age(s m h d w) <br>      age_stamp(atime ctime mtime) size(t g m k b) get_checksum   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible dbsvr -m find -a <span class="string">&#x27;path=/test patterns=&quot;*.sh&quot; file_type=any hidden=yes&#x27;</span> </span><br><span class="line">ansible dbsvr -m find -a <span class="string">&#x27;path=/test age=-4d age_stamp=atime recurse=yes&#x27;</span>  <span class="comment"># 4天以内</span></span><br></pre></td></tr></table></figure><h4 id="6-replace"><a href="#6-replace" class="headerlink" title="6.replace"></a>6.replace</h4><p>选项: path regexp replace backup</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible dbsvr -m replace -a <span class="string">&#x27;path=/test regexp=&quot;ASM&quot; replace=asm backup=yes&#x27;</span>  </span><br></pre></td></tr></table></figure><h4 id="7-fetch-远程单个文件-可以先tar"><a href="#7-fetch-远程单个文件-可以先tar" class="headerlink" title="7.fetch(远程单个文件,可以先tar)"></a>7.fetch(远程单个文件,可以先tar)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m fetch -a <span class="string">&#x27;src=/var/log/message dest=/data&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="命令类操作模块"><a href="#命令类操作模块" class="headerlink" title="命令类操作模块"></a>命令类操作模块</h3><blockquote><p>command shell script </p></blockquote><h4 id="1-command-默认"><a href="#1-command-默认" class="headerlink" title="1.command(默认)"></a>1.command(默认)</h4><p>选项: free_form chdir creates removes </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该模块不支持`$、&lt;、&gt;、|、;、&amp;`等</span></span><br><span class="line">ansible dbser -m <span class="built_in">command</span> -a <span class="string">&#x27;chdir=/data/f1.sh&#x27;</span></span><br><span class="line">ansible dbser -a <span class="string">&#x27;echo 123456 |passwd --stdin user1&#x27;</span> <span class="comment"># fail</span></span><br><span class="line">ansible dbuser -k all -m <span class="built_in">command</span> -a <span class="string">&quot;ping -c 1 www.baidu.com&quot;</span></span><br></pre></td></tr></table></figure><h4 id="2-shell"><a href="#2-shell" class="headerlink" title="2.shell"></a>2.shell</h4><p>选项: free_form chdir creates removes executable</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible dbser -m shell -a <span class="string">&#x27;cat /etc/passwd |awk -F: &#123;print $1,$2&#125;&#x27;</span> &amp;&gt;/tmp/test.txt  </span><br></pre></td></tr></table></figure><h4 id="3-script"><a href="#3-script" class="headerlink" title="3.script"></a>3.script</h4><p>选项: free_form chdir creates removes  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hostname is <span class="variable">$HOSTNAME</span>&quot;</span></span><br><span class="line">ansible all -m script -a <span class="string">&#x27;/root/ansible/host.sh&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="系统类模块"><a href="#系统类模块" class="headerlink" title="系统类模块"></a>系统类模块</h3><blockquote><p>cron service user group hostname yum setup synchronize debug  yum_repository </p></blockquote><h4 id="1-cron"><a href="#1-cron" class="headerlink" title="1.cron"></a>1.cron</h4><p>选项: minute hour day month weekday <br>      special_time user job name <br>      state disabled backup  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m cron -a <span class="string">&#x27;minute=* weekday=1,3,5 job=&quot;/usr/bin/wall FBI warnning&quot; name=broadcast&#x27;</span>  </span><br><span class="line">ansible all -m cron -a <span class="string">&#x27;disabled=true job=&quot;/usr/bin/wall FBI warnning&quot; name=broadcast&#x27;</span>  </span><br><span class="line">ansible all -m cron -a <span class="string">&#x27;job=&quot;/usr/bin/wall FBI warnning&quot; name=broadcast state=absent&#x27;</span> </span><br></pre></td></tr></table></figure><h4 id="2-service"><a href="#2-service" class="headerlink" title="2.service"></a>2.service</h4><p>选项: name state enabled</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible dbsvr -m service -a <span class="string">&#x27;name=vsftpd state=started/stopped/reloaded/restarted enabled=true&#x27;</span> </span><br></pre></td></tr></table></figure><h4 id="3-user"><a href="#3-user" class="headerlink" title="3.user"></a>3.user</h4><p>选项: name group gourps append shell uid <br>      expires(指定用户过期时间) comment state <br>      remove password update_passowrd(always on_create) <br>      generate_ssh_key ssh_key_file ssh_key_passphrase ssh_key_type  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible dbsvr -m user -a <span class="string">&#x27;name=nginx shell=/sbin/nologin system=true home=/usr/local/nginx groups=root,bin uid=80 comment=&quot;nginx service&quot;&#x27;</span></span><br><span class="line">ansible dbsvr -m user -a <span class="string">&#x27;name=nginx state=absent remove=true&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="4-group"><a href="#4-group" class="headerlink" title="4.group"></a>4.group</h4><p>选项: name state gid  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible dbsvr -m group -a <span class="string">&#x27;name=nginx system=true gid=80&#x27;</span></span><br><span class="line">ansible dbsvr -m  -a <span class="string">&#x27;getent group nginx&#x27;</span></span><br><span class="line">ansible dbsvr -m group -a <span class="string">&#x27;name=nginx state=absent&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="5-hostname"><a href="#5-hostname" class="headerlink" title="5.hostname"></a>5.hostname</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 192.168.30.103 -m hostname -a <span class="string">&#x27;name=node1&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="6-yum-repository-amp-amp-yum"><a href="#6-yum-repository-amp-amp-yum" class="headerlink" title="6.yum_repository &amp;&amp; yum"></a>6.yum_repository &amp;&amp; yum</h4><p>选项: name baseurl description file enabled gpgcheck gpgcakey state  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible dbsvr -m yum_repository -a <span class="string">&#x27;name=AliEpel description=&quot;alibaba EPEL&quot; baseurl=https://mirrors.aliyun.com/epel/$releasever\Server/$basearch/&#x27;</span></span><br><span class="line">ansible dbsvr -m yum_repository -a <span class="string">&#x27;name=local baseurl=file://media description=&quot;local cd yum&quot; enabled=no&#x27;</span>  </span><br></pre></td></tr></table></figure><p>选项: name state disable_gpg_check enablerepo disablerepo  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ansible dbsvr -m yum -a <span class="string">&#x27;name=vsftpd,httpd state=installed&#x27;</span>  </span><br><span class="line">ansible dbsvr -m yum -a <span class="string">&#x27;name=vsftpd,httpd state=removed&#x27;</span></span><br><span class="line">ansible dbsvr -m yum -a <span class="string">&#x27;list=installed&#x27;</span>  </span><br><span class="line">ansible dbsvr -m yum -a <span class="string">&#x27;name=dstat update_cache=yes&#x27;</span>  </span><br></pre></td></tr></table></figure><h4 id="7-setup-内部变量"><a href="#7-setup-内部变量" class="headerlink" title="7.setup(内部变量)"></a>7.setup(内部变量)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m setup -a <span class="string">&quot;filter=*memtotal*&quot;</span>  <span class="comment"># 查看 内部变量</span></span><br><span class="line">ansible_memetotal_mb<span class="comment"># 4  </span></span><br><span class="line">ansible all -m -a <span class="string">&#x27;filter=ansible_memory_mb&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="8-synchronize-目录文件同步-基于rsync命令工具"><a href="#8-synchronize-目录文件同步-基于rsync命令工具" class="headerlink" title="8.synchronize(目录文件同步,基于rsync命令工具)"></a>8.synchronize(目录文件同步,基于rsync命令工具)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible -k all -m synchronize -a <span class="string">&#x27;src=/tmp/ dest=/tmp compress=yes rsync_opts=--no-motd,--exclude=.txt&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="9-debug"><a href="#9-debug" class="headerlink" title="9.debug"></a>9.debug</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">ansible</span> <span class="string">dbsvr</span> <span class="string">-m</span> <span class="string">debug</span> <span class="string">-a</span> <span class="string">&quot;msg=<span class="template-variable">&#123;&#123;ansible_version&#125;&#125;</span>&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">host:</span> <span class="string">test01</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">vars:</span> </span><br><span class="line">    <span class="attr">testvar:</span> <span class="string">value</span> <span class="string">of</span> <span class="string">test</span> <span class="string">variable</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">debug</span> <span class="string">demo</span></span><br><span class="line">      <span class="attr">debug:</span> </span><br><span class="line">        <span class="attr">var:</span> <span class="string">testvar</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;value of testvar is: <span class="template-variable">&#123;&#123;testvar&#125;&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">test02</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">vars_prompt:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;Your_name&quot;</span></span><br><span class="line">      <span class="attr">prompt:</span> <span class="string">&quot;What is your name&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;Your_age&quot;</span></span><br><span class="line">      <span class="attr">prompt:</span> <span class="string">&quot;How old are you&quot;</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">output</span> <span class="string">vars</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">Your</span> <span class="string">name</span> <span class="string">is</span> &#123;&#123;<span class="string">Your_name</span>&#125;&#125;<span class="string">,You</span> <span class="string">are</span> &#123;&#123;<span class="string">Your_age</span>&#125;&#125; <span class="string">years</span> <span class="string">old.</span></span><br></pre></td></tr></table></figure><h2 id="ansible-playbook"><a href="#ansible-playbook" class="headerlink" title="ansible-playbook"></a>ansible-playbook</h2><blockquote><p>PlayBook 是由一个或多个”play”组成的列表，play的主要功能是为Ansible中的task定义好角色–指定剧本对应的服务器组；task是一个任务，调用Ansible各种模块，将多个play组织在一个PlayBook剧本中，组成非常完整的流程控制集合。</p></blockquote><blockquote><p>剧本 &lt;–task &lt;–modules  </p></blockquote><h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook [options] playbook.yml [playbook2 ...]</span><br><span class="line">ansible-playbook --syntax-check sample.yml<span class="comment"># 测试是否由语法错误  </span></span><br></pre></td></tr></table></figure><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><blockquote><p>在YAML语法中，<code>---</code>表示文档开始，<code>-</code>作为开头也表示一个块序列的节点；<br>列表 -<br>字典 key: value 或者 { key1: value1, key2: value2, …}</p></blockquote><blockquote><p>Ansible的幂等性: 幂等性能够<code>保持重复执行一项操作</code>时，<code>得到的结果是相同的</code>，ansible是以<code>“结果为导向的”</code>，指定一个状态，ansible会自动判断，“当前状态”是否一致，如果一致，则不进行任何操作，不一致将当前状态变为目标指定状态。  </p></blockquote><blockquote><p>key: value 可同行写也可换行写, 值可是字符串，也可是列表；</p></blockquote><h4 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># test yml</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">websrv</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">create</span> <span class="string">new</span> <span class="string">file</span>  <span class="comment"># describe</span></span><br><span class="line">      <span class="attr">file:</span> <span class="string">name=/data/newfile</span> </span><br><span class="line">            <span class="string">state=touch</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">create</span> <span class="string">new</span> <span class="string">user</span></span><br><span class="line">      <span class="attr">user:</span> </span><br><span class="line">        <span class="string">name=test2</span> </span><br><span class="line">        <span class="string">system=yes</span> </span><br><span class="line">        <span class="string">shell=/sbin/nologin</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">package</span></span><br><span class="line">      <span class="attr">yum:</span> <span class="string">name=httpd</span></span><br></pre></td></tr></table></figure><h4 id="handler-amp-amp-notify-tags"><a href="#handler-amp-amp-notify-tags" class="headerlink" title="handler &amp;&amp; notify || tags"></a>handler &amp;&amp; notify || tags</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># apache service</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">websrvs</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">httpd</span> <span class="string">package</span></span><br><span class="line">      <span class="attr">yum:</span> <span class="string">name=httpd</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">inshttpd</span>            <span class="comment"># 标签，指定执行哪些任务</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">conf</span> <span class="string">file</span></span><br><span class="line">      <span class="attr">copy:</span> <span class="string">src=files/httpd.conf</span> <span class="string">dest=/etc/httpd/conf</span> <span class="string">backup=yes</span></span><br><span class="line">      <span class="attr">notify:</span> <span class="string">restart</span> <span class="string">service</span>   <span class="comment"># 触发特性条件，跳过以下命令，执行指定handlers任务</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">start</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span> <span class="string">name=httpd</span> <span class="string">state=started</span> <span class="string">enabled=true</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">reshttpd</span>     <span class="comment"># 标签</span></span><br><span class="line">  <span class="attr">handlers:</span>         <span class="comment"># 触发器，另一种形式的task</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">restart</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span> <span class="string">name=httpd</span> <span class="string">state=restarted</span></span><br><span class="line"> </span><br><span class="line"><span class="string">ansible-playbook</span> <span class="string">-t</span> <span class="string">inshttpd,reshttpd</span> <span class="string">httpd.yml</span>  <span class="comment"># -t,--tags 指定执行标签  </span></span><br></pre></td></tr></table></figure><h4 id="var-变量"><a href="#var-变量" class="headerlink" title="var 变量"></a>var 变量</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># var</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">appserv</span></span><br><span class="line">  <span class="attr">remote:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">vars:</span>  <span class="comment"># 变量</span></span><br><span class="line">    <span class="attr">nginx:</span></span><br><span class="line">    <span class="attr">conf80:</span> <span class="string">/etc/nginx/conf.d/80.conf</span></span><br><span class="line">    <span class="attr">conf8080:</span> <span class="string">/etc/nginx/conf.d/8080.conf</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">      <span class="attr">file:</span> </span><br><span class="line">        <span class="string">path=&quot;&#123;&#123;nginx.conf80&#125;&#125;&quot;</span> </span><br><span class="line">        <span class="string">state=touch</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">      <span class="attr">file:</span> </span><br><span class="line">        <span class="string">path=&quot;&#123;&#123;nginx[&#x27;conf8080&#x27;]&#125;&#125;&quot;</span></span><br><span class="line">        <span class="string">state=touch</span></span><br><span class="line"><span class="comment">#############################</span></span><br><span class="line"><span class="string">cat</span> <span class="string">vars.yml</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">var1:</span> <span class="string">httpd</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">var2:</span> <span class="string">nginx</span></span><br><span class="line"><span class="comment">######</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">vars_files:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">vars.yml</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">vreate</span> <span class="string">httpd</span> <span class="string">log</span></span><br><span class="line">      <span class="attr">file:</span> <span class="string">name=/app/&#123;&#123;</span> <span class="string">var1</span> <span class="string">&#125;&#125;.log</span> <span class="string">state=touch</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">vreate</span> <span class="string">httpd</span> <span class="string">log</span></span><br><span class="line">      <span class="attr">file:</span> <span class="string">name=/app/&#123;&#123;</span> <span class="string">var2</span> <span class="string">&#125;&#125;.log</span> <span class="string">state=touch</span> </span><br></pre></td></tr></table></figure><h2 id="Template-Jinja2"><a href="#Template-Jinja2" class="headerlink" title="Template(Jinja2)"></a>Template(Jinja2)</h2><h3 id="when"><a href="#when" class="headerlink" title="when"></a>when</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># test template</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">websrvs</span></span><br><span class="line">  <span class="attr">remove_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">http_port:</span> <span class="number">88</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">package</span></span><br><span class="line">      <span class="attr">yum:</span> <span class="string">name=nginx</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">template</span></span><br><span class="line">      <span class="attr">template:</span> <span class="string">src=nginx.conf.j2</span> <span class="string">dest=/etc/nginx/nginx.conf</span>  <span class="comment"># 模板</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">ansible_distribution_major_version</span> <span class="string">==</span> <span class="string">&quot;7&quot;</span>   <span class="comment"># 判断</span></span><br><span class="line">      <span class="attr">notify:</span> <span class="string">restart</span> <span class="string">service</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">template</span></span><br><span class="line">      <span class="attr">template:</span> <span class="string">src=nginx.conf.j2</span> <span class="string">dest=/etc/nginx/nginx.conf</span>  <span class="comment"># 模板</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">ansible_distribution_major_version</span> <span class="string">==</span> <span class="string">&quot;6&quot;</span> </span><br><span class="line">      <span class="attr">notify:</span> <span class="string">restart</span> <span class="string">service</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">start</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span> <span class="string">name=nginx</span> <span class="string">state=started</span> <span class="string">enables=true</span></span><br><span class="line">  <span class="attr">handlers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">restart</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span> <span class="string">name=nginx</span> <span class="string">state=restarted</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看内置变量, 修改 nginx 模板, 其它配置不变</span></span><br><span class="line"><span class="string">ansible</span> <span class="string">websrvs/all</span> <span class="string">-m</span> <span class="string">setup</span> <span class="string">|grep</span> <span class="string">cpu</span>    </span><br><span class="line"></span><br><span class="line"><span class="string">vim</span> <span class="string">templates/nginx.conf.j2</span></span><br><span class="line">  <span class="string">user</span> <span class="string">nginx;</span>  </span><br><span class="line">  <span class="string">worker_processes</span> &#123;&#123; <span class="string">ansible_processor_vcpu**2</span> &#125;&#125;<span class="string">;</span>  <span class="comment">#</span></span><br><span class="line">  <span class="string">server</span> &#123; <span class="string">listen</span>[<span class="string">::</span>]<span class="string">:<span class="template-variable">&#123;&#123; http_port &#125;&#125;</span></span> <span class="string">default_server;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># vim /etc/ansible/hosts  </span></span><br><span class="line">[<span class="string">websrvs</span>]  </span><br><span class="line"><span class="number">192.168</span><span class="number">.30</span><span class="number">.101</span> <span class="string">http_port=81</span>  </span><br><span class="line"><span class="number">192.168</span><span class="number">.30</span><span class="number">.102</span> <span class="string">http_port=82</span>    </span><br><span class="line"></span><br><span class="line"><span class="string">ansible-playbook</span> <span class="string">-e</span> <span class="string">&quot;http_port=99&quot;</span> <span class="string">testtempl.yml</span></span><br></pre></td></tr></table></figure><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">websrvs</span> </span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">create</span> <span class="string">groups</span></span><br><span class="line">    <span class="comment"># item 用的是with_item的内容</span></span><br><span class="line">    <span class="attr">group:</span> <span class="string">name=&#123;&#123;</span> <span class="string">item</span> <span class="string">&#125;&#125;</span> <span class="string">state=present</span> </span><br><span class="line">    <span class="attr">with_items:</span> <span class="comment"># 列表循环 [], with_items: [1, 2, 3]</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">group1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">group2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">group3</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">create</span> <span class="string">users</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">name=&#123;&#123;</span> <span class="string">item.name</span> <span class="string">&#125;&#125;</span> <span class="string">group=&#123;&#123;</span> <span class="string">item.group</span> <span class="string">&#125;&#125;</span> <span class="string">state=present</span></span><br><span class="line">    <span class="attr">with_items:</span>  <span class="comment"># 字典&#123;key.value&#125;</span></span><br><span class="line">      <span class="bullet">-</span> &#123; <span class="attr">name:</span> <span class="string">&#x27;user1&#x27;</span>, <span class="attr">group:</span> <span class="string">&#x27;group1&#x27;</span> &#125; </span><br><span class="line">      <span class="bullet">-</span> &#123; <span class="attr">name:</span> <span class="string">&#x27;user2&#x27;</span>, <span class="attr">group:</span> <span class="string">&#x27;group2&#x27;</span> &#125; </span><br><span class="line">      <span class="bullet">-</span> &#123; <span class="attr">name:</span> <span class="string">&#x27;user3&#x27;</span>, <span class="attr">group:</span> <span class="string">&#x27;group3&#x27;</span> &#125;  </span><br></pre></td></tr></table></figure><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">websrvs</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">web1:</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">81</span></span><br><span class="line">        <span class="comment"># name: web1.xy.com</span></span><br><span class="line">        <span class="attr">rootdir:</span> <span class="string">/data/website1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">web2:</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">82</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">web2.xy.com</span></span><br><span class="line">        <span class="attr">rootdir:</span> <span class="string">/data/website2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">web1:</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">83</span></span><br><span class="line">        <span class="comment"># name: web3.xy.com</span></span><br><span class="line">        <span class="attr">rootdir:</span> <span class="string">/data/website2</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">conf</span></span><br><span class="line">      <span class="attr">templte:</span> <span class="string">src=for1.conf.j2</span> <span class="string">dest=/data/for1.conf</span></span><br><span class="line"><span class="comment">###########</span></span><br><span class="line"><span class="string">vim</span> <span class="string">for1.conf.j2</span></span><br><span class="line">    &#123;<span class="string">%</span> <span class="string">for</span> <span class="string">i</span> <span class="string">in</span> <span class="string">ports</span> <span class="string">%</span>&#125;</span><br><span class="line">      <span class="string">server</span> &#123;</span><br><span class="line">          <span class="string">listen</span> &#123;&#123; <span class="string">i.port</span> &#125;&#125;</span><br><span class="line">          <span class="string">servername</span> &#123;&#123; <span class="string">i.name</span> &#125;&#125;</span><br><span class="line">          <span class="string">documemtroot</span> &#123;&#123; <span class="string">i.rootdir</span> &#125;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#123;<span class="string">%</span> <span class="string">endfor</span> <span class="string">%</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">vim</span> <span class="string">testfor.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">websrvs</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">81</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">82</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">83</span></span><br><span class="line">  <span class="attr">task:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">name:copy</span> <span class="string">conf</span></span><br><span class="line">      <span class="attr">templtate:</span> <span class="string">src=for1.conf.j2</span> <span class="string">dest=/data/for1.conf</span></span><br></pre></td></tr></table></figure><h3 id="if"><a href="#if" class="headerlink" title="if"></a>if</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vim</span> <span class="string">for4.conf.j2</span></span><br><span class="line">  &#123;<span class="string">%</span> <span class="string">for</span> <span class="string">i</span> <span class="string">in</span> <span class="string">ports</span> <span class="string">%</span>&#125;</span><br><span class="line">    <span class="string">server</span> &#123;</span><br><span class="line">      <span class="string">listen</span> &#123;&#123; <span class="string">i.port</span> &#125;&#125;</span><br><span class="line">    &#123;<span class="string">%</span> <span class="string">if</span> <span class="string">i.name</span> <span class="string">defined</span> <span class="string">%</span>&#125;</span><br><span class="line">        <span class="string">servername</span> &#123;&#123; <span class="string">i.name</span> &#125;&#125;</span><br><span class="line">      &#123;<span class="string">%</span> <span class="string">endif</span> <span class="string">%</span>&#125;</span><br><span class="line">      <span class="string">documemtroot</span> &#123;&#123; <span class="string">i.rootdir</span> &#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#123;<span class="string">%</span> <span class="string">endfor</span> <span class="string">%</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="Roles-角色"><a href="#Roles-角色" class="headerlink" title="Roles 角色"></a>Roles 角色</h3><p><a href="https://www.freesion.com/article/5487161337/">参考</a></p>]]></content>
      
      
      <categories>
          
          <category> Ansible </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Js</title>
      <link href="/posts/824395f6.html"/>
      <url>/posts/824395f6.html</url>
      
        <content type="html"><![CDATA[<p>2019-08-21-JS</p><a id="more"></a><h2 id="Js相关知识点"><a href="#Js相关知识点" class="headerlink" title="Js相关知识点"></a>Js相关知识点</h2><h3 id="Js代码运行阶段"><a href="#Js代码运行阶段" class="headerlink" title="Js代码运行阶段:"></a>Js代码运行阶段:</h3><ol><li>解析阶段: 检查是否由语法错误及变量、函数的声明  </li><li>运行阶段: 变量的赋值，代码流程的执行   </li></ol><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><blockquote><p>Number String Boolen undefined null Objec(function, 数组)    </p></blockquote><h3 id="关于this："><a href="#关于this：" class="headerlink" title="关于this："></a>关于this：</h3><ul><li>指的是调用当前方法 / 函数 的那个对象  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn1</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">fn1();<span class="comment">// this =&gt; window</span></span><br><span class="line">------------------------------------------------------</span><br><span class="line">oDiv.onclick = fn1;  <span class="comment">// this =&gt; oDiv, 事件调用不加 ();</span></span><br><span class="line">------------------------------------------------------    </span><br><span class="line">oDiv.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    fn1();<span class="comment">// fn1() 里的this =&gt; window</span></span><br><span class="line">&#125;</span><br><span class="line">------------------------------------------------------</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    name: <span class="string">&#x27;Li&#x27;</span>,</span><br><span class="line">    age: <span class="number">18</span>,</span><br><span class="line">    fun: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> s = <span class="built_in">this</span>.age;   <span class="comment">// this =&gt;obj</span></span><br><span class="line">        <span class="built_in">console</span>.log(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">obj.fun();      </span><br></pre></td></tr></table></figure></li></ul><ul><li>1.以<code>函数</code>的形式调用时, this永远都是window, 比如fun(); 相当于window.fun();</li><li>2.以<code>方法</code>的形式调用时, this是调用方法的那个对象</li><li>3.以<code>构造函数</code>的形式调用时, this是新创建的那个对象</li><li>4.以<code>使用call和apply</code>调用时, this是指定的那个对象</li></ul><h3 id="关于函数返回值："><a href="#关于函数返回值：" class="headerlink" title="关于函数返回值："></a>关于函数返回值：</h3><ul><li><p>函数名+括号: fn1() ==&gt; return 后面的的值，函数返回值</p></li><li><p>仅仅 是函数名调用：fn1 ==&gt;函数体对象为参数，即整个函数代码</p></li><li><p>所有函数默认返回值：未定义</p></li><li><p>return 之后任何代码都不执行</p></li><li><p>函数声明：</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">function</span> 函数名(<span class="params">形参<span class="number">1</span>,形参<span class="number">2</span>,...</span>)</span>&#123;         </span><br><span class="line">        code;                                        </span><br><span class="line">        <span class="keyword">return</span> 返回值;                           </span><br><span class="line">&#125; </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> fun = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        code;</span><br><span class="line">&#125;  </span><br><span class="line">    </span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        code;</span><br><span class="line">    &#125;)();        匿名函数(立即执行函数,自调用匿名函数) </span><br></pre></td></tr></table></figure></li></ul><h3 id="关于定时器："><a href="#关于定时器：" class="headerlink" title="关于定时器："></a>关于定时器：</h3><ul><li>var timer = setInterval(函数名， 毫秒);<ul><li>clearInterval(timer);    // 重复执行 </li><li>clearTimout(timer);    // 执行一次</li></ul></li></ul><h3 id="关于OOP："><a href="#关于OOP：" class="headerlink" title="关于OOP："></a>关于OOP：</h3><ul><li>特点：<ul><li>抽象：抓问题核心</li><li>封装：不考虑内部实现原理，只考虑功能使用</li><li>继承：从已有对象，继承出新的对象，多重继承，多态</li></ul></li><li>组成：<ul><li>方法：函数(过程、动态的)</li><li>属性：变量(状态、静态的)<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">People</span> (<span class="params">name</span>) </span>&#123;  <span class="comment">// 构造</span></span><br><span class="line">    <span class="built_in">this</span>.name = name;<span class="comment">//  属性</span></span><br><span class="line">    <span class="built_in">this</span>.showName = showName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showName</span> (<span class="params"></span>) </span>&#123;<span class="comment">// 方法</span></span><br><span class="line">    alert(<span class="built_in">this</span>.name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> People(<span class="string">&#x27;Jhon&#x27;</span>);</span><br><span class="line">p1.showName();</span><br><span class="line">=========================================</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">People</span> (<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line">People.prototype.showName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="built_in">this</span>.name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> People(<span class="string">&#x27;Jhon&#x27;</span>);</span><br><span class="line">p1.showName();</span><br><span class="line">=========================================</span><br><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">name</span>:<span class="string">&#x27;Li&#x27;</span>, <span class="attr">age</span>:<span class="number">12</span>, <span class="attr">fly</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;&#125;;</span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="关于-DOM-对像-属性-操作的各种尺寸宽高："><a href="#关于-DOM-对像-属性-操作的各种尺寸宽高：" class="headerlink" title="关于 DOM 对像.属性 操作的各种尺寸宽高："></a>关于 DOM 对像.属性 操作的各种尺寸宽高：</h3><ul><li><p><strong>offset</strong></p><ul><li><code>offsetWidth[Height]</code>   –&gt; 元素(盒子)的 <a href>宽高+padding+borde</a> </li><li><code>offsetLeft[Top]</code>   –&gt; 元素(盒子)的<a href>父级带有定位属性，左侧(顶部)距离数字</a>，<strong>从父亲的 padding 开始算，父亲的 border 不算</strong>；若没有定位，则以body为准  </li></ul></li><li><p><strong>offsetParent</strong></p><ul><li>带有定位的父级元素节点，若<a href>没有定位，返回结果为body</a>；若有<a href>返回最近的父级元素</a></li><li>本身定位为<code>fixed</code><ul><li>offsetParent:null (非火狐)</li><li>offsetParent:body（火狐）</li></ul></li><li>本身定位不为<code>fixed</code><ul><li>父级没有定位：offsetParent:body</li><li>父级有定位：offsetParent:定位父级</li></ul></li></ul></li><li><p><strong>scroll</strong>  </p><ul><li><p><code>scrollWidth[Height]</code> –&gt; 元素(盒子)的宽高，<a href>不包括border+margin</a>，<code>scrollWidth[Height]=width[Height]+padding</code>  </p><blockquote><p>scrollHeight有一个特点：如果文字超出了盒子，高度为内容的高（包括超出的内容）；不超出，则是盒子本身高度。</p></blockquote></li><li><p><code>scrollTop[Left]</code> –&gt; 网页被卷去的头部与左部的距离，<a href>兼容写法：</a> <code>window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop</code></p></li></ul></li><li><p><strong>client</strong>  </p><ul><li><code>clientWidth[Height]</code>   –&gt; 元素(盒子)的宽高，<a href>padding + width[height]</a>，调用body / html 为获取网页可视区的宽高</li><li><code>clientX[]Y]</code>   –&gt; 鼠标距离可视区<a href>左侧  /   上侧的距离</a></li><li><code>clientTop[Left]</code>   –&gt; 元素(盒子)的<a href>上   /   左border</a></li></ul></li><li><p>总结：  </p><ul><li><p>区别：宽高</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">offsetWidth = width + padding + border  <span class="comment">//  占位宽</span></span><br><span class="line">offsetHeight = height + padding + border     <span class="comment">//  占位高</span></span><br><span class="line"></span><br><span class="line">scrollWidth = 内容宽度（不包含border） <span class="comment">//  内容宽</span></span><br><span class="line">scrollHeight = 内容高度（不包含border） <span class="comment">// 内容高</span></span><br><span class="line"></span><br><span class="line">clientWidth = width + padding   <span class="comment">//  可视区宽</span></span><br><span class="line">clientHeight = height + padding <span class="comment">//  可视区高</span></span><br></pre></td></tr></table></figure></li><li><p>区别：上左  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">offsetTop/offsetLeft：</span><br><span class="line">调用者：任意元素。(盒子为主)</span><br><span class="line">作用：距离父系盒子中带有定位的距离。</span><br><span class="line"></span><br><span class="line">scrollTop/scrollLeft：</span><br><span class="line">调用者：<span class="built_in">document</span>.body.scrollTop（<span class="built_in">window</span>调用）(盒子也可以调用，但必须有滚动条)</span><br><span class="line">作用：浏览器无法显示的部分（被卷去的部分）。</span><br><span class="line"></span><br><span class="line">clientY/clientX：</span><br><span class="line">调用者：event   <span class="comment">// 重要</span></span><br><span class="line">作用：鼠标距离浏览器可视区域的距离（左、上）</span><br></pre></td></tr></table></figure></li><li><img src="/posts/824395f6/BOM.png" class title="[BOM]">  </li></ul></li></ul><h3 id="获取元素的样式："><a href="#获取元素的样式：" class="headerlink" title="获取元素的样式："></a>获取元素的样式：</h3><ul><li><p>currentStyle –&gt;该属性获取当前元素的样式，只有IE支持</p><ul><li>box1.currentStyle.width</li></ul></li><li><p>getComputerStyle() –&gt;该方法获取当前元素样式，</p><ul><li>getComputerStyle((box1, null).width);</li></ul></li><li><p><a href="https://blog.csdn.net/qq_20069429/article/details/83267887">参看 {}、[]、()区别</a></p></li><li><p><code>&#123;&#125;</code> –&gt;表示对象;<code>[]</code>–&gt;表示对象的属性、方法;<code>()</code>–&gt;如果用在方法名后面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">obj, attr</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> obj.currentStyle?obj.currentStyle[attr]:obj.getComputerStyle[attr];</span><br><span class="line">&#125;</span><br><span class="line">showMsg.innerHTML = <span class="string">&quot;x = &quot;</span>+x + <span class="string">&quot;, y = &quot;</span>+y; <span class="comment">// x, 均为变量</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="关于闭包："><a href="#关于闭包：" class="headerlink" title="关于闭包："></a>关于闭包：</h3><ul><li>嵌套的内部函数引用了嵌套的外部函数的变量，就产生了闭包</li><li>闭包 存在于嵌套的内部函数中<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">var</span> b = <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>)</span>&#123; <span class="comment">// 执行函数定义产生闭包(不用调用内部函数)</span></span><br><span class="line">  <span class="built_in">console</span>.log(a);</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br><span class="line">fn1();  <span class="comment">//</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="关于ES6"><a href="#关于ES6" class="headerlink" title="关于ES6"></a>关于ES6</h3><blockquote><p>变量的解构赋值, 给多个形参赋值</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">对象的解构赋值: </span><br><span class="line"><span class="keyword">let</span> obj = &#123;<span class="attr">username</span>: <span class="string">&#x27;anyue&#x27;</span>, <span class="attr">age</span>: <span class="number">39</span>&#125;;</span><br><span class="line"><span class="comment">// let username = obj.username;</span></span><br><span class="line"><span class="keyword">let</span> &#123;username, age&#125; = obj;</span><br><span class="line"></span><br><span class="line">数组的解构赋值:</span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="literal">true</span>];</span><br><span class="line"><span class="keyword">let</span> [, , c, d, e] =arr;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">&#123;username, age&#125;</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(username, age);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="模版字符串"><a href="#模版字符串" class="headerlink" title="模版字符串"></a>模版字符串</h3><p><strong>必须用 `` 包含</strong><br><strong>变化的部分使用 {xxx} 定义</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;<span class="attr">username</span>: <span class="string">&#x27;anyue&#x27;</span>, <span class="attr">age</span>: <span class="number">39</span>&#125;;</span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;我的名字是: &#x27;</span> + obj.username + <span class="string">&#x27;, 我今年的年龄是: &#x27;</span> + obj.age;</span><br><span class="line">str = <span class="string">`我的名字是: $(obj.username), 我今年的年龄是: &#123;obj.age&#125;`</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="对象的简写方式"><a href="#对象的简写方式" class="headerlink" title="对象的简写方式"></a>对象的简写方式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> username = <span class="string">&#x27;anyue&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> age = <span class="number">39</span>;</span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="comment">// username: username,</span></span><br><span class="line">    <span class="comment">// age: age,</span></span><br><span class="line">    <span class="comment">// getName: function()&#123;&#125;</span></span><br><span class="line"></span><br><span class="line">    username,   <span class="comment">// 省略同名的属性值</span></span><br><span class="line">    age,</span><br><span class="line">    getName() &#123; <span class="comment">// 省略方法的 function</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.username;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h3><p>不是调用的时候决定的, 而是在定义的时候处在的对像就是 它的this, 常规函数则相反<br>箭头函数的<code>this</code>确定: 外层有函数, 则外层函数的this就是内部箭头函数的this, 若没有, 则this是window<br>参数 =&gt; 语句/表达式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// let fun = function() &#123;&#125;;</span></span><br><span class="line"><span class="keyword">let</span> fun = <span class="function">() =&gt;</span> <span class="built_in">console</span>(<span class="string">&#x27;我是箭头函数&#x27;</span>);</span><br><span class="line">fun();</span><br><span class="line">形参:</span><br><span class="line">  <span class="number">1.</span>没有形参:</span><br><span class="line">    <span class="keyword">let</span> fun1 = <span class="function">() =&gt;</span> <span class="built_in">console</span>.log(<span class="string">&#x27;我是箭头函数&#x27;</span>);</span><br><span class="line">    fun1;</span><br><span class="line">  <span class="number">2.</span>只有一个形参:</span><br><span class="line">    <span class="keyword">let</span> fun2 = <span class="function"><span class="params">a</span> =&gt;</span> <span class="built_in">console</span>.log(a); <span class="comment">// 形参的()可以省略</span></span><br><span class="line">    fun2(aaa);</span><br><span class="line">  <span class="number">3.</span>两个及以上:</span><br><span class="line">    <span class="keyword">let</span> fun3 = <span class="function">(<span class="params">x, y</span>) =&gt;</span> <span class="built_in">console</span>.log(x, y); </span><br><span class="line">    fun3(<span class="number">25</span>, <span class="number">36</span>);</span><br><span class="line">函数体:</span><br><span class="line">  <span class="number">1.</span>函数体只有一条执行语句/表达式, &#123;&#125;可以省略, 会自动返回执行的结果:</span><br><span class="line">    <span class="keyword">let</span> fun4 = <span class="function">(<span class="params">x, y</span>) =&gt;</span> x+y; <span class="comment">// let fun1 = (x, y) =&gt; &#123;return x+y&#125;;</span></span><br><span class="line">    <span class="built_in">console</span>.log(fun4(<span class="number">25</span>, <span class="number">36</span>));</span><br><span class="line">  <span class="number">2.</span>函数体不只一条执行语句/表达式:</span><br><span class="line">    <span class="keyword">let</span> fun5 = <span class="function">(<span class="params">x, y</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(x, y);</span><br><span class="line">        <span class="keyword">return</span> x + y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(fun5(<span class="number">25</span>, <span class="number">36</span>));</span><br><span class="line">测试箭头函数的<span class="built_in">this</span>:</span><br><span class="line"><span class="keyword">let</span> btn1 = doucument.getElementById(<span class="string">&#x27;btn1&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> btn2 = doucument.getElementById(<span class="string">&#x27;btn2&#x27;</span>);</span><br><span class="line"></span><br><span class="line">btn1.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;alert(<span class="built_in">this</span>)&#125;;    <span class="comment">// this = btn1</span></span><br><span class="line">btn2.onclick = <span class="function">() =&gt;</span> &#123;alert(<span class="built_in">this</span>)&#125;  <span class="comment">// this = Window</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    name: <span class="string">&#x27;箭头函数&#x27;</span>,</span><br><span class="line">    getName: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        btn2.onclick = <span class="function">() =&gt;</span> &#123;alert(<span class="built_in">this</span>)&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">obj.getName();  <span class="comment">// this = obj</span></span><br></pre></td></tr></table></figure><h3 id="三点运算符-amp-amp-数组扩展方法"><a href="#三点运算符-amp-amp-数组扩展方法" class="headerlink" title="三点运算符 &amp;&amp; 数组扩展方法"></a>三点运算符 &amp;&amp; 数组扩展方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">...value</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value);</span><br><span class="line">    value.foreach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(item, index);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">2</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr.indexOf(<span class="number">4</span>));    <span class="comment">// 1 得到值在数组中的第一个下标</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr.lastIndexOf(<span class="number">4</span>));    <span class="comment">// 7 </span></span><br><span class="line"></span><br><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item, index);   <span class="comment">// 遍历数组</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr1 = arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item+<span class="number">10</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(arr1, arr);  <span class="comment">// 遍历数组返回新的数组, 返回加工之后的值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr2 = arr.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item &gt; <span class="number">3</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(arr2, arr); <span class="comment">// 4, 6, 5, 4</span></span><br></pre></td></tr></table></figure><h3 id="Promise-对象"><a href="#Promise-对象" class="headerlink" title="Promise 对象"></a>Promise 对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getNews</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 状态: 初始化</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 执行异步任务</span></span><br><span class="line">        <span class="keyword">let</span> xmlHttp = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">        xmlHttp.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(xmlHttp.readyState ===<span class="number">4</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(xmlHttp.status == <span class="number">200</span>)&#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(xmlHttp.reponseText);</span><br><span class="line">                    resolve(xmlHttp.reponseText);  <span class="comment">// 修改</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                reject(<span class="string">&#x27;暂时没有数据&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        xmlHttp.open(<span class="string">&#x27;GET&#x27;</span>, url);</span><br><span class="line">        xmlHttp.send();</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> promise;</span><br><span class="line">&#125;</span><br><span class="line">getNews(<span class="string">&#x27;http://localhost:1080/news?id=2&#x27;</span>)</span><br><span class="line">    .then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data);</span><br><span class="line">        <span class="keyword">let</span> commentsUrl = <span class="built_in">JSON</span>.parse(data).commentsUrl;</span><br><span class="line">        <span class="keyword">let</span> url = <span class="string">&#x27;http://localhost:1080&#x27;</span> + commentsUrl;</span><br><span class="line">        <span class="keyword">return</span> getNews(url);</span><br><span class="line">    &#125;, <span class="function">(<span class="params">error</span>) =&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(error);</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell</title>
      <link href="/posts/4592b2fd.html"/>
      <url>/posts/4592b2fd.html</url>
      
        <content type="html"><![CDATA[<p>2019-08-12-Shell</p><a id="more"></a><h1 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h1><h2 id="第一个Shell"><a href="#第一个Shell" class="headerlink" title="第一个Shell"></a>第一个Shell</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello World!&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bash -x file.sh        <span class="comment">#单步执行  </span></span><br><span class="line">/etc/motd &amp;&amp; /etc/issue  </span><br><span class="line">printenv env <span class="built_in">export</span>    <span class="comment"># 查看当前shell中的环境变量</span></span><br><span class="line"><span class="built_in">set</span>                    <span class="comment"># 查看shell中的变量</span></span><br><span class="line"><span class="built_in">unset</span>                  <span class="comment"># 撤销变量</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">选项</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">-e</td><td align="left">支持\转义</td></tr><tr><td align="left">-n</td><td align="left">输出不换行</td></tr></tbody></table><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">your_name=<span class="string">&quot;anyue967&quot;</span>,  <span class="comment"># 变量名前不加$，不能有空格  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> `ls /etc`<span class="comment"># 显示直接俄赋值/语句赋值</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> $(ls /etc)  </span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">特殊符号</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">()</td><td align="left">重新开子shell中执行 <code>$( ls;cd /etc/ )</code></td></tr><tr><td align="left">{}</td><td align="left">当前shell中执行<code>$&#123; ls;cd /etc/; &#125;</code></td></tr><tr><td align="left">“”</td><td align="left">–</td></tr><tr><td align="left">‘’</td><td align="left">–</td></tr><tr><td align="left">`` / $()</td><td align="left">执行命令</td></tr><tr><td align="left">[]</td><td align="left">变量测试</td></tr><tr><td align="left">#</td><td align="left">注释</td></tr><tr><td align="left">$</td><td align="left">引用变量</td></tr><tr><td align="left">\</td><td align="left">转义符</td></tr></tbody></table><h3 id="使用变量"><a href="#使用变量" class="headerlink" title="使用变量"></a>使用变量</h3><p><strong>引用变量时, 变量名前要加<code>$</code></strong>, 建议变量名外加<code>&#123;&#125;</code>, 一种习惯</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> skill <span class="keyword">in</span> Ada Coffe Action Java Shell; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;I am good at <span class="variable">$&#123;skill&#125;</span>Script&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="变量类型-局部、环境、Shell变量三种"><a href="#变量类型-局部、环境、Shell变量三种" class="headerlink" title="变量类型: 局部、环境、Shell变量三种"></a>变量类型: 局部、环境、Shell变量三种</h3><ul><li><p><strong>local 局部变量</strong> 在脚本或命令中定义, 仅在当前shell实例中有效, 其他shell启动的程序不能访问局部变量；</p></li><li><p><strong>export 环境变量</strong> 作用范围：当前shell及子shell；   </p></li><li><p><strong>shell变量</strong> shell变量是由shell程序设置的特殊变量, shell变量中有一部分是环境变量，有一部分是局部变量，这些变量保证了shell的正常运行；</p></li><li><p><strong>只读变量</strong> <code>readonly name 或 declare -r name  readonly -p</code>； </p></li><li><p>各个环境变量配置文件(<code>source &lt;==&gt; .</code>)</p><ul><li>profile: <code>设定环境变量，运行命令/脚本</code></li><li>bashrc: <code>设定本地变量，定义命令别名</code><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><img src="/posts/4592b2fd/bash.png" class title="[bash 配置]">  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">登录shell：/etc/profile --&gt;/etc/profile.d/*.sh --&gt;~/.bash_profile --&gt;~/.bashrc --&gt;/etc/bashrc</span><br><span class="line">非登录shell：~/.bashrc --&gt;/etc/bashrc --&gt;/etc/profile.d/*.sh   </span><br></pre></td></tr></table></figure></li></ul></li><li><p>位置变量</p><table><thead><tr><th align="left">符号</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">$1,$2,…</td><td align="left">对应位置参数</td></tr><tr><td align="left">$0</td><td align="left">脚本名称</td></tr><tr><td align="left">$*</td><td align="left">传递所有参数,全部参数合为一个字符串</td></tr><tr><td align="left">$@</td><td align="left">传递所有参数,每个参数表现为独立字符串</td></tr><tr><td align="left">$#</td><td align="left">参数个数</td></tr><tr><td align="left">$?</td><td align="left">返回最后一条命令执行的状态</td></tr><tr><td align="left">$$</td><td align="left">当前进程PID</td></tr><tr><td align="left">$!</td><td align="left">后台运行最后一个进程的PID</td></tr><tr><td align="left">set</td><td align="left">清空所有位置变量</td></tr><tr><td align="left">shift n</td><td align="left">移动参数,前n位参数被销毁</td></tr></tbody></table></li><li><p>关于<code>()、(())、[]、[[]]、&#123;&#125;</code></p></li><li><p><a href="https://www.cnblogs.com/splendid/p/11201733.html">参考</a></p><table><thead><tr><th align="left">类型</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">()</td><td align="left">用于<code>多个命令组</code>、命令替换<code>cmd</code>、初始化数组<code>$(cmd)</code></td></tr><tr><td align="left">(())</td><td align="left"><code>算数</code>:整数扩展、运算符、重定义变量值、算数运算比较</td></tr><tr><td align="left">[[]]</td><td align="left">支持数学运算，支持逻辑测试: `&amp;&amp;</td></tr><tr><td align="left">[]/test</td><td align="left">不支持数学运算，比较运算:<code>== !=</code>，逻辑测试使用: <code>-a -o !</code></td></tr><tr><td align="left">{}</td><td align="left">用于命令合集或者范围，mkdir -p /data/201{7,8}</td></tr></tbody></table></li></ul><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><h3 id="字符串-可以用-39-39-也可以用-quot-quot"><a href="#字符串-可以用-39-39-也可以用-quot-quot" class="headerlink" title="字符串, 可以用&#39;&#39;, 也可以用&quot;&quot;"></a><strong>字符串, 可以用<code>&#39;&#39;</code>, 也可以用<code>&quot;&quot;</code></strong></h3><ul><li><p><strong>单引号</strong>里的任何字符都会原样输出, 单引号字符串中的变量是无效的;</p></li><li><p><strong>单引号</strong>字串中不能出现单独一个的单引号(对单引号使用转义符后也不行), 但可成对出现，作为字符串拼接使用</p></li><li><p><strong>双引号</strong>里可以有变量, 可以出现转义字符</p></li><li><p><strong>获取字串长度</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string=<span class="string">&quot;abcd&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#string&#125;</span><span class="comment"># 4</span></span><br></pre></td></tr></table></figure></li><li><p><strong>提取字符串</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string=<span class="string">&quot;anyue967 is a good website&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;string:1:4&#125;</span><span class="comment"># nyue</span></span><br></pre></td></tr></table></figure></li><li><p><strong><code># ##</code>表示去掉左边, <code>#</code>表示从左边删除到第一个指定的字符; <code>##</code>表示从左边删除到最后一个指定的字符</strong>  </p></li><li><p><strong><code>% %%</code>表示去掉右边, <code>%</code>表示从右边删除到第一个指定的字符; <code>%%</code>表示从右边删除到最后一个指定的字符</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!bin/bash</span></span><br><span class="line">var=<span class="string">&quot;http://www.runoob.com/linux/linux-shell-variable.html&quot;</span></span><br><span class="line"></span><br><span class="line">s1=<span class="variable">$&#123;var%%t*&#125;</span>     <span class="comment"># h</span></span><br><span class="line">s2=<span class="variable">$&#123;var%t*&#125;</span>      <span class="comment"># http://www.runoob.com/linux/linux-shell-variable.h</span></span><br><span class="line">s3=<span class="variable">$&#123;var%%.*&#125;</span>     <span class="comment"># http://www</span></span><br><span class="line">s4=<span class="variable">$&#123;var#*/&#125;</span>      <span class="comment"># /www.runoob.com/linux/linux-shell-variable.html</span></span><br><span class="line">s5=<span class="variable">$&#123;var##*/&#125;</span>     <span class="comment"># 空</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="bash支持一维数组-不支持多维数组-并且没有限定数组的大小"><a href="#bash支持一维数组-不支持多维数组-并且没有限定数组的大小" class="headerlink" title="bash支持一维数组(不支持多维数组),并且没有限定数组的大小"></a>bash支持一维数组(不支持多维数组),并且没有限定数组的大小</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">定义: arrName=(value1 value2 ... n)</span><br><span class="line"></span><br><span class="line">array_name=(</span><br><span class="line">  value0</span><br><span class="line">  value1</span><br><span class="line">  value2</span><br><span class="line">)</span><br><span class="line">array_name[0]=value0  <span class="comment"># 引用数组  </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;数组元素: <span class="variable">$&#123;array_name[@]&#125;</span>&quot;</span>  </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;数组元素: <span class="variable">$&#123;array_name[*]&#125;</span>&quot;</span>  </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;数组元素个数为: <span class="variable">$&#123;#array_name[*]&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p><code>#</code>开头单行注释</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:&lt;&lt;EOF</span><br><span class="line">comment...</span><br><span class="line">comment...</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="read命令-用于获取键盘输入信息"><a href="#read命令-用于获取键盘输入信息" class="headerlink" title="read命令, 用于获取键盘输入信息"></a>read命令, 用于获取键盘输入信息</h2><p><code>read [-option] [variable ...]</code></p><table><thead><tr><th align="left">选项</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">-p</td><td align="left">“提示信息”</td></tr><tr><td align="left">-t</td><td align="left">时间</td></tr><tr><td align="left">-s</td><td align="left">隐藏输入</td></tr><tr><td align="left">-n</td><td align="left">只接收一个输入字符就会执行</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;input a val:&quot;</span> a</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;input a val:&quot;</span> b</span><br><span class="line"></span><br><span class="line">c=$((<span class="variable">$a</span>+<span class="variable">$b</span>))          <span class="comment"># $((exp))</span></span><br><span class="line">c=$[<span class="variable">$a</span>+<span class="variable">$b</span>]            <span class="comment"># $[exp]</span></span><br><span class="line"><span class="built_in">let</span> c=<span class="variable">$a</span>+<span class="variable">$b</span>           <span class="comment"># let exp</span></span><br><span class="line">c=expr <span class="variable">$a</span> + <span class="variable">$b</span>        <span class="comment"># expr 算数表达式  </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;result=<span class="variable">$&#123;r&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Shell 传递参数实例！&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;执行的文件名：<span class="variable">$0</span>&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第一个参数为：<span class="variable">$1</span>&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第二个参数为：<span class="variable">$2</span>&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第三个参数为：<span class="variable">$3</span>&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;参数个数：<span class="variable">$#</span>&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;进程号：$$&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;后台运行的最后一个进程号：$!&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;传递参数作为字串显示：$*&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;命令推出状态：$?&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="Shell基本运算符"><a href="#Shell基本运算符" class="headerlink" title="Shell基本运算符"></a>Shell基本运算符</h2><h3 id="let-命令用于指定算术运算-即let-expretion"><a href="#let-命令用于指定算术运算-即let-expretion" class="headerlink" title="let 命令用于指定算术运算, 即let expretion"></a>let 命令用于指定算术运算, 即let expretion</h3><ul><li>let var=$[exp]  算数表达式  $((exp)) </li><li><code>echo $[$RANDOM%50]</code>: 0-49之间随机数<ul><li><code>COLOR=$[$RANDOM%7+31]; echo -e &quot;\e[1;$&#123;COLOR&#125;mcolor\e[0m&quot;</code></li></ul></li></ul><h3 id="declare"><a href="#declare" class="headerlink" title="declare"></a>declare</h3><ul><li>declare -i I=1   # 整型变量声明  </li></ul><h3 id="算数运算-用"><a href="#算数运算-用" class="headerlink" title="算数运算, 用(())"></a>算数运算, 用<code>(())</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">a=10</span><br><span class="line">b=20</span><br><span class="line"></span><br><span class="line">val=expr <span class="variable">$a</span> + <span class="variable">$b</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;a + b : <span class="variable">$val</span>&quot;</span></span><br><span class="line"></span><br><span class="line">val=expr <span class="variable">$a</span> - <span class="variable">$b</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;a - b : <span class="variable">$val</span>&quot;</span></span><br><span class="line"></span><br><span class="line">val=expr <span class="variable">$a</span> \* <span class="variable">$b</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;a * b : <span class="variable">$val</span>&quot;</span></span><br><span class="line"></span><br><span class="line">val=expr <span class="variable">$b</span> / <span class="variable">$a</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;b / a : <span class="variable">$val</span>&quot;</span></span><br><span class="line"></span><br><span class="line">val=expr <span class="variable">$b</span> % <span class="variable">$a</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;b % a : <span class="variable">$val</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [<span class="variable">$a</span> == <span class="variable">$b</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;a 等于 b&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> != <span class="variable">$b</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;a 不等于 b&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="关系运算-eq-ne-gt-lt-le"><a href="#关系运算-eq-ne-gt-lt-le" class="headerlink" title="关系运算(-eq -ne -gt -lt -le)"></a>关系运算(-eq -ne -gt -lt -le)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">a=10</span><br><span class="line">b=20</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> -eq <span class="variable">$b</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> -eq <span class="variable">$b</span> : a 等于 b&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> -eq <span class="variable">$b</span>: a 不等于 b&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> -ne <span class="variable">$b</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> -ne <span class="variable">$b</span>: a 不等于 b&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> -ne <span class="variable">$b</span> : a 等于 b&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> -gt <span class="variable">$b</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> -gt <span class="variable">$b</span>: a 大于 b&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> -gt <span class="variable">$b</span>: a 不大于 b&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> -lt <span class="variable">$b</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> -lt <span class="variable">$b</span>: a 小于 b&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> -lt <span class="variable">$b</span>: a 不小于 b&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> -ge <span class="variable">$b</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> -ge <span class="variable">$b</span>: a 大于或等于 b&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> -ge <span class="variable">$b</span>: a 小于 b&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> -le <span class="variable">$b</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> -le <span class="variable">$b</span>: a 小于或等于 b&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> -le <span class="variable">$b</span>: a 大于 b&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="布尔运算-a-o"><a href="#布尔运算-a-o" class="headerlink" title="布尔运算(!= -a -o)"></a>布尔运算(!= -a -o)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">a=10</span><br><span class="line">b=20</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> != <span class="variable">$b</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> != <span class="variable">$b</span> : a 不等于 b&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> == <span class="variable">$b</span>: a 等于 b&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> -lt 100 -a <span class="variable">$b</span> -gt 15 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> 小于 100 且 <span class="variable">$b</span> 大于 15 : 返回 true&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> 小于 100 且 <span class="variable">$b</span> 大于 15 : 返回 false&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> -lt 100 -o <span class="variable">$b</span> -gt 100 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> 小于 100 或 <span class="variable">$b</span> 大于 100 : 返回 true&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> 小于 100 或 <span class="variable">$b</span> 大于 100 : 返回 false&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> -lt 5 -o <span class="variable">$b</span> -gt 100 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> 小于 5 或 <span class="variable">$b</span> 大于 100 : 返回 true&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> 小于 5 或 <span class="variable">$b</span> 大于 100 : 返回 false&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="逻辑运算-amp-amp"><a href="#逻辑运算-amp-amp" class="headerlink" title="逻辑运算(&amp;&amp; || )"></a>逻辑运算(&amp;&amp; || )</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">a=10</span><br><span class="line">b=20</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$a</span> -lt 100 &amp;&amp; <span class="variable">$b</span> -gt 100 ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;返回 true&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;返回 false&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$a</span> -lt 100 || <span class="variable">$b</span> -gt 100 ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;返回 true&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;返回 false&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="文件测试-r-w-x-f-d-s-e"><a href="#文件测试-r-w-x-f-d-s-e" class="headerlink" title="文件测试(-r -w -x -f -d -s -e)"></a>文件测试(-r -w -x -f -d -s -e)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">file=<span class="string">&quot;/var/www/runoob/test.sh&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -r <span class="variable">$file</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;文件可读&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;文件不可读&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -w <span class="variable">$file</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;文件可写&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;文件不可写&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -x <span class="variable">$file</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;文件可执行&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;文件不可执行&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$file</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;文件为普通文件&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;文件为特殊文件&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="variable">$file</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;文件是个目录&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;文件不是个目录&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -s <span class="variable">$file</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;文件不为空&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;文件为空&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -e <span class="variable">$file</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;文件存在&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;文件不存在&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="字符串运算-z-n"><a href="#字符串运算-z-n" class="headerlink" title="字符串运算(= != -z -n)"></a>字符串运算(= != -z -n)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">a=<span class="string">&quot;abc&quot;</span></span><br><span class="line">b=<span class="string">&quot;efg&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> = <span class="variable">$b</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> = <span class="variable">$b</span> : a 等于 b&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> = <span class="variable">$b</span>: a 不等于 b&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> != <span class="variable">$b</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> != <span class="variable">$b</span> : a 不等于 b&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> != <span class="variable">$b</span>: a 等于 b&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="variable">$a</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;-z <span class="variable">$a</span> : 字符串长度为 0&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;-z <span class="variable">$a</span> : 字符串长度不为 0&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$a</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;-n <span class="variable">$a</span> : 字符串长度不为 0&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;-n <span class="variable">$a</span> : 字符串长度为 0&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> : 字符串不为空&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> : 字符串为空&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="Shell-printf"><a href="#Shell-printf" class="headerlink" title="Shell printf"></a>Shell printf</h2><h3 id="print-format-str-arguments"><a href="#print-format-str-arguments" class="headerlink" title="print format-str [arguments...]"></a><code>print format-str [arguments...]</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%-10s %-8s %-4s\n&quot;</span> 姓名 性别 体重kg  </span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%-10s %-8s %-4.2f\n&quot;</span> 郭靖 男 66.1234 </span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%-10s %-8s %-4.2f\n&quot;</span> 杨过 男 48.6543 </span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%-10s %-8s %-4.2f\n&quot;</span> 郭芙 女 47.9876 </span><br><span class="line"></span><br><span class="line">姓名     性别   体重kg</span><br><span class="line">郭靖     男      66.12</span><br><span class="line">杨过     男      48.65</span><br><span class="line">郭芙     女      47.99</span><br></pre></td></tr></table></figure><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="if-elif-else-fi"><a href="#if-elif-else-fi" class="headerlink" title="if-elif-else-fi"></a>if-elif-else-fi</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">ratio = $(df -h |grep /dev/sda3 |awk <span class="string">&#x27;&#123;print $5&#125;&#x27;</span> |cut -d <span class="string">&quot;%&quot;</span> -f1)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$ratio</span>&quot;</span> -ge 80 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;钉钉报警!&quot;</span> </span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">----------------------------------------------------</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">ntpdate asia.pool.ntp.org &amp;&gt;/dev/null</span><br><span class="line">date = $(date +%Y%m%d)</span><br><span class="line">size = $(du -sh /var/lib/mysql)</span><br><span class="line"><span class="keyword">if</span> [ -d /tmp/dbbak ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Date: <span class="variable">$date</span>!&quot;</span> &gt;/tmp/dbbak/dbinfo.txt</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Date: <span class="variable">$size</span>!&quot;</span> &gt;&gt;/tmp/dbbak/dbinfo.txt</span><br><span class="line">  <span class="built_in">cd</span> /tmp/dbbak</span><br><span class="line">  tar -czf mysql-lib-<span class="variable">$date</span>.tar.gz /var/lib/mysql dbinfo.txt &amp;&gt;/dev/null</span><br><span class="line">  rm -rf /tmp/dbbak/dbinfo.txt</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  mkdir /tmp/dbbak</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Date: <span class="variable">$date</span>!&quot;</span> &gt;/tmp/dbbak/dbinfo.txt</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Date: <span class="variable">$size</span>!&quot;</span> &gt;&gt;/tmp/dbbak/dbinfo.txt</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">-----------------------------------------------------</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">port = `nmap -sT 192.168.137.129 |grep tcp |grep http |awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$port</span>&quot;</span> == <span class="string">&quot;open&quot;</span>]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(date)</span> httpd is ok!&quot;</span> &gt;&gt;/tmp/autostart-acc.log</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    /etc/init.d/httpd start &amp;&gt;/dev/null</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(date)</span> restart ok!&quot;</span> &gt;&gt;/tmp/autostart-acc.log</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">-----------------------------------------------------</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -t 30 -p <span class="string">&quot;Input num1:&quot;</span> num1</span><br><span class="line"><span class="built_in">read</span> -t 30 -p <span class="string">&quot;Input num2:&quot;</span> num2</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$num1</span>&quot;</span> -a -n <span class="string">&quot;<span class="variable">$num2</span>&quot;</span> -a -n <span class="string">&quot;<span class="variable">$opt</span>&quot;</span> ]; <span class="keyword">then</span> </span><br><span class="line">  test1 = $(<span class="built_in">echo</span> num1 |sed <span class="string">&#x27;s/[0-9]//g&#x27;</span>)</span><br><span class="line">  test2 = $(<span class="built_in">echo</span> num2 |sed <span class="string">&#x27;s/[0-9]//g&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$test1</span>&quot;</span> -a -z <span class="string">&quot;<span class="variable">$test2</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$opt</span>&quot;</span> == <span class="string">&#x27;+&#x27;</span> ]; <span class="keyword">then</span></span><br><span class="line">      value = $(( <span class="variable">$num1</span> + <span class="variable">$num2</span> ))</span><br><span class="line">    <span class="keyword">elif</span> [ <span class="string">&quot;opt&quot;</span> == <span class="string">&#x27;-&#x27;</span> ]; <span class="keyword">then</span> </span><br><span class="line">      value = $(( <span class="variable">$num1</span> - <span class="variable">$num2</span> ))</span><br><span class="line">    <span class="keyword">elif</span> [ <span class="string">&quot;opt&quot;</span> == <span class="string">&#x27;*&#x27;</span> ]; <span class="keyword">then</span> </span><br><span class="line">      value = $(( <span class="variable">$num1</span> * <span class="variable">$num2</span> ))</span><br><span class="line">    <span class="keyword">elif</span> [ <span class="string">&quot;opt&quot;</span> == <span class="string">&#x27;/&#x27;</span> ]; <span class="keyword">then</span></span><br><span class="line">      value = $(( <span class="variable">$num1</span> / <span class="variable">$num2</span> ))</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;Please enter a valid symbol&quot;</span></span><br><span class="line">      <span class="built_in">exit</span> 10</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Please input content&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 12</span><br><span class="line"><span class="keyword">fi</span> </span><br></pre></td></tr></table></figure><h3 id="for-do-done"><a href="#for-do-done" class="headerlink" title="for-do-done"></a>for-do-done</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cd</span> /root/tar</span><br><span class="line">ls *.tar.gz &gt;tar.log</span><br><span class="line">ls *.tgz &gt;&gt;tar.log &amp;&gt;/dev/null</span><br><span class="line">line = $(cat tar.log |wc -l)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$line</span></span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">  tar -xzvf <span class="variable">$i</span> -C /root/tar</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">rm -rf tar.log</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (( i=1; i&lt;<span class="string">&quot;<span class="variable">$line</span>&quot;</span>; i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  num = $(cat tar.log |awk <span class="string">&#x27;NR==&#x27;</span><span class="variable">$i</span><span class="string">&#x27; &#123;print $1&#125;&#x27;</span>)</span><br><span class="line">  tar -xzvf <span class="variable">$num</span> -C /root/tar</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">rm -rf tar.log</span><br><span class="line">---------------------------------------------------------</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">grep <span class="string">&quot;&lt;\([0-9]\&#123;1,3\&#125;\.\)\&#123;3\&#125;[0-9]\&#123;1,3\&#125;\&gt;&quot;</span> /root/ip.txt &gt;/root/iptest_1.txt</span><br><span class="line">grep <span class="string">&quot;^[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;$&quot;</span> /root/ip.txt &gt;/root/iptest_1.txt</span><br><span class="line">line = $(wc -l /root/iptest_1.txt awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span> &gt;/root/iptest.txt</span><br><span class="line"><span class="keyword">for</span> (( i=1; i&lt;=<span class="variable">$line</span>; i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  cat /root/iptest_1.txt |awk <span class="string">&#x27;NR==&#x27;</span><span class="variable">$i</span><span class="string">&#x27; &#123;print&#125;&#x27;</span> &gt;/root/iptest_2.txt</span><br><span class="line">  a = $(cat /root/iptest_2.txt |cut -d <span class="string">&#x27;.&#x27;</span> -f1)</span><br><span class="line">  b = $(cat /root/iptest_2.txt |cut -d <span class="string">&#x27;.&#x27;</span> -f2)</span><br><span class="line">  c = $(cat /root/iptest_2.txt |cut -d <span class="string">&#x27;.&#x27;</span> -f3)</span><br><span class="line">  d = $(cat /root/iptest_2.txt |cut -d <span class="string">&#x27;.&#x27;</span> -f4)</span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -lt 1 -o <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -gt 255 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">continue</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$b</span>&quot;</span> -lt 0 -o <span class="string">&quot;<span class="variable">$b</span>&quot;</span> -gt 255 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">continue</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$c</span>&quot;</span> -lt 0 -o <span class="string">&quot;<span class="variable">$c</span>&quot;</span> -gt 255 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">continue</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$d</span>&quot;</span> -lt 0 -o <span class="string">&quot;<span class="variable">$d</span>&quot;</span> -gt 255 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">continue</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  cat /root/iptest_2.txt &gt;&gt;/root/iptest.txt</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">rm -rf /root/iptest_1.txt</span><br><span class="line">---------------------------------------------------------</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -t 30 -p <span class="string">&quot;Please input users name:&quot;</span> NAME</span><br><span class="line"><span class="built_in">read</span> -t 30 -p <span class="string">&quot;Please input the number of users:&quot;</span> NUM</span><br><span class="line"><span class="built_in">read</span> -t 30 -p <span class="string">&quot;Please input the password of users name:&quot;</span> PASS</span><br><span class="line"><span class="keyword">if</span> [ ! -z <span class="string">&quot;<span class="variable">$NAME</span>&quot;</span> -a ! -z <span class="string">&quot;<span class="variable">$NUM</span>&quot;</span> -a ! -z <span class="string">&quot;<span class="variable">$PASS</span>&quot;</span>]; <span class="keyword">then</span></span><br><span class="line">  TMP = $(<span class="built_in">echo</span> <span class="variable">$NUM</span> |sed <span class="string">&#x27;s/[0-9]//g&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$TMP</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">for</span>(( i=1; i&lt;<span class="variable">$NUM</span>; i=i+1))</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">      /usr/sbin/useradd <span class="variable">$NAME</span><span class="variable">$i</span> &amp;&gt;/dev/null</span><br><span class="line">      <span class="built_in">echo</span> <span class="variable">$PASS</span> |/usr/bin/passwd --stdin <span class="variable">$NAME</span><span class="variable">$i</span> &amp;&gt;/dev/null</span><br><span class="line">      chage -d 0 <span class="variable">$NAME</span><span class="variable">$i</span> &amp;&gt;/dev/null</span><br><span class="line">    <span class="keyword">done</span> </span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">---------------------------------------------------------</span><br><span class="line"><span class="comment">#！/bin/bash</span></span><br><span class="line">user = $(cat /etc/passwd |grep <span class="string">&quot;/bin/bash&quot;</span> |grep -v <span class="string">&quot;root&quot;</span> |cut -d <span class="string">&quot;:&quot;</span> -f1)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$user</span></span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">  userdel -r <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="while-do-done"><a href="#while-do-done" class="headerlink" title="while-do-done"></a>while-do-done</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">i = 1</span><br><span class="line">s = 0</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -le 100 ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  s = $(( <span class="variable">$s</span> + <span class="variable">$i</span> ))</span><br><span class="line">  i = $(( <span class="variable">$i</span> + <span class="variable">$1</span> ))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The sum is: <span class="variable">$s</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>    <span class="keyword">while</span> <span class="literal">true</span><span class="keyword">for</span>(( ; ; ))</span><br><span class="line"><span class="keyword">do</span>         <span class="keyword">do</span></span><br><span class="line"><span class="keyword">done</span>       <span class="keyword">done</span> </span><br></pre></td></tr></table></figure><h3 id="case-in-esac"><a href="#case-in-esac" class="headerlink" title="case-in-esac"></a>case-in-esac</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;输入 1 到 4 之间的数字:&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;你输入的数字为:&#x27;</span></span><br><span class="line"><span class="built_in">read</span> aNum</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$aNum</span> <span class="keyword">in</span></span><br><span class="line">  1)  <span class="built_in">echo</span> <span class="string">&#x27;你选择了 1&#x27;</span></span><br><span class="line">  ;;</span><br><span class="line">  1)  <span class="built_in">echo</span> <span class="string">&#x27;你选择了 2&#x27;</span></span><br><span class="line">  ;;</span><br><span class="line">  1)  <span class="built_in">echo</span> <span class="string">&#x27;你选择了 3&#x27;</span></span><br><span class="line">  ;;</span><br><span class="line">  1)  <span class="built_in">echo</span> <span class="string">&#x27;你选择了 4&#x27;</span></span><br><span class="line">  ;;</span><br><span class="line">  *)  <span class="built_in">echo</span> <span class="string">&#x27;你没有输入 1 到 4 之间的数字&#x27;</span></span><br><span class="line">  ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><h3 id="关于-break-与-continue"><a href="#关于-break-与-continue" class="headerlink" title="关于 break 与 continue"></a>关于 <code>break</code> 与 <code>continue</code></h3><ul><li><strong>break命令允许跳出所有循环（终止执行后面的所有循环）</strong></li><li><strong>continue命令与break命令类似，只有一点差别，它不会跳出所有循环，仅仅跳出当前循环</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="built_in">echo</span> -n <span class="string">&quot;输入 1 到 5 之间的数字:&quot;</span></span><br><span class="line">   <span class="built_in">read</span> aNum</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$aNum</span> <span class="keyword">in</span></span><br><span class="line">   1|2|3|4|5) <span class="built_in">echo</span> <span class="string">&quot;你输入的数字为 <span class="variable">$aNum</span>!&quot;</span></span><br><span class="line">   ;;</span><br><span class="line">   *) <span class="built_in">echo</span> <span class="string">&quot;你输入的数字不是 1 到 5 之间的! 游戏结束&quot;</span></span><br><span class="line">      <span class="built_in">break</span></span><br><span class="line">   ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">输入 1 到 5 之间的数字:3</span><br><span class="line">你输入的数字为 3!</span><br><span class="line">输入 1 到 5 之间的数字:7</span><br><span class="line">你输入的数字不是 1 到 5 之间的! 游戏结束</span><br><span class="line">------------------------------------------------</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="built_in">echo</span> -n <span class="string">&quot;输入 1 到 5 之间的数字: &quot;</span></span><br><span class="line">   <span class="built_in">read</span> aNum</span><br><span class="line">   <span class="keyword">case</span> <span class="variable">$aNum</span> <span class="keyword">in</span></span><br><span class="line">      1|2|3|4|5) <span class="built_in">echo</span> <span class="string">&quot;你输入的数字为 <span class="variable">$aNum</span>!&quot;</span></span><br><span class="line">      ;;</span><br><span class="line">      *) <span class="built_in">echo</span> <span class="string">&quot;你输入的数字不是 1 到 5 之间的!&quot;</span></span><br><span class="line">            <span class="built_in">continue</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;游戏结束&quot;</span></span><br><span class="line">      ;;</span><br><span class="line">   <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="Shell-function"><a href="#Shell-function" class="headerlink" title="Shell function"></a>Shell function</h2><h3 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">funWithReturn</span></span>()&#123;</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;这个函数会对输入的两个数字进行相加运算...&quot;</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;输入第一个数字: &quot;</span></span><br><span class="line">   <span class="built_in">read</span> aNum</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;输入第二个数字: &quot;</span></span><br><span class="line">   <span class="built_in">read</span> anotherNum</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;两个数字分别为 <span class="variable">$aNum</span> 和 <span class="variable">$anotherNum</span> !&quot;</span></span><br><span class="line">   <span class="built_in">return</span> $((<span class="variable">$aNum</span>+<span class="variable">$anotherNum</span>))</span><br><span class="line">&#125;</span><br><span class="line">funWithReturn</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;输入的两个数字之和为 $? !&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">funWithParam</span></span>()&#123;</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;第一个参数为 <span class="variable">$1</span> !&quot;</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;第二个参数为 <span class="variable">$2</span> !&quot;</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;第十个参数为 <span class="variable">$10</span> !&quot;</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;第十个参数为 <span class="variable">$&#123;10&#125;</span> !&quot;</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;第十一个参数为 <span class="variable">$&#123;11&#125;</span> !&quot;</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;参数总数有 <span class="variable">$#</span> 个!&quot;</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;作为一个字符串输出所有参数 $* !&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">funWithParam 1 2 3 4 5 6 7 8 9 34 73</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS</title>
      <link href="/posts/ee69e452.html"/>
      <url>/posts/ee69e452.html</url>
      
        <content type="html"><![CDATA[<p>2019-08-08-CSS</p><a id="more"></a><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念:"></a>概念:</h2><p><strong>CSS 指层叠样式表 (Cascading Style Sheets), 样式定义以何种方式显示 HTML 元素, 外部样式表通常存储在 CSS 文件中</strong>  </p><img src="/posts/ee69e452/CSS%E8%AF%AD%E6%B3%95.jpg" class title="[CSS语法]">  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">color</span>:blue; <span class="attribute">font-size</span>:<span class="number">12px</span>;&#125;</span><br><span class="line">选择器 属性:属性值 </span><br><span class="line">注释:</span><br><span class="line"><span class="comment">/* ... */</span></span><br></pre></td></tr></table></figure><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器:"></a>选择器:</h2><ul><li><p>id 选择器(#)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#para</span>&#123;</span><br><span class="line"> <span class="attribute">text-align</span>: center;</span><br><span class="line"> <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>class 选择器(.)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.center</span>&#123; <span class="attribute">text-align</span>: center;&#125;</span><br></pre></td></tr></table></figure></li><li><p>子选择器(SS)</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> &lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-tag">div</span> &gt; <span class="selector-tag">p</span>&#123;   <span class="comment">/*只能选择作为某元素子元素的元素*/</span></span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line"> &#125;</span><br><span class="line"> &lt;/style&gt;</span><br><span class="line"> &lt;<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;p&gt;red text&lt;/p&gt;  &lt;!--文字是红色的--&gt;</span><br><span class="line"> &lt;<span class="selector-tag">table</span>&gt;</span><br><span class="line"> <span class="comment">/*文字是非红色的*/</span></span><br><span class="line">&lt;tr&gt;&lt;td&gt;&lt;p&gt;no red text;&lt;/td&gt;&lt;/p&gt;&lt;/tr&gt;</span><br><span class="line"> &lt;/table&gt;</span><br><span class="line"> &lt;/div&gt;</span><br></pre></td></tr></table></figure></li><li><p>相邻兄弟选择器</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-tag">div</span> + <span class="selector-tag">p</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span>&gt;</span><br><span class="line">  &lt;p&gt;not red text&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;not red text&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;p&gt;red text&lt;/p&gt;    </span><br><span class="line">&lt;p&gt;not red text&lt;/p&gt;</span><br></pre></td></tr></table></figure></li><li><p>后续兄弟选择器(BS)</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> &lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-tag">div</span> ~ <span class="selector-tag">p</span>&#123;    <span class="comment">/*选取所有指定元素之后的相邻兄弟元素*/</span></span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line"> &#125;</span><br><span class="line"> &lt;/style&gt;</span><br><span class="line"> &lt;<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;p&gt;no red text&lt;/p&gt;  /*文字是非红色的*/</span><br><span class="line">&lt;div&gt;no red text&lt;/div&gt;</span><br><span class="line">&lt;p&gt;red text&lt;/p&gt;  /*文字是红色的*/</span><br><span class="line"> &lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="伪类"><a href="#伪类" class="headerlink" title="伪类:"></a>伪类:</h2><ul><li>语法:<br><code>选择器.CSS类:伪类&#123;属性:属性值&#125;</code> / <code>选择器:伪类&#123;属性:属性值&#125;</code><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">  <span class="selector-tag">p</span><span class="selector-pseudo">:after</span>&#123; <span class="comment">/* p::before &amp;&amp; p::after */</span></span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&quot;- 注意我&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;p&gt;我的名字是 Donald&lt;/p&gt;</span><br><span class="line">&lt;p&gt;我住在 Ducksburg&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;b&gt;注意：&lt;/b&gt; :after在IE8中运行，必须声明 !DOCTYPE &lt;/p&gt;</span><br></pre></td></tr></table></figure></li></ul><img src="/posts/ee69e452/jieGouWeilei.jpg" class title="[结构伪类]"><h2 id="多重样式优先级"><a href="#多重样式优先级" class="headerlink" title="多重样式优先级"></a>多重样式优先级</h2><p><strong><a href="www.runoob.com/w3cnote/css-style-priority.html">参考文章</a></strong><br><strong>插入样式表的方法有三种:</strong>  </p><ul><li><code>外部样式表</code>(External style sheet)</li><li><code>内部样式表</code>(Internal style sheet)</li><li><code>内联样式</code>(Inline style)  </li><li><strong>行内样式(1000)&gt; id选择器(100)&gt; 类选择器(10)&gt; 标签选择器(1)</strong></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">head</span>&gt;<span class="comment">/*外部*/</span></span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">head</span>&gt;<span class="comment">/*内部*/</span></span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">  <span class="selector-tag">hr</span> &#123;<span class="attribute">color</span>:sienna;&#125;</span><br><span class="line">  <span class="selector-tag">p</span> &#123;<span class="attribute">margin-left</span>:<span class="number">20px</span>;&#125;</span><br><span class="line">  <span class="selector-tag">body</span> &#123;<span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">&quot;images/back40.gif&quot;</span>);&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;p style=&quot;color:sienna;margin-left:20px&quot;&gt;这是一个段落。&lt;/p&gt;/*内联*/</span><br></pre></td></tr></table></figure><h2 id="background-背景-要设置宽高"><a href="#background-背景-要设置宽高" class="headerlink" title="background(背景, 要设置宽高)"></a>background(背景, <strong>要设置宽高</strong>)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: all;</span><br><span class="line">  <span class="attribute">backdround-color</span>: <span class="number">#FFFFFF</span>;<span class="comment">/*rgb(255,255,255)*/</span></span><br><span class="line">  <span class="attribute">background-imgage</span>: <span class="built_in">url</span>(<span class="string">&#x27;url&#x27;</span>);</span><br><span class="line">  <span class="attribute">background-repeat</span>: repeat-x / repeat-y / no-repeat;</span><br><span class="line">  </span><br><span class="line">  // 水平位置(left center right) 垂直位置(top center bottom)</span><br><span class="line">  background-position: 固定值 / 百分比 / 单词; </span><br><span class="line">  background-attachment: scroll / fixed / inherit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Text-文本"><a href="#Text-文本" class="headerlink" title="Text(文本)"></a>Text(文本)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">  <span class="attribute">text-align</span>: center / right / justify;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">text-transform</span>: uppercase / lowercase / capitalize;</span><br><span class="line">  <span class="attribute">text-indent</span>: <span class="number">10px</span>; <span class="comment">/*指定文本的第一行的缩进*/</span></span><br><span class="line">  <span class="attribute">text-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">#ff0000</span>; <span class="comment">/*CSS3: 水平阴影的位置 垂直阴影的位置 模糊的距离(blur) 阴影的颜色(color)*/</span></span><br><span class="line">  <span class="attribute">vertical-align</span>: text-top; <span class="comment">/*设置元素的垂直对齐*/</span></span><br><span class="line">  <span class="attribute">word-spacing</span>: <span class="number">30px</span>;<span class="comment">/*设置英文单词之间的间距*/</span></span><br><span class="line">  <span class="attribute">letter-spacing</span>:<span class="number">30px</span>;<span class="comment">/*设置字母与字母之间的间距*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Font-字体"><a href="#Font-字体" class="headerlink" title="Font(字体)"></a>Font(字体)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">  <span class="attribute">font</span>: all;</span><br><span class="line">  <span class="attribute">font-style</span>: normal / italic / oblique;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span> / <span class="number">14px</span>/<span class="number">16</span>=<span class="number">0.875em</span>;</span><br><span class="line">  <span class="attribute">font-family</span>:<span class="string">&quot;Times New Roman&quot;</span>,Georgia,Serif;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal / bold / bolder / lighter;<span class="comment">/*指定字体的粗细*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>: &#123;<span class="attribute">color</span>: yellow;&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>: &#123;<span class="attribute">color</span>: black;&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>: &#123;<span class="attribute">color</span>: blue;&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>: &#123;<span class="attribute">color</span>: red;&#125;</span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span>&#123;</span><br><span class="line">  <span class="attribute">list-style</span>: all;</span><br><span class="line">  <span class="attribute">list-style-type</span>: circle / square / upper-roman / lower-alpha;</span><br><span class="line">  <span class="attribute">list-style-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;url&#x27;</span>);</span><br><span class="line">  <span class="attribute">list-style-position</span>: inside / outside / inherit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="盒子模型-上-右-下-左"><a href="#盒子模型-上-右-下-左" class="headerlink" title="盒子模型(上 右 下 左)"></a>盒子模型(上 右 下 左)</h2><blockquote><p><strong>所有HTML元素可以看作盒子, 在CSS中, <code>&quot;box model&quot;</code> 这一术语是用来<code>设计</code>和<code>布局</code>时使用, CSS盒模型本质上是一个盒子, 封装周围的HTML元素, 它包括: <code>边距</code>, <code>边框</code>, <code>填充</code>, 和<code>实际内容</code></strong><br>一个盒子的高度一般不用单独设置, 由其内容撑开<br><strong>不要给元素添加具有指定宽度的内边距, 而是尝试将内边距或外边距添加到元素的父元素和子元素</strong> </p></blockquote><img src="/posts/ee69e452/CSS-Box-Model.jpg" class title="[CSS-Box-Model]"><img src="/posts/ee69e452/Box-Model.jpg" class title="[CSS_BOX_MODEL]"><ul><li><code>margin</code> (外边距) - 清除边框外的区域, 外边距是透明的(盒子与盒子之间的距离)</li><li><code>border</code> (边框) - 围绕在内边距和内容外的边框</li><li><code>padding</code> (内边距) - 清除内容周围的区域, 内边距是透明的(内容填充, 内容到边框之间的距离)</li><li><code>content</code> (内容) - 盒子的内容, 显示文本和图像</li><li><code>说明</code>: margin 属性本意描述的<strong>兄弟与兄弟</strong>元素之间的关系, 若是父子元素关系, 就最好给其父元素加 padding 属性 </li></ul><p><strong>margin 实现水平居中</strong></p><blockquote><p>元素要有固定的宽度(未设置, 为父元素100%的宽度), 只有块元素可以实现水平居中, 行内元素不能实现; 只有标准文档流中的盒子可以使用 margin 实现水平居中<br>margin 属性是用来实现盒子的水平居中, 而不是文本的水平居中</p></blockquote><p><strong>注意:</strong></p><blockquote><p>在标准文档流中<strong>垂直方向</strong>的 margin 值不会叠加, 仅仅会取比较大的值<br>水平方向没有 margin 的塌陷现象<br>浮动元素它是没有 margin 的塌陷现象的</p></blockquote><h2 id="几种属性"><a href="#几种属性" class="headerlink" title="几种属性"></a>几种属性</h2><h3 id="关于尺寸"><a href="#关于尺寸" class="headerlink" title="关于尺寸:"></a>关于尺寸:</h3><h4 id="width-amp-amp-height-设置元素的宽高"><a href="#width-amp-amp-height-设置元素的宽高" class="headerlink" title="width &amp;&amp; height(设置元素的宽高)"></a>width &amp;&amp; height(设置元素的宽高)</h4><p><code>p&#123; height:100px; width:100px;&#125;</code> </p><h4 id="line-height-设置元素的行高"><a href="#line-height-设置元素的行高" class="headerlink" title="line-height(设置元素的行高)"></a>line-height(设置元素的行高)</h4><p><code>p&#123;line-height: 14px;&#125;</code>  </p><h4 id="display-行内与块级相互转化-amp-amp-visibility"><a href="#display-行内与块级相互转化-amp-amp-visibility" class="headerlink" title="display(行内与块级相互转化) &amp;&amp;  visibility"></a>display(行内与块级相互转化) &amp;&amp;  visibility</h4><blockquote><p>块级元素(block)特性: 总是<em>独占一行</em>, 表现为另起一行开始, 而且其后的元素也必须另起一行显示; 宽度(width), 高度(height), 内边距(padding)和外边距(margin)都可控制;</p></blockquote><p><code>块级元素: div, h1, h2, h3, h4, h5, h6, hr, dl, ul, li, form, ol, p, pre, table</code>  </p><blockquote><p>内联元素(inline)特性: 和相邻的内联元素在同一行; 宽度(width), 高度(height), 内边距的top/bottom(padding-top/padding-bottom)和外边距的top/bottom(margin-top/margin-bottom)都不可改变, 就是里面文字或图片的大小, 即宽高有内容撑开; </p></blockquote><p><code>内联元素: a, img, br, input, select, small, span, strong, sub, sup, textarea,</code>  </p><img src="/posts/ee69e452/%E5%85%83%E7%B4%A0%E5%88%86%E7%B1%BB.png" class title="[元素分类]">  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123; <span class="attribute">display</span>: none;&#125;<span class="comment">/*隐藏一个元素, 不会占用空间*/</span></span><br><span class="line"><span class="selector-tag">h1</span>&#123; <span class="attribute">visibility</span>: hidden&#125;<span class="comment">/*隐藏一个元素, 隐藏的元素仍需占用与未隐藏之前一样的空间*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span>&#123; <span class="attribute">display</span>: inline;&#125;<span class="comment">/*显示为内联元素*/</span></span><br><span class="line"><span class="selector-tag">span</span>&#123; <span class="attribute">display</span>: block;&#125;<span class="comment">/*显示为块级元素*/</span></span><br></pre></td></tr></table></figure><h4 id="position-定位"><a href="#position-定位" class="headerlink" title="position(定位)"></a>position(定位)</h4><p><strong>标准文档流: 从左至右, 从上至下; 遇到换行做空格解析； 高低不齐, 底部对齐</strong><br><strong>定位有四个属性值</strong>  </p><p><strong>1. <code>static</code></strong>: 默认值, 即没有定位, 元素出现在正常的文档流中  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.static</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: static;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#73AD21</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2. <code>fixed</code></strong>: 元素位置相对于<strong>浏览器窗口</strong>是固定位置,即使窗口滚动也不会动, 与标准文档流无关, 层级比标准文档流元素高, 且不占据空间  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-class">.pos_fixed</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">position</span>:fixed;</span><br><span class="line">  <span class="attribute">top</span>:<span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">right</span>:<span class="number">5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3. <code>relative</code></strong>:<br>  1)<strong>相对定位不脱标</strong><br>  2)相对定位不改变元素的性质, 不设置偏移属性, 位置不发生改变<br>  3)相对定位元素的定位是相对于, <strong>文档流中原先位置进行定位</strong><br>  4)元素会<strong>提升一个层级</strong>, 它原本所占的空间并不会改变  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h2</span><span class="selector-class">.pos_left</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">position</span>:relative;</span><br><span class="line">  <span class="attribute">left</span>:-<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h2</span><span class="selector-class">.pos_right</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">position</span>:relative;</span><br><span class="line">  <span class="attribute">left</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4. <code>absolute</code></strong>:<br>    1)绝对定位改变元素的性质, 不设置偏移属性, 位置不发生改变<br>    2)绝对定位脱离标准文档流, 定位的元素和其他元素重叠<br>    3)绝对定位的元素的位置相对于”最近”的 已定位(无论是相对、绝对或固定)的父元素, 如果没有, 则它的位置相对于<body>(浏览器窗口)进行定位</body></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h2</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">position</span>:absolute;</span><br><span class="line">  <span class="attribute">left</span>:<span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">top</span>:<span class="number">150px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="z-index-属性"><a href="#z-index-属性" class="headerlink" title="z-index 属性"></a>z-index 属性</h4><blockquote><p>z-index 表示层级大小, 数值大的会压盖数值小的, 默认为0<br>只有定位元素才有 z-index 值, 若多个定位元素未设置, 或者值相同, 则写在HTML后面的定位元素会压盖前面的的定位元素</p></blockquote><h4 id="float-浮动"><a href="#float-浮动" class="headerlink" title="float(浮动)"></a>float(浮动)</h4><p><strong>浮动的特点</strong>   </p><blockquote><ol><li><code>脱离文档流</code>, 浮动的<strong>元素互相贴靠</strong>, 浮动元素有”字围”效果、收缩;</li><li>一旦元素浮动后, 即脱离文档流, 就不受文档流的控制了, 也就没有行内、块级之分了;</li><li><strong>行内元素能够支持宽高, 但浮动元素未设置宽高, 其宽高由内容撑开</strong>;</li></ol></blockquote><p><strong>浮动清除的方法:</strong>  </p><blockquote><p>经过浮动的元素, 会影响到它下面元素的布局, 浮动元素的父元素没有将浮动元素包裹</p><ol><li><code>给浮动元素的父级元素加高度</code>: 如果一个元素要浮动, 那么它的父级元素一定要有高度, 保证父级高度不能小于子级高度, 有高度的盒子, 才能包住浮动的子元素;</li><li>追加一个空元素并添加<code>clear: both;</code>: (该元素的左右两侧都不能有浮动元素), 但是这种方法有一个非常大的、致命的问题, 它所在的标签, “margin属性失效了”, margin失效的本质原因是: 父级高度为零. </li><li>在最后的浮动元素增加<code>&lt;div class=&quot;clear&gt;&lt;/div&gt;</code>, 并<code>clear: both;</code></li><li>在父元素上添加: <code>overflow: hidden;</code></li></ol></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clear</span>&#123;</span><br><span class="line">   <span class="attribute">zoom</span>: <span class="number">1</span>;  <span class="comment">/*兼容 IE6 利用 hasLayout*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clear</span><span class="selector-pseudo">:before</span>, <span class="selector-class">.clear</span><span class="selector-pseudo">:after</span>&#123;  </span><br><span class="line">  # 父级后边 追加 空内容 </span><br><span class="line">   content: &#x27;&#x27;;</span><br><span class="line">   <span class="selector-tag">display</span>: <span class="selector-tag">block</span>;</span><br><span class="line">   <span class="selector-tag">clear</span>: <span class="selector-tag">both</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="transform-2D效果"><a href="#transform-2D效果" class="headerlink" title="transform (2D效果)"></a>transform (2D效果)</h4><blockquote><p>通过CSS3 转换, 可以实现对元素的移动、缩放、转动、拉长或拉伸<br><code>移动:translate(10px,30px)</code>/<code>旋转:rotate(40deg)</code>/<code>缩放:scale(2,4)</code>/<code>倾斜:skew(30deg,20deg)</code>/<code>矩阵:matrix()</code></p></blockquote><p><a href="https://www.cnblogs.com/Ivy-s/p/6786622.html">矩阵效果参考</a></p><h4 id="transform-3D效果"><a href="#transform-3D效果" class="headerlink" title="transform (3D效果)"></a>transform (3D效果)</h4><blockquote><p>rotateX()<br>rotateY()<br>rotateZ()</p></blockquote><h4 id="transition-过度"><a href="#transition-过度" class="headerlink" title="transition (过度)"></a>transition (过度)</h4><blockquote><p>CSS3 过度是元素从一种样式逐渐改变为另一种的效果<br>目标属性、时长</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">  <span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">transition</span>: width <span class="number">3s</span>, height <span class="number">3s</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">width</span>:<span class="number">400px</span>; <span class="attribute">height</span>:<span class="number">400px</span>; <span class="attribute">transform</span>:<span class="built_in">rotate</span>(<span class="number">180deg</span>);&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h4 id="keyframes-animation"><a href="#keyframes-animation" class="headerlink" title="@keyframes (animation)"></a>@keyframes (animation)</h4><blockquote><p>在 @keyframes 中规定某项 CSS 样式, 可以创建由当前样式逐渐改为新样式的动画效果<br>动画名称、动画时长</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">  <span class="selector-tag">div</span>&#123;<span class="attribute">width</span>:<span class="number">100</span>ox; <span class="attribute">height</span>:<span class="number">100px</span>; <span class="attribute">background</span>:red animation:myfirstAnim <span class="number">3s</span>;&#125;</span><br><span class="line">  <span class="keyword">@keyframes</span> myfirstAnim&#123;</span><br><span class="line">    <span class="comment">/*也可以 0%&#123;&#125; 25%&#123;&#125; 50%&#123;&#125; 75%&#123;&#125; 100%&#123;&#125; 控制*/</span></span><br><span class="line">    <span class="selector-tag">from</span>&#123;<span class="attribute">background</span>:red;&#125; </span><br><span class="line">    <span class="selector-tag">to</span>&#123;<span class="attribute">background</span>:yellow;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;&lt;div&gt;&lt;/div&gt;&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><strong>待续…</strong></p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html-02</title>
      <link href="/posts/82d0dbac.html"/>
      <url>/posts/82d0dbac.html</url>
      
        <content type="html"><![CDATA[<p>2019-08-08-HTML2</p><a id="more"></a><h1 id="简单介绍-HTML5"><a href="#简单介绍-HTML5" class="headerlink" title="简单介绍 HTML5"></a>简单介绍 HTML5</h1><h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><img src="/posts/82d0dbac/HTML5.png" class title="[HTML5]">  <h2 id="新元素"><a href="#新元素" class="headerlink" title="新元素"></a>新元素</h2><h3 id="一、Canvas"><a href="#一、Canvas" class="headerlink" title="一、Canvas"></a>一、Canvas</h3><blockquote><p><strong><code>&lt;canvas&gt;</code> 元素用于图形的绘制, <code>&lt;canvas&gt;</code> 标签只是图形容器, 通过脚本 (通常是JavaScript)来完成</strong>  </p></blockquote><img src="/posts/82d0dbac/Canvas.jpg" class title="[Canvas]">  <p><strong><em>如下是一些例子:</em></strong>  </p><p><strong>1.绘制矩形</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;canvas id=<span class="string">&quot;canvas&quot;</span> width=<span class="string">&quot;200&quot;</span> height=<span class="string">&quot;100&quot;</span> style=<span class="string">&quot;border: 1px solid #c3c3c3;&quot;</span>&gt;您的浏览器不支持 HTML5 canvas 标签。&lt;/canvas&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="keyword">var</span> c=<span class="built_in">document</span>.getElemnetById(<span class="string">&quot;canvas&quot;</span>);  <span class="comment">//找到 &lt;canvas&gt;</span></span><br><span class="line">   <span class="keyword">var</span> ctx=c.getContent(<span class="string">&quot;2d&quot;</span>); <span class="comment">// 创建 context 对象</span></span><br><span class="line">   ctx.fillStyle=<span class="string">&quot;#FF0000&quot;</span>; </span><br><span class="line">   ctx.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">150</span>,<span class="number">75</span>); <span class="comment">// fillRect(x,y,width,height) </span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>2.绘制路径</strong>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="keyword">var</span> c=<span class="built_in">document</span>.getElementById(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">   <span class="keyword">var</span> ctx=c.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">   ctx.moveTo(<span class="number">0</span>,<span class="number">0</span>); <span class="comment">// moveTo(x,y) 定义线条开始坐标</span></span><br><span class="line">   ctx.lineTo(<span class="number">200</span>,<span class="number">100</span>); <span class="comment">// lineTo(x,y) 定义线条结束坐标</span></span><br><span class="line">   ctx.stroke(); <span class="comment">// stroke() 方法来绘制线条</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>3.绘制圆形</strong>  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="keyword">var</span> c=<span class="built_in">document</span>.getElementById(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">   <span class="keyword">var</span> ctx=c.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">   ctx.beginPath();</span><br><span class="line">   ctx.arc(<span class="number">95</span>,<span class="number">50</span>,<span class="number">40</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI); <span class="comment">// arc(x,y,r,start,stop)</span></span><br><span class="line">   ctx.stroke();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>4.渲染文本</strong>  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="keyword">var</span> c=<span class="built_in">document</span>.getElementById(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">   <span class="keyword">var</span> ctx=c.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">   ctx.font=<span class="string">&quot;30px Arial&quot;</span>;</span><br><span class="line">   ctx.fillText(<span class="string">&quot;Hello World&quot;</span>,<span class="number">10</span>,<span class="number">50</span>); <span class="comment">// 实心 fillText(text,x,y)方法, 空心 storkeText()方法</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>5.渐变</strong>    </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="keyword">var</span> c=<span class="built_in">document</span>.getElementById(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">   <span class="keyword">var</span> ctx=c.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// createLinearGradient(x,y,x1,y1) - 创建线条渐变</span></span><br><span class="line">   <span class="comment">// createRadialGradient(x,y,r,x1,y1,r1) - 创建一个径向/圆渐变</span></span><br><span class="line">   <span class="keyword">var</span> grd=ctx.createLinearGradient(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">0</span>);</span><br><span class="line">   grd.addColorStop(<span class="number">0</span>,<span class="string">&quot;red&quot;</span>);</span><br><span class="line">   grd.addColorStop(<span class="number">1</span>,<span class="string">&quot;white&quot;</span>);</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// 填充渐变</span></span><br><span class="line">   ctx.fillStyle=grd;</span><br><span class="line">   ctx.fillRect(<span class="number">10</span>,<span class="number">10</span>,<span class="number">150</span>,<span class="number">80</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>6.渲染图像</strong>  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="keyword">var</span> c=<span class="built_in">document</span>.getElementById(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">   <span class="keyword">var</span> ctx=c.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">   <span class="keyword">var</span> img=<span class="built_in">document</span>.getElementById(<span class="string">&quot;scream&quot;</span>);</span><br><span class="line">   ctx.drawImage(img,<span class="number">10</span>,<span class="number">10</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="二、SVG"><a href="#二、SVG" class="headerlink" title="二、SVG"></a>二、SVG</h3><blockquote><p><strong>SVG 指可伸缩矢量图形 (Scalable Vector Graphics),  用于定义用于网络的基于矢量的图形, 使用 XML 格式定义图形, SVG 图像在放大或改变尺寸的情况下其图形质量不会有损失</strong>  </p></blockquote><p><strong>五角星</strong>  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg xmlns=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> width=<span class="string">&quot;190&quot;</span> height=<span class="string">&quot;190&quot;</span>&gt;</span><br><span class="line">  &lt;polygon points=<span class="string">&quot;100,10 40,180 190,60 10,60 160,180&quot;</span></span><br><span class="line">  style=<span class="string">&quot;fill:lime; stroke:purple; stroke-width:5; fill-rule:evenodd;&quot;</span>&gt;</span><br><span class="line">&lt;/svg&gt;</span><br></pre></td></tr></table></figure><h3 id="三、Video-与-Audio"><a href="#三、Video-与-Audio" class="headerlink" title="三、Video 与 Audio"></a>三、Video 与 Audio</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">width</span>=<span class="string">&quot;320&quot;</span> <span class="attr">height</span>=<span class="string">&quot;240&quot;</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;movie.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;movie.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/ogg&quot;</span>&gt;</span></span><br><span class="line">  您的浏览器不支持 HTML5 video 标签。</span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;horse.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/ogg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;horse.mp3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/mpeg&quot;</span>&gt;</span></span><br><span class="line">您的浏览器不支持 audio 元素。</span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="四、拖放"><a href="#四、拖放" class="headerlink" title="四、拖放"></a>四、拖放</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">   <span class="selector-id">#box</span>&#123; <span class="attribute">width</span>:<span class="number">100px</span>; <span class="attribute">height</span>:<span class="number">100px</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#000</span>;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">script</span>&gt;</span><br><span class="line">   <span class="selector-tag">function</span> <span class="selector-tag">allowDrop</span>(<span class="selector-tag">ev</span>)&#123;</span><br><span class="line">      ev.preventDefault();</span><br><span class="line">   &#125;</span><br><span class="line">   // 拖动</span><br><span class="line">   <span class="selector-tag">function</span> <span class="selector-tag">drag</span>(<span class="selector-tag">ev</span>)&#123;</span><br><span class="line">      ev.dataTransfer.setData(&quot;Text&quot;, ev.target.id);</span><br><span class="line">   &#125;</span><br><span class="line">   // 放置</span><br><span class="line">   <span class="selector-tag">function</span> <span class="selector-tag">drop</span>(<span class="selector-tag">ev</span>)&#123;</span><br><span class="line">      ev.preventDefault();</span><br><span class="line">      var data = ev.dataTransfer.getData(&quot;Text&quot;);</span><br><span class="line">      <span class="selector-tag">ev</span><span class="selector-class">.target</span><span class="selector-class">.appendChild</span>(<span class="selector-tag">document</span><span class="selector-class">.getElementById</span>(<span class="selector-tag">data</span>));</span><br><span class="line">   &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">   &lt;div id=&quot;box&quot; ondrop=&quot;drop(event)&quot; ondragover=&quot;allowDrop(event)&quot;&gt;&lt;/div&gt;</span><br><span class="line">   &lt;img id=&quot;drag&quot; src=&quot;images/1.png&quot; draggable=&quot;true ondragstart=&quot; drag(event)&quot;/&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h1 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h1>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html-01</title>
      <link href="/posts/1bd98a16.html"/>
      <url>/posts/1bd98a16.html</url>
      
        <content type="html"><![CDATA[<p>HTML01</p><a id="more"></a><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念:"></a>概念:</h3><blockquote><p><code>超文本标记语言</code>(HyperText Markup Language) 是一种用于创建网页的标准标记语言  </p></blockquote><h3 id="结构"><a href="#结构" class="headerlink" title="结构:"></a>结构:</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;tutorial&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;30&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-tag">body</span> &#123;<span class="attribute">background</span>: red;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的第一个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我的第一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span> 声明为 HTML5 文档</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> 元素是 HTML 页面的根元素</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> 元素包含了文档的元（meta）数据，如 `<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span>` 定义网页编码格式为 utf-8</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span> 元素描述了文档的标题</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span>&gt;</span> 标签通常用于链接到样式表</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> 元素包含了可见的页面内容</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> 元素定义一个大标题</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> 元素定义一个段落</span><br></pre></td></tr></table></figure><h3 id="基础"><a href="#基础" class="headerlink" title="基础:"></a>基础:</h3><h4 id="注释"><a href="#注释" class="headerlink" title="注释:"></a>注释:</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--&gt;...&lt;--&gt;</span></span><br></pre></td></tr></table></figure><h4 id="元素-标签"><a href="#元素-标签" class="headerlink" title="元素(标签)"></a>元素(标签)</h4><ul><li><p>标题(Heading)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span> - <span class="tag">&lt;<span class="name">h6</span>&gt;</span><span class="tag">&lt;/<span class="name">h6</span>&gt;</span> 标签进行定义</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> 定义最大的标题, </span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span> 定义最小的标题</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span> 标签进行定义水平线</span><br></pre></td></tr></table></figure></li><li><p>段落(Paragraph)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> 标签进行定义 </span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span> 标签进行定义换行</span><br></pre></td></tr></table></figure></li><li><p>文本格式化</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span> 定义粗体文本</span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span> 定义着重文字( em = pixels / 16 )</span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 定义斜体字</span><br><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span><span class="tag">&lt;/<span class="name">small</span>&gt;</span> 定义小号字</span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 定义加重语气</span><br><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span><span class="tag">&lt;/<span class="name">sub</span>&gt;</span> 定义下标字</span><br><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span><span class="tag">&lt;/<span class="name">sup</span>&gt;</span> 定义上标字</span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span><span class="tag">&lt;/<span class="name">ins</span>&gt;</span> 定义插入字</span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span><span class="tag">&lt;/<span class="name">del</span>&gt;</span> 定义删除字</span><br><span class="line"><span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">code</span>&gt;</span> 定义计算机代码</span><br><span class="line"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> 定义键盘码</span><br><span class="line"><span class="tag">&lt;<span class="name">samp</span>&gt;</span><span class="tag">&lt;/<span class="name">samp</span>&gt;</span> 定义计算机代码样本</span><br><span class="line"><span class="tag">&lt;<span class="name">var</span>&gt;</span><span class="tag">&lt;/<span class="name">var</span>&gt;</span> 定义变量</span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span> 定义预格式文本</span><br><span class="line"><span class="tag">&lt;<span class="name">abbr</span>&gt;</span><span class="tag">&lt;/<span class="name">abbr</span>&gt;</span> 定义缩写</span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span><span class="tag">&lt;/<span class="name">address</span>&gt;</span> 定义地址</span><br><span class="line"><span class="tag">&lt;<span class="name">bdo</span>&gt;</span><span class="tag">&lt;/<span class="name">bdo</span>&gt;</span> 定义文字方向</span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span> 定义长的引用</span><br><span class="line"><span class="tag">&lt;<span class="name">q</span>&gt;</span><span class="tag">&lt;/<span class="name">q</span>&gt;</span> 定义短的引用语</span><br><span class="line"><span class="tag">&lt;<span class="name">cite</span>&gt;</span><span class="tag">&lt;/<span class="name">cite</span>&gt;</span> 定义引用、引证</span><br><span class="line"><span class="tag">&lt;<span class="name">dfn</span>&gt;</span><span class="tag">&lt;/<span class="name">dfn</span>&gt;</span> 定义一个定义项目</span><br></pre></td></tr></table></figure></li><li><p>链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">hred</span>=<span class="string">&quot;url&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;noopener noreferrer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="comment">&lt;!-- 定义链接 --&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>图像</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;url&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;sone_text&quot;</span> /&gt;</span> <span class="comment">&lt;!-- 定义图片 --&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>表格</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Header1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Header1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>row1, cell1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>row1, cell2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span> 定义行</span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span> 定义列</span><br></pre></td></tr></table></figure></li><li><p>列表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span> 无序</span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ol</span>&gt;</span> 有序</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span> 自定义</span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span>- black hot drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span>- white cold drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span>   </span><br></pre></td></tr></table></figure></li><li><p>表单</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;action.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">     文本框: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;firstname&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  密码框: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span> /&gt;</span>单选框<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;vehicle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Bike&quot;</span> /&gt;</span>复选框<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><ul><li><strong>HTML 元素</strong>可以设置属性</li><li>属性可以在元素中添加附加信息</li><li>属性一般描述于开始标签</li><li>属性总是以<strong>属性名/属性值</strong>对的形式出现, 比如: name=”value”  </li><li><strong>class 属性</strong>可以多用 class=” “(引号里面可以填入多个class属性)</li><li><strong>id 属性</strong>只能单独设置 id=” “(只能填写一个, 多个无效)  </li></ul><h1 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h1>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站数据备份</title>
      <link href="/posts/f7bab86b.html"/>
      <url>/posts/f7bab86b.html</url>
      
        <content type="html"><![CDATA[<p>2019-08-05-网站数据备份</p><a id="more"></a><h2 id="将网站数据备份至GitHub"><a href="#将网站数据备份至GitHub" class="headerlink" title="将网站数据备份至GitHub"></a>将网站数据备份至GitHub</h2><p><a href="https://blog.csdn.net/u012195214/article/details/72721065">CSDN 参考文章</a><br><a href="https://www.zhihu.com/question/21193762">使用hexo，如果换了电脑怎么更新博客？</a>  </p><h3 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作:"></a>具体操作:</h3><h4 id="情况1-新建博客"><a href="#情况1-新建博客" class="headerlink" title="情况1, 新建博客"></a>情况1, 新建博客</h4><ul><li><p>创建仓库: <a href="http://username.github.io/">http://username.github.io</a></p></li><li><p>创建两个分支: <code>master</code> 与 <code>hexo</code> </p></li><li><p>设置 hexo 为默认分支(只需要手动管理这个分支上的Hexo网站文件)</p></li><li><p>使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:username/username.github.io.git  <span class="comment"># 拷贝仓库</span></span><br></pre></td></tr></table></figure></li><li><p>在本地 <a href="http://username.github.io文件夹下通过git/">http://username.github.io文件夹下通过Git</a> bash依次执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g</span><br><span class="line">hexo init</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git <span class="comment"># 此时当前分支应显示为hexo</span></span><br></pre></td></tr></table></figure></li><li><p>修改<code>_config.yml</code>中的deploy参数, 分支应为master;</p></li><li><p>依次执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;XXXX&quot;</span></span><br><span class="line">git push origin hexo <span class="comment"># 提交网站相关的文件</span></span><br></pre></td></tr></table></figure></li><li><p>执行<code>hexo g -d</code>生成网站并部署到 GitHub 上</p></li></ul><h4 id="情况2-已经有部分博文部署到git但没有备份分支"><a href="#情况2-已经有部分博文部署到git但没有备份分支" class="headerlink" title="情况2, 已经有部分博文部署到git但没有备份分支"></a>情况2, 已经有部分博文部署到git但没有备份分支</h4><ul><li><p>创建 hexo 分支, 并设置为默认分支</p></li><li><p><code>git clone git@github.com:username/username.github.io.git</code>到本地, 删除除了 .git 以外的文件;</p></li><li><p>复制原有的博客源文件, 注意除了<code>.deploy_git</code>, 并创建 <code>.gitignore</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.<span class="built_in">log</span></span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure></li><li><p>然后执行 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;add hexo branch&quot;</span> </span><br><span class="line">git push</span><br></pre></td></tr></table></figure></li></ul><h3 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h3><blockquote><p>If you’re using <strong><code>GitHub Free</code></strong> and <strong>change</strong> a repository’s visibility <strong>from public to private</strong>, <strong>you’ll lose access to features like protected branches and GitHub Pages.</strong> </p></blockquote><blockquote><p><strong><em>Any published GitHub Pages site will be automatically unpublished.</em></strong> If you added a custom domain to the GitHub Pages site, you should remove or update your DNS records before making the repository private, to avoid the risk of a domain takeover. For more information, see “Adding or removing a custom domain for your GitHub Pages site.”</p></blockquote><p><strong><a href="https://help.github.com/en/articles/setting-repository-visibility">help github:</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tools</title>
      <link href="/posts/eafade77.html"/>
      <url>/posts/eafade77.html</url>
      
        <content type="html"><![CDATA[<p>2019-07-29-tools</p><a id="more"></a><h2 id="转自https-github-com-shenzekun"><a href="#转自https-github-com-shenzekun" class="headerlink" title="转自https://github.com/shenzekun"></a>转自<a href>https://github.com/shenzekun</a></h2><hr><h1 id="useful-tools"><a href="#useful-tools" class="headerlink" title="useful-tools"></a>useful-tools</h1><blockquote><p>🔨 一些有用的工具网站（<strong>注意</strong>：有些网站可能需要翻墙才能看到）</p></blockquote><h2 id="浏览器兼容类🌎"><a href="#浏览器兼容类🌎" class="headerlink" title="浏览器兼容类🌎"></a>浏览器兼容类🌎</h2><ul><li><a href="https://caniuse.com/">caniuse</a> (网站开发浏览器兼容性查询)</li><li><a href="http://browserhacks.com/">browserhacks</a> (一些浏览器兼容写法)</li></ul><h2 id="图片类😎"><a href="#图片类😎" class="headerlink" title="图片类😎"></a>图片类😎</h2><ul><li><p><a href="https://tinypng.com/">Tinypng</a> | <a href="http://zhitu.isux.us/">智图</a> (压缩图片)</p></li><li><p><a href="http://www.biaonimeia.com/login">标你妹啊</a> (psd 标注)</p></li><li><p><a href="https://coolbackgrounds.io/">Cool Backgrounds</a> (生成好看的渐变背景图)</p></li><li><p><a href="https://carbon.now.sh/?bg=rgba(171,%20184,%20195,%201)&t=seti&wt=none&l=auto&ds=true&dsyoff=20px&dsblur=68px&wc=true&wa=true&pv=48px&ph=32px&ln=false&fm=Hack&fs=14px&si=false&es=2x&wm=false">carbon</a> (生成类似 mac 风格的代码图片，用于分享)  </p></li><li><p><a href="https://source.unsplash.com/">Unsplash Source</a> (生成随机图片) </p></li><li><p><a href="https://spritegen.website-performance.org/">CSS Sprite Generator</a> (生成雪碧图)</p></li><li><p><a href="http://www.iconfont.cn/plus">iconfont</a> (阿里巴巴矢量图标库)</p></li><li><p><a href="https://icons8.com/preloaders/">Preloaders</a> | <a href="https://loading.io/">LOADING.IO</a> (加载图，<strong>有些是收费的</strong>)</p></li><li><p><a href="https://www.desktoppr.co/wallpapers">desktoppr</a> (好看的壁纸)</p></li><li><p><a href="https://material.io/tools/icons/?style=baseline">Material icons</a> (Material icons图标)</p></li><li><p><a href="https://www.iloveimg.com/zh-cn">Iloveimg</a> (批量编辑图片的所有工具。包括压缩图片，剪裁图片，图片加水印，转化至jpg图片等等)</p></li><li><p><a href="https://www.pkgif.net/">pkgif</a> (任意GIF添加字幕)</p></li><li><p><a href="https://imagecyborg.com/">ImageCyborg</a> (一键下载当前网页的所有图片)</p></li><li><p><a href="http://emblemmatic.org/markmaker/#/">MarkMaker</a> (在线 logo 随机生成工具)</p></li><li><p><a href="https://www.remove.bg/">Removebg</a> (在线移除背景工具，想改图片的背景可以用这个，证件照必备😀)</p></li><li><p><a href="https://jakearchibald.github.io/svgomg/">SVGOMG</a> (SVG图形压缩优化)</p><h2 id="代码类⌨️"><a href="#代码类⌨️" class="headerlink" title="代码类⌨️"></a>代码类⌨️</h2></li><li><p><a href="https://paste.ubuntu.com/">Ubuntu pastebin</a> (代码分享)</p></li><li><p><a href="https://codepen.io/pens/">Codepen</a> | <a href="http://jsbin.com/">Jsbin</a> (在线代码编辑)</p></li><li><p><a href="https://codesandbox.io/">CodeSandbox</a> (在线写React,自动编译,有代码提示)</p></li><li><p><a href="http://www.colorzilla.com/gradient-editor/">Ultimate CSS Gradient Generator</a> (生成 css 渐变)</p></li><li><p><a href="https://www.grabient.com/">Grabient</a> (生成漂亮的 css 渐变)</p></li><li><p><a href="https://dev.w3.org/html5/html-author/charref">Character Entity Reference Chart</a> (各种符号的转义字符)</p></li><li><p><a href="http://apps.eky.hk/css-triangle-generator/zh-hant">css三角形产生器</a> | <a href="http://www.cssarrowplease.com/">CSS ARROW PLEASE</a> (生成CSS小三角) </p></li><li><p><a href="https://easings.net/zh-cn?tuyiyi.com">缓动函数速查表</a></p></li><li><p><a href="https://regexper.com/">Regexper</a> (正则可视化)</p></li><li><p><a href="https://regex101.com/">Regex101</a> (正则表达式测试)</p></li><li><p><a href="https://visualgo.net/en">Visualgo</a> (数据结构，算法可视化)</p></li><li><p><a href="http://animista.net/">Animista</a> (在线生成 css 动画)</p></li><li><p><a href="https://developers.google.com/speed/pagespeed/insights/">PageSpeed Insights</a> (测试网站速度，优化性能)</p></li><li><p><a href="https://learngitbranching.js.org/">Learn Git Branching</a> (以动画的形式让你学习 git)</p></li><li><p><a href="http://asciiflow.com/">Asciiflow</a> (生成类似代码注释里那种佛祖的代码。。自己画😄)</p></li><li><p><a href="http://pxtoem.com/">PXtoEM</a> (PX EM 单位换算)</p></li><li><p><a href="http://epic-spinners.epicmax.co/#/">epic-spinners</a> (一个好看的css loading 代码库)</p></li><li><p><a href="https://www.myintervals.com/emogrifier.php">Emogrifier</a> (邮件模板必备工具-html转换成内联样式)</p></li></ul><h2 id="效率类⚡️"><a href="#效率类⚡️" class="headerlink" title="效率类⚡️"></a>效率类⚡️</h2><ul><li><a href="https://modao.cc/">墨刀</a> (画原型图)</li><li><a href="https://shimo.im/">石墨文档</a> | <a href="https://docs.qq.com/">腾讯文档</a> (多人实时协作的云端文档与表格)</li><li><a href="https://www.hloom.com/resume-examples/">resume-examples</a> (简历模板)</li><li><a href="https://enhancv.com/">Enhancv</a> (生成简历)</li><li><a href="http://www.koppt.cn/index">KOPPT</a> (ppt 模板)</li><li><a href="https://about.beautiful.ai/">Beautiful.Ai</a> (人工智能 ppt 模板创建)</li><li><a href="https://www.canva.com/templates/">Canva</a> (设计模板)</li><li><a href="https://www.processon.com/;jsessionid=EC0CB59BD105F6FD0294417AB0B0CC22.jvm1">ProcessOn</a> (在线画流程图，思维导图、UI原型图等等)</li><li><a href="https://wakatime.com/">WakaTime</a> (跟踪项目花费的时间，得装插件)</li><li><a href="http://screensiz.es/">Screen Sizes</a> (移动屏幕尺寸)</li><li><a href="https://habitica.com/">Habitica</a> (游戏化Todo)</li><li><a href="https://smallpdf.com/">Smallpdf</a> (非常厉害的一个网站，PDF压缩，PDF转PPT，Word，Excel等等都可以直接通过这个页面实现)</li><li><a href="https://cli.im/">草料二维码</a> (在线生成二维码)</li><li><a href="https://ppt.baomitu.com/">声享</a> (在线制作 PPT)</li><li><a href="https://mubu.com/">幕布</a> (极简大纲笔记，一键生成思维导图)</li><li><a href="https://infogram.com/">Infogram</a> (在线图表制作工具)</li><li><a href="https://uzer.me/">UZER.ME</a> (能够在线使用ps，ai，office，xmind，火狐浏览器等多个应用的网站)</li><li><a href="http://www.nicetool.net/">NiceTool</a> (在线工具集合网站)</li><li><a href="https://unbug.github.io/codelf/">codelf</a> (开发变量命名神器)</li><li><a href="https://tableconvert.com/">表格转换</a> (Markdown表格生成,LaTex表格生成)</li><li><a href="https://www.rdtoc.com/tools/jsonpath">JSONPath</a> (在线JSON提取工具)</li><li><a href="https://www.rdtoc.com/tools/jmespath">JMESPath</a> (在线JSON提取工具)</li></ul><h2 id="查询类🔎"><a href="#查询类🔎" class="headerlink" title="查询类🔎"></a>查询类🔎</h2><ul><li><a href="https://devhints.io/">devhints</a> (常用速查表，快速查询各类框架和库的常用方法，很实用)</li><li><a href="https://docschina.org/">印记中文</a> (快速查询各类框架和周边库的中文文档)</li><li><a href="https://csstriggers.com/">Css Triggers</a> (列出了哪些CSS属性在不同的渲染引擎中是否会触发重排或重绘)</li><li><a href="https://securityheaders.com/">Security Headers</a> (搜索网站是否有不安全的头部 header 设置，并会评分)</li><li><a href="https://devdocs.io/">devdocs</a> (各种编程语言 API 文档)</li><li><a href="http://www.speedtest.cn/">Seepdtest</a>(测速网站)<ul><li>300M的家庭带宽，家庭网络需要使用<code>千兆无线路由器、千兆网线组网</code></li><li><code>1Mbps=1024Kbps=128KB/s, 300Mbps=300x128=38400KB/s=37.5MB/s</code></li></ul><ul><li>关于网线:</li></ul><ul><li><code>五类线</code>：该类电缆增加了绕线密度，传输带宽为100MHz，用于语音传输和最高传输速率为<code>100Mbps</code>的数据传输，主要用于100BASE-T和10BASE-T网络，已被超五类线替代。</li><li><code>超五类线</code>：具有衰减小，串扰少，比五类线增加了近端串音功率和的测试要求，并且具有更高的衰减串扰比（ACR)和信噪比、更小的时延误差，性能得到很大提高。超五类线的最大带宽为100MHz。</li><li><code>六类线</code>：的传输性能远远高于超五类标准，最适用于传输速率为<code>1Gbps</code>的应用。六类与超五类的一个重要的不同点在于：改善了在串扰以及回波损耗方面的性能，对于新一代全双工的高速网络应用而言，优良的回波损耗性能是极重要的。</li><li><code>超六类线</code>：是六类线的改进版，发布于2008年，同样是ANSI/TIA-568C.2和ISO/IEC 11801超六类/EA级标准中规定的一种双绞线电缆，主要应用于万兆位网络中。传输频率500 MHz，最大传输速度也可达到10Gbps ，在外部串扰等方面有较大改善</li><li><code>七类线</code>：该线是ISO/IEC 11801 7类/F级标准中于2002年,  认可的一种双绞线，它主要为了适应万兆以太网技术的应用和发展。但它不再是一种非屏蔽双绞线了，而是一种屏蔽双绞线，所以它的传输频率至少可达600 MHz，传输速率可达10 Gbps。</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> CRH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>review</title>
      <link href="/posts/794381c6.html"/>
      <url>/posts/794381c6.html</url>
      
        <content type="html"><![CDATA[<p>2019-07-26-Review</p><a id="more"></a><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><h3 id="linux启动过程？"><a href="#linux启动过程？" class="headerlink" title="linux启动过程？"></a><strong>linux启动过程</strong>？</h3><ul><li><a href="https://www.runoob.com/linux/linux-system-boot.html">文档参考链接</a></li><li><strong>POST–&gt; BIOS(Boot Sequence)–&gt; MBR(bootloader,446)–&gt; Kernel–&gt; initrd(initramfs)–&gt; [ROOTFS]–&gt; /sbin/init(/etc/inittab)</strong>  </li></ul><ul><li>initrd：Linux初始RAM磁盘（initrd）是在系统引导过程中挂载的一个临时根文件系统；</li></ul><ul><li><p>init进程是系统所有进程的起点</p><table><thead><tr><th align="left">类型</th><th align="left">名称</th><th align="left">位置</th></tr></thead><tbody><tr><td align="left">SysV</td><td align="left">init</td><td align="left">CentOS5之前: /etc/inittab</td></tr><tr><td align="left">Upstart</td><td align="left">init</td><td align="left">CentOS6: /etc/inittab, /etc/init/*.conf</td></tr><tr><td align="left">Systemd</td><td align="left">systemd</td><td align="left">CentOS7: /usr/lib/systemd/system, /etc/systemd/system</td></tr></tbody></table></li><li><p>Linux允许为不同的场合, 分配不同的开机启动程序, 这就叫做”运行级别”（runlevel）, 也就是说，启动时根据”运行级别”, 确定要运行哪些程序</p></li><li><p>系统初始化, 在init的配置文件中有这么一行: <code>si::sysinit:/etc/rc.d/rc.sysinit</code>, 完成一些系统初始化的工作(<strong>rc启动脚本实际上都是放在/etc/rc.d/init.d/目录下</strong>)　</p></li></ul><h3 id="Apache有几种工作模式-各有什么优缺点"><a href="#Apache有几种工作模式-各有什么优缺点" class="headerlink" title="Apache有几种工作模式, 各有什么优缺点?"></a><strong>Apache</strong>有几种<strong>工作模式</strong>, 各有什么优缺点?</h3><ul><li><p><a href="https://www.cnblogs.com/zhichaoma/articles/7784688.html">文档参考链接1</a></p></li><li><p><a href="https://www.cnblogs.com/qiujun/p/6861773.html">文档参考链接2</a></p></li><li><p>三种工作模式:<code>MPM: (Multi-Processing Module, 多进程处理模块), 它们分别是 prefork, worker, event</code></p><ul><li><strong>prefork</strong>: 是一个<strong>多进程, 非线程型</strong>的, 预派生的MPM, 使用多个进程, 每个进程在某个确定的时间只单独处理一个连接, <em>效率高</em>, 但<em>内存使用比较大</em></li><li><strong>worker</strong>: 使用了<strong>多进程和多线程</strong>的混合模式, <em>占用内存少</em>, 但<em>由于多个子进程共享父进程内存地址, 易发生阻塞</em></li><li><strong>event</strong>: 类似于worker模式, <strong>多进程, 多线程, epoll</strong>, 解决了keep-live场景下, 长期占用线程的资源浪费问题(某些线程因为被keep-alive，挂在那里等待，中间几乎没有请求过来，一直等到超时)</li></ul></li></ul><h3 id="Apache设置虚拟目录的字段"><a href="#Apache设置虚拟目录的字段" class="headerlink" title="Apache设置虚拟目录的字段?"></a>Apache设置虚拟目录的字段?</h3><ul><li><p><code>vim /etc/httpd/conf/httpd.conf</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">  基于IP地址:</span><br><span class="line">  &lt;VirtualHost IP&gt;</span><br><span class="line">  DocumentRoot /home/wwwroot/10</span><br><span class="line">  ServerName www.anyue.com</span><br><span class="line">  &lt;Directory /home/wwwroot/10 &gt;</span><br><span class="line">  AllowOverride None</span><br><span class="line">  Require all granted</span><br><span class="line">&lt;/VirtualHOst&gt;</span><br><span class="line">  </span><br><span class="line">  基于主机域名:</span><br><span class="line">  &lt;VirtualHost IP&gt;</span><br><span class="line">  DocumentRoot /home/wwwroot/www</span><br><span class="line">  ServerName www.anyue.com</span><br><span class="line">  &lt;Directory /home/wwwroot/www &gt;</span><br><span class="line">  AllowOverride None</span><br><span class="line">  Require all granted</span><br><span class="line">&lt;/VirtualHOst&gt;</span><br><span class="line">  </span><br><span class="line">  基于端口号:</span><br><span class="line">  &lt;VirtualHost IP:8080&gt;</span><br><span class="line">  DocumentRoot /home/wwwroot/8080</span><br><span class="line">  ServerName www.anyue.com</span><br><span class="line">  &lt;Directory /home/wwwroot/8080 &gt;</span><br><span class="line">  AllowOverride None</span><br><span class="line">  Require all granted</span><br><span class="line">  &lt;/VirtualHOst&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="列出Linux打包工具并写出相应解压参数-至少3种"><a href="#列出Linux打包工具并写出相应解压参数-至少3种" class="headerlink" title="列出Linux打包工具并写出相应解压参数, 至少3种"></a>列出Linux打包工具并写出相应解压参数, 至少3种</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -czvf     <span class="comment"># -z gzip(.tar.gz)  -j bzip(.bz2) </span></span><br><span class="line">zip test.txt.zip test.zip  <span class="comment">#压缩文件</span></span><br><span class="line">unzip test.zip -d /tmp   <span class="comment"># -l 查看</span></span><br></pre></td></tr></table></figure><h3 id="利用sed命令将test-txt中所有的回车换成空格"><a href="#利用sed命令将test-txt中所有的回车换成空格" class="headerlink" title="利用sed命令将test.txt中所有的回车换成空格?"></a>利用sed命令将test.txt中所有的回车换成空格?</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i s/\r/ /g test.txt</span><br><span class="line">seq 10 |tr <span class="string">&quot;\n&quot;</span> <span class="string">&quot; &quot;</span></span><br><span class="line">seq 10 |awk -v ORS=<span class="string">&quot; &quot;</span> <span class="string">&#x27;&#123;print $0&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="在每周六的凌晨3-15执行-home-shell-collect-pl-并将标准输出和标准错误输出到-dev-null设备-写出crontab中的语句"><a href="#在每周六的凌晨3-15执行-home-shell-collect-pl-并将标准输出和标准错误输出到-dev-null设备-写出crontab中的语句" class="headerlink" title="在每周六的凌晨3:15执行/home/shell/collect.pl, 并将标准输出和标准错误输出到/dev/null设备, 写出crontab中的语句?"></a>在每周六的凌晨3:15执行/home/shell/collect.pl, 并将标准输出和标准错误输出到/dev/null设备, 写出crontab中的语句?</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15 3 * * 6 /home/shell/collect.pl &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h3 id="计划每星期天早上8点服务器定时重启，如何实现？"><a href="#计划每星期天早上8点服务器定时重启，如何实现？" class="headerlink" title="计划每星期天早上8点服务器定时重启，如何实现？"></a>计划每星期天早上8点服务器定时重启，如何实现？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00 8 * * 7 /sbin/init 6</span><br></pre></td></tr></table></figure><h3 id="当用户在浏览器输入网址，计算机对DNS解释经过哪些流程？（注：本机跟本地DNS还没有缓存）"><a href="#当用户在浏览器输入网址，计算机对DNS解释经过哪些流程？（注：本机跟本地DNS还没有缓存）" class="headerlink" title="当用户在浏览器输入网址，计算机对DNS解释经过哪些流程？（注：本机跟本地DNS还没有缓存）"></a>当用户在浏览器输入网址，计算机对DNS解释经过哪些流程？（注：本机跟本地DNS还没有缓存）</h3><ul><li>a.用户输入网址到浏览器；</li><li>b.浏览器发出DNS请求信息；</li><li>c.计算机<code>首先查询本机HOST文件</code>，看是否存在，存在直接返回结果，不存在，继续下一步；</li><li>d.计算机按照<code>本地DNS</code>的顺序，向合法dns服务器查询IP结果；</li><li>e.合法dns返回dns结果给本地dns，本地dns并缓存本结果，直到TTL过期，才再次查询此结果；</li><li>f.返回IP结果给浏览器；</li><li>g.浏览器根据IP信息，获取页面；</li></ul><h3 id="iptables是否支持time时间控制用户行为，请写出步骤"><a href="#iptables是否支持time时间控制用户行为，请写出步骤" class="headerlink" title="iptables是否支持time时间控制用户行为，请写出步骤"></a>iptables是否支持time时间控制用户行为，请写出步骤</h3><p>支持，需要增加相关支持的内核补丁，并且要重新编译内核。或者使用crontab配合iptables，首先：<code>vi /deny.bat</code> 输入<code>/sbin/iptables -A OUTPUT -p tcp -s 192.168.1.0/24 --dport 80 -j DROP</code>保存退出，打开crontab-e <code>00 21＊　＊　＊ /bin/sh /deny.bat</code>  </p><h3 id="源码编译apache-要求安装目录为-usr-local-apache-需有压缩模块-rewrtie-worker模式-并说明apache的worker-MPM中-为什么ServerLimit要放到配置段最前面"><a href="#源码编译apache-要求安装目录为-usr-local-apache-需有压缩模块-rewrtie-worker模式-并说明apache的worker-MPM中-为什么ServerLimit要放到配置段最前面" class="headerlink" title="源码编译apache, 要求安装目录为/usr/local/apache, 需有压缩模块, rewrtie, worker模式, 并说明apache的worker MPM中,为什么ServerLimit要放到配置段最前面?"></a>源码编译apache, 要求安装目录为/usr/local/apache, 需有压缩模块, rewrtie, worker模式, 并说明apache的worker MPM中,为什么ServerLimit要放到配置段最前面?</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf apr-1.6.3.tar.gz </span><br><span class="line"><span class="built_in">cd</span> apache-1.6.3</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/apache --<span class="built_in">enable</span>-so --with-rewrite --with-mpm-worker  <span class="comment"># 不放在最前面, client会忽略掉的</span></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="匹配文本中的key-并打印出该行及下面5行？"><a href="#匹配文本中的key-并打印出该行及下面5行？" class="headerlink" title="匹配文本中的key, 并打印出该行及下面5行？"></a>匹配文本中的key, 并打印出该行及下面5行？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -A5 key filename</span><br></pre></td></tr></table></figure><h3 id="dmseg命令中看到ip-conntrack-table-full-dropping-packet-如何解决？"><a href="#dmseg命令中看到ip-conntrack-table-full-dropping-packet-如何解决？" class="headerlink" title="dmseg命令中看到ip_conntrack:table full, dropping packet.如何解决？"></a>dmseg命令中看到ip_conntrack:table full, dropping packet.如何解决？</h3><ul><li><a href="http://www.ttlsa.com/linux/ip_conntrack-table-full-dropping-packet-solution/">参考链接</a></li><li>更改ip_conntrack大小</li><li>不加载ip_conntrack模块</li></ul><h3 id="简述21-22-23-25-110-143-873-3306端口运行的服务"><a href="#简述21-22-23-25-110-143-873-3306端口运行的服务" class="headerlink" title="简述21, 22, 23, 25, 110, 143, 873, 3306端口运行的服务?"></a>简述21, 22, 23, 25, 110, 143, 873, 3306端口运行的服务?</h3><ul><li>23–&gt; telnet 服务使用</li><li>110–&gt; POP3  服务</li><li>143–&gt; IMAP v2</li><li>873–&gt; rsync 文件传输服务</li><li>3306–&gt; MySQL 数据库服务</li></ul><h3 id="如何在Linux上重建初始化内存盘镜像文件？"><a href="#如何在Linux上重建初始化内存盘镜像文件？" class="headerlink" title="如何在Linux上重建初始化内存盘镜像文件？"></a>如何在Linux上重建初始化内存盘镜像文件？</h3><ul><li>CentOS 5.X / RHEL 5.X: <code>mkinitrd -f -v /boot/initrd-$(uname -r).img $(uname -r)</code></li><li>CentOS 6.X / RHEL 6.X: <code>dracut -f</code></li></ul><h3 id="如何查看bond0的状态"><a href="#如何查看bond0的状态" class="headerlink" title="如何查看bond0的状态?"></a>如何查看bond0的状态?</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/net/bonding/bond0</span><br></pre></td></tr></table></figure><h3 id="linux中的-proc文件系统有什么用？"><a href="#linux中的-proc文件系统有什么用？" class="headerlink" title="linux中的/proc文件系统有什么用？"></a>linux中的/proc文件系统有什么用？</h3><ul><li>/proc 文件系统是一个虚拟文件系统, 它只存在内存当中, 而不占用外存空间, Linux 内核提供了一种通过 /proc 文件系统, 在运行时访问内核内部数据结构, 改变内核设置的机制.<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查看proc信息: ls /proc/</span><br><span class="line">查看内核信息: ls /proc/sys</span><br><span class="line">查看网卡信息: ls /proc/net</span><br><span class="line">查看SCSI信息: ls /proc/scsi</span><br><span class="line">查看已加载模块: cat /proc/modules</span><br></pre></td></tr></table></figure></li></ul><h3 id="lvs的工作模式及工作过程-LB-集群是-load-balance-集群的简写-？"><a href="#lvs的工作模式及工作过程-LB-集群是-load-balance-集群的简写-？" class="headerlink" title="lvs的工作模式及工作过程(LB 集群是 load balance 集群的简写)？"></a>lvs的工作模式及工作过程(LB 集群是 load balance 集群的简写)？</h3><ul><li>DR(Direct Routing)模式: LB收到请求包后, 将请求包中<code>目标MAC地址</code>转换为<code>某个选定RS的MAC地址</code>后将包转发出去, <code>RS收到请求包后, 可直接将应答内容传给用户.</code> 此时要求LB和所有RS都必须在一个物理段内, 且LB与RS群共享一个虚拟IP.</li><li>NAT(Network Address Translation)模式: LB收到用户请求包后, LB将<code>请求包中虚拟服务器的IP地址</code>转换为某个选定<code>RS的IP地址</code>, 转发给RS; RS将应答包发给 LB, LB将应答包中RS的IP转为虚拟服务器的IP地址, 回送给用户.</li><li>IP隧道(IP Tunneling)模式: LB收到用户请求包后, 根据IP隧道协议封装该包, 然后传给某个选定的RS; RS解出请求信息, 直接将应答内容传给用户。此时要求RS和LB都要支持IP隧道协议.</li></ul><h3 id="Mysql数据库的备份和还原？"><a href="#Mysql数据库的备份和还原？" class="headerlink" title="Mysql数据库的备份和还原？"></a>Mysql数据库的备份和还原？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -hhostname -uusername -ppassword databasename &gt; backupfile.sql</span><br><span class="line">mysql -hhostname -uusername -ppassword databasename &lt; backupfile.sql</span><br></pre></td></tr></table></figure><h3 id="Linux系统是由哪些部分组成？"><a href="#Linux系统是由哪些部分组成？" class="headerlink" title="Linux系统是由哪些部分组成？"></a>Linux系统是由哪些部分组成？</h3><ul><li>Linux系统一般有4个主要部分：<code>内核、shell、文件系统和应用程序</code><ul><li>Linux内核: 内核是操作系统的核心，具有很多最基本功能，如虚拟内存、多任务、共享库、需求加载、可执行程序和TCP/IP网络功能。Linux内核的模块分为以下几个部分：存储管理、CPU和进程管理、文件系统、设备管理和驱动、网络通信、系统的初始化和系统调用等。</li><li>Linux shell: shell是系统的用户界面，提供了用户与内核进行交互操作的一种接口。它接收用户输入的命令并把它送入内核去执行，是一个命令解释器。另外，shell编程语言具有普通编程语言的很多特点，用这种编程语言编写的shell程序与其他应用程序具有同样的效果。</li><li>Linux文件系统: 文件系统是文件存放在磁盘等存储设备上的组织方法。Linux系统能支持多种目前流行的文件系统，如EXT2、EXT3、FAT、FAT32、VFAT和ISO9660。</li><li>Linux应用程序: 标准的Linux系统一般都有一套都有称为应用程序的程序集，它包括文本编辑器、编程语言、XWindow、办公套件、Internet工具和数据库等。</li></ul></li></ul><h3 id="用一条命令查看目前系统已经启动服务监听的端口？"><a href="#用一条命令查看目前系统已经启动服务监听的端口？" class="headerlink" title="用一条命令查看目前系统已经启动服务监听的端口？"></a>用一条命令查看目前系统已经启动服务监听的端口？</h3><ul><li><code>netstat -antl |grep &quot;LISTEN&quot;</code></li></ul><h3 id="统计出一台web-srver上各个状态-ESTABLISHED-SYN-SENT-SYN-RECV等-的个数"><a href="#统计出一台web-srver上各个状态-ESTABLISHED-SYN-SENT-SYN-RECV等-的个数" class="headerlink" title="统计出一台web srver上各个状态(ESTABLISHED/SYN_SENT/SYN-RECV等)的个数"></a>统计出一台web srver上各个状态(ESTABLISHED/SYN_SENT/SYN-RECV等)的个数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat access_log | awk ‘&#123;<span class="built_in">print</span> <span class="variable">$1</span>&#125;’ | uniq -c|sort -rn|head -10</span><br><span class="line">netstat -antl |grep <span class="string">&quot;ESTABLISHED&quot;</span> |wc -l</span><br><span class="line">netstat -antl |grep <span class="string">&quot;SYN_SENT&quot;</span> |wc -l</span><br><span class="line">netstat -antl |grep <span class="string">&quot;SYN_RECV&quot;</span> |wc -l</span><br><span class="line">netstat -n |grep ^tcp |awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span> |sort -r |uniq -c</span><br></pre></td></tr></table></figure><h3 id="什么是默认登录shell"><a href="#什么是默认登录shell" class="headerlink" title="什么是默认登录shell?"></a>什么是默认登录shell?</h3><ul><li>一般Linux默认的用户shell都是bash, 可以登录进去敲命令, 修改 <code>usermod -s /bin/zsh username</code>; <code>useradd -s /bin/zsh username</code></li></ul><h3 id="shell中可以使用那些类型的变量"><a href="#shell中可以使用那些类型的变量" class="headerlink" title="shell中可以使用那些类型的变量?"></a>shell中可以使用那些类型的变量?</h3><ul><li>set: 查看所有变量(全局、局部和函数), 删除: unset name</li><li>局部(标准、普通)变量: 生效范围为当前shell进程, 对当前shell之外的其他shell进程, 包括当前shell的子进程均无效</li><li>环境(全局)变量: 生效范围为当前shell进程及其子进程(export=declare -x|env命令可以查看系统中环境变量)</li><li>本地变量: 生效范围为当前shell进程中某代码片断，通常指函数</li><li>位置变量: <code>$1 $2 $3...</code></li><li>特殊变量: <code>$? $0 $* $@ $# $$</code></li></ul><h3 id="监控？特点"><a href="#监控？特点" class="headerlink" title="监控？特点"></a>监控？特点</h3><ul><li>使用nagios 对服务器进行监控，其特点可实时实现手机短信、电子邮件、MSN、飞信报警。</li><li>使用cacti 对流量进行监控。zabbix可以执行脚本监视，图形界面监控。</li></ul><h3 id="shell如何定义函数"><a href="#shell如何定义函数" class="headerlink" title="shell如何定义函数?"></a>shell如何定义函数?</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">sum</span></span>()&#123;</span><br><span class="line">    val1=<span class="variable">$1</span></span><br><span class="line">    val2=<span class="variable">$2</span></span><br><span class="line">    val3=$((<span class="variable">$1</span>+<span class="variable">$2</span>))</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$val3</span></span><br><span class="line">&#125;</span><br><span class="line">ret_val=$(sum 10 20)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ret_val</span></span><br></pre></td></tr></table></figure><h3 id="OSI七层模型，tcp三次握手过程，tcp连接断开过程，什么情况下tcp进入time-wait"><a href="#OSI七层模型，tcp三次握手过程，tcp连接断开过程，什么情况下tcp进入time-wait" class="headerlink" title="OSI七层模型，tcp三次握手过程，tcp连接断开过程，什么情况下tcp进入time_wait?"></a>OSI七层模型，tcp三次握手过程，tcp连接断开过程，什么情况下tcp进入time_wait?</h3><ul><li><p>物理层 数据链路层 网络层 传输层 会话层 表示层 应用层</p></li><li><p>TCP三次握手的过程:</p><ul><li><code>第一次握手：</code>客户端发送syn包(seq=x)到服务器，并进入SYN_SEND状态，等待服务器确认;</li><li><code>第二次握手：</code>服务器收到syn包，必须确认客户的SYN(ack=x+1)，同时自己也发送一个SYN包(seq=y)，即SYN+ACK包，此时服务器进入SYN_RECV状态;</li><li><code>第三次握手：</code>客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=y+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。</li></ul></li><li><p>TCP四次挥手:</p><ul><li><code>第一次挥手：</code>主动关闭方发送一个FIN，用来关闭主动方到被动关闭方的数据传送，也就是主动关闭方告诉被动关闭方：我已经不会再给你发数据了(当然，在fin包之前发送出去的数据，如果没有收到对应的ack确认报文，主动关闭方依然会重发这些数据)，但此时主动关闭方还可以接受数据。</li><li><code>第二次挥手：</code>被动关闭方收到FIN包后，发送一个ACK给对方，确认序号为收到序号+1(与SYN相同，一个FIN占用一个序号)。</li><li><code>第三次挥手：</code>被动关闭方发送一个FIN，用来关闭被动关闭方到主动关闭方的数据传送，也就是告诉主动关闭方，我的数据也发送完了，不会再给你发数据了。</li><li><code>第四次挥手：</code>主动关闭方收到FIN后，发送一个ACK给被动关闭方，确认序号为收到序号+1，至此，完成四次挥手。</li><li>time_wait状态是四次挥手中服务器向客户端发送FIN终止连接后进入的状态</li></ul></li></ul><h3 id="什么是跨站脚本攻击，有何危害，sql注入攻击如何防范"><a href="#什么是跨站脚本攻击，有何危害，sql注入攻击如何防范" class="headerlink" title="什么是跨站脚本攻击，有何危害，sql注入攻击如何防范"></a>什么是跨站脚本攻击，有何危害，sql注入攻击如何防范</h3><ul><li>跨站脚本攻击(也称为XSS)：指利用网站漏洞从用户那里恶意盗取信息。用户在浏览网站、使用即时通讯软件、甚至在阅读电子邮件时，通常会点击其中的链接。攻击者通过在链接中插入恶意代码，就能够盗取用户信息。</li><li>sql注入：即通过把SQL命令插入到Web表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令</li></ul><h3 id="重置MySQL-root密码？"><a href="#重置MySQL-root密码？" class="headerlink" title="重置MySQL root密码？"></a>重置MySQL root密码？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf, 在[mysqld]下添加skip-grant-tables</span><br><span class="line">UPDATE mysql.user SET password=PASSWORD(<span class="string">&#x27;新密码&#x27;</span>) <span class="built_in">where</span> USER=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">flush privileges</span><br></pre></td></tr></table></figure><h3 id="apache-和-MySQL两种服务能否装在同一台机器上，如何查看apache和MySQL端口和进程"><a href="#apache-和-MySQL两种服务能否装在同一台机器上，如何查看apache和MySQL端口和进程" class="headerlink" title="apache 和 MySQL两种服务能否装在同一台机器上，如何查看apache和MySQL端口和进程"></a>apache 和 MySQL两种服务能否装在同一台机器上，如何查看apache和MySQL端口和进程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -an |grep :80   ps -ef |grep httpd   ps -aux |grep httpd</span><br><span class="line">netstat -an |grep :3306</span><br></pre></td></tr></table></figure><h3 id="统计-var-log-nginx-access-log日志访问量最多的前十个IP"><a href="#统计-var-log-nginx-access-log日志访问量最多的前十个IP" class="headerlink" title="统计/var/log/nginx/access.log日志访问量最多的前十个IP"></a>统计/var/log/nginx/access.log日志访问量最多的前十个IP</h3><ul><li>nginx<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> urlogfile |sort |uniq -c |sort -nr -k1 |head -n 1</span><br><span class="line">awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> /usr/<span class="built_in">local</span>/nginx/logs/localhost.access.log |sort |uniq -c |sort -nr -k1 |head -n 10</span><br></pre></td></tr></table></figure></li><li>apache<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/<span class="built_in">log</span>/httpd/; cat access_log |awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> |uniq -c |sort -rn -k1 |head -n 10</span><br></pre></td></tr></table></figure></li></ul><h3 id="怎么查看当前系统中每个IP的连接数，怎么查看当前磁盘IO-sysstat-，怎么查看当前网络的IO-iftop-iotop"><a href="#怎么查看当前系统中每个IP的连接数，怎么查看当前磁盘IO-sysstat-，怎么查看当前网络的IO-iftop-iotop" class="headerlink" title="怎么查看当前系统中每个IP的连接数，怎么查看当前磁盘IO(sysstat)，怎么查看当前网络的IO(iftop iotop)"></a>怎么查看当前系统中每个IP的连接数，怎么查看当前磁盘IO(sysstat)，怎么查看当前网络的IO(iftop iotop)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat -n |awk <span class="string">&#x27;/^tcp/ &#123;print $5&#125;&#x27;</span> |awk -F: <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> |sort |uniq -c |sort -rn</span><br><span class="line">iostat</span><br><span class="line">iftop</span><br></pre></td></tr></table></figure><h3 id="如何将本地80-端口的请求转发到8080-端口，本地主机IP-为192-168-16-1"><a href="#如何将本地80-端口的请求转发到8080-端口，本地主机IP-为192-168-16-1" class="headerlink" title="如何将本地80 端口的请求转发到8080 端口，本地主机IP 为192.168.16.1"></a>如何将本地80 端口的请求转发到8080 端口，本地主机IP 为192.168.16.1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -d 192.168.16.1 -p tcp --dport 80 -j DNAT --to-destination 192.168.16.1:8080  </span><br><span class="line">iptables -t nat -A PREROUTING -d 192.168.16.1 -i eth0 -p tcp -dport 80 -j REDIRECT --to-port 8080</span><br></pre></td></tr></table></figure><h3 id="什么是NAT-常见的分为哪几种？DNAT和SNAT有什么不同，应用示例有哪些？"><a href="#什么是NAT-常见的分为哪几种？DNAT和SNAT有什么不同，应用示例有哪些？" class="headerlink" title="什么是NAT?常见的分为哪几种？DNAT和SNAT有什么不同，应用示例有哪些？"></a>什么是NAT?常见的分为哪几种？DNAT和SNAT有什么不同，应用示例有哪些？</h3><p><code>SNAT，DNAT，MASQUERADE</code>都是NAT，MASQUERADE是SNAT的一个特例。<code>SNAT</code>是指在数据包从网卡发送出去的时候，把数据包中的源地址部分替换为指定的IP，这样，接收方就认为数据包的来源是被替换的那个IP的主机；<code>MASQUERADE</code>是用发送数据的网卡上的IP来替换源IP，因此，对于那些<code>IP不固定的场合</code>，比如拨号网络或者通过dhcp分配IP的情况下，就得用MASQUERADE；<code>DNAT</code>，就是指数据包从网卡发送出去的时候，修改数据包中的目的IP，表现为如果你想访问A，可是因为网关做了DNAT，把所有访问A的数据包的目的IP全部修改为B，那么，你实际上访问的是B；</p><p>因为，路由是按照目的地址来选择的，因此，<code>DNAT是在PREROUTING链</code>上来进行的，而SNAT是在数据包发送出去的时候才进行，因此是在POSTROUTING链上进行的  </p><h3 id="磁盘显示有空间但是却不能touch文件？原因及解决方法？"><a href="#磁盘显示有空间但是却不能touch文件？原因及解决方法？" class="headerlink" title="磁盘显示有空间但是却不能touch文件？原因及解决方法？"></a>磁盘显示有空间但是却不能touch文件？原因及解决方法？</h3><p><a href="https://www.cnblogs.com/kevingrace/p/5577201.html">参考</a>  </p><ul><li><p>两种情况，一种是<code>磁盘配额</code>问题，另外一种就是EXT3文件系统的设计不适合很多小文件跟大文件的一种文件格式，出现很多小文件时，容易导致<code>inode耗尽</code>了</p></li><li><p><code>df -h</code>命令查看磁盘占用空间，若显示充足的空间，用<code>df -i</code>查看索引节点(inode)是否用尽，<code>inode译成中文就是索引节点，每个存储设备（例如硬盘）或存储设备的分区被格式化为文件系统后，应该有两部份，一部份是inode，另一部份是Block，Block是用来存储数据用的。而inode呢，就是用来存储这些数据的信息，这些信息包括文件大小、属主、归属的用户组、读写权限等。inode为每个文件进行信息索引，所以就有了inode的数值。操作系统根据指令，能通过inode值最快的找到相对应的文件。</code>  </p></li><li><p>解决方案:<br>  1）查找<code>find /var/spool/clientmqueue/ -type f -exec rm &#123;&#125; \;</code>删除/data/cache目录中的部分文件<br>  2）用软连接将空闲分区目录连接到inode占满的目录</p></li></ul><h3 id="top-命令？"><a href="#top-命令？" class="headerlink" title="top 命令？"></a>top 命令？</h3><ul><li>系统运行时间和平均负载（uptime），当前时间，系统已运行的时间，当前登录用户的数量，相应最近5、10和15分钟内的平均负载；<code>load average</code>数据是每隔5秒钟检查一次活跃的进程数，然后按特定算法计算出的数值。如果这个数除以逻辑CPU的数量，结果高于5的时候就表明系统在超负荷运转了；</li><li>CPU 状态：us, user： 运行(未调整优先级的) 用户进程的CPU时间，sy，system: 运行内核进程的CPU时间</li></ul><h3 id="RZY"><a href="#RZY" class="headerlink" title="RZY"></a>RZY</h3><ul><li>命令运行时使用CTRL+c，强制终止当前进程</li><li>命令运行时使用CTRL+z，强制当前进程转为后台，并使之挂起（暂停）</li><li><code>find perl5/ -name &quot;*.pm&quot; -print |xargs wc -l</code></li><li><code>find perl5/ -name &quot;*.pm&quot; -print -exec wc -l &#123;&#125; \;</code></li><li>wc -l `find ./perl5 -name “*.pm”`</li><li><code>wc -l $(find ./perl5 -name &quot;*.pm&quot;)</code></li></ul><h3 id="如何实现nginx代理的节点访问日志记录是真实访客IP，不是代理的IP配置nginx-conf配置文件增加不同的标记内容"><a href="#如何实现nginx代理的节点访问日志记录是真实访客IP，不是代理的IP配置nginx-conf配置文件增加不同的标记内容" class="headerlink" title="如何实现nginx代理的节点访问日志记录是真实访客IP，不是代理的IP配置nginx.conf配置文件增加不同的标记内容"></a>如何实现nginx代理的节点访问日志记录是真实访客IP，不是代理的IP配置nginx.conf配置文件增加不同的标记内容</h3><h3 id="如何在linux上重建初始化内存盘镜像文件？"><a href="#如何在linux上重建初始化内存盘镜像文件？" class="headerlink" title="如何在linux上重建初始化内存盘镜像文件？"></a>如何在linux上重建初始化内存盘镜像文件？</h3><h3 id="如何让shell就脚本得到来自终端的输入？"><a href="#如何让shell就脚本得到来自终端的输入？" class="headerlink" title="如何让shell就脚本得到来自终端的输入？"></a>如何让shell就脚本得到来自终端的输入？</h3><h3 id="web服务器的调优要点？web服务器负载架构？"><a href="#web服务器的调优要点？web服务器负载架构？" class="headerlink" title="web服务器的调优要点？web服务器负载架构？"></a>web服务器的调优要点？web服务器负载架构？</h3><h3 id="linux-优化的12个步骤"><a href="#linux-优化的12个步骤" class="headerlink" title="linux 优化的12个步骤"></a>linux 优化的12个步骤</h3><h3 id="linux-运行级别0-6含义"><a href="#linux-运行级别0-6含义" class="headerlink" title="linux 运行级别0-6含义"></a>linux 运行级别0-6含义</h3><ul><li>0：halt</li><li>1：single user mode，直接以管理员身份切入</li><li>2：multi user mode，no NFS</li><li>3：multi user mode，text</li><li>4：保留未定义</li><li>5：multi user mode，graphic mode</li><li>6：reboot</li></ul><h3 id="A文件，编写脚本判断A文件大于5的数字"><a href="#A文件，编写脚本判断A文件大于5的数字" class="headerlink" title="A文件，编写脚本判断A文件大于5的数字"></a>A文件，编写脚本判断A文件大于5的数字</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `sed s/[^0-9]//g ./A`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$i</span> -gt 5]; <span class="keyword">then</span> </span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `grep -oE <span class="string">&quot;[1-9][0-9]&#123;0,9&#125;&quot;</span> ./A`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$i</span> -gt 5 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span> &gt; 5&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span> &lt; 5&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="linux-服务中程序经常自动停止如何处理"><a href="#linux-服务中程序经常自动停止如何处理" class="headerlink" title="linux 服务中程序经常自动停止如何处理"></a>linux 服务中程序经常自动停止如何处理</h3><h3 id="nginx-如何配置多域名？防盗链"><a href="#nginx-如何配置多域名？防盗链" class="headerlink" title="nginx 如何配置多域名？防盗链"></a>nginx 如何配置多域名？防盗链</h3><h3 id="Apache、nginx、Lighttpd有哪些优缺点"><a href="#Apache、nginx、Lighttpd有哪些优缺点" class="headerlink" title="Apache、nginx、Lighttpd有哪些优缺点"></a>Apache、nginx、Lighttpd有哪些优缺点</h3><h3 id="什么是7层负载均衡和4层负载均衡，访问请求经过这两种负载均衡都做了那些处理"><a href="#什么是7层负载均衡和4层负载均衡，访问请求经过这两种负载均衡都做了那些处理" class="headerlink" title="什么是7层负载均衡和4层负载均衡，访问请求经过这两种负载均衡都做了那些处理"></a>什么是7层负载均衡和4层负载均衡，访问请求经过这两种负载均衡都做了那些处理</h3><h3 id="如何将标准输出与错误输出同时重定向到同一位置？"><a href="#如何将标准输出与错误输出同时重定向到同一位置？" class="headerlink" title="如何将标准输出与错误输出同时重定向到同一位置？"></a>如何将标准输出与错误输出同时重定向到同一位置？</h3><h3 id="TCP和UDP分别有什么优缺点？"><a href="#TCP和UDP分别有什么优缺点？" class="headerlink" title="TCP和UDP分别有什么优缺点？"></a>TCP和UDP分别有什么优缺点？</h3><ul><li><p><a href="https://blog.csdn.net/xiaobangkuaipao/article/details/76793702">参考</a>  </p></li><li><p><code>TCP面向连接</code>（如打电话要先拨号建立连接）；<code>UDP是无连接</code>的，即发送数据之前不需要建立连接；</p></li><li><p><code>TCP提供可靠的服务</code>，通过TCP连接传送的数据，无差错，不丢失，不重复，且按序到达；UDP尽最大努力交付，即不保证可靠交付；</p></li><li><p>UDP具有较好的实时性，工作效率比TCP高，适用于对高速传输和实时性有较高的通信或广播通信；</p></li><li><p>每一条TCP连接只能是点到点的；UDP支持一对一，一对多，多对一和多对多的交互通信；</p></li><li><p>TCP对系统资源要求较多，UDP对系统资源要求较少；</p></li></ul><h3 id="HTTP请求过程与原理？"><a href="#HTTP请求过程与原理？" class="headerlink" title="HTTP请求过程与原理？"></a>HTTP请求过程与原理？</h3><ul><li>首先作为发送端的客户端在<code>应用层（HTTP协议）</code>发出一个想看某个web也页面的HTTP请求；</li><li>接着，为了传输方便，在<code>传输层（TCP协议）</code>把从应用层处收到的数据（HTTP请求报文）进行分割，并在各个报文上打上标记序号及端口号后转发给网络层；</li><li>在<code>网络层（IP协议）</code>，增加作为通信目的MAC地址后转发给链路层。这样一来，发往网络的通信请求就准备齐全了。</li><li>接收端的服务器在链路层接收到数据，按序往上层发送，一直到应用层。当传输层到应用层才能算真正接收到由客户端发送来的HTTP请求；</li></ul><h3 id="影响mysql主从同步因素可能有哪些？"><a href="#影响mysql主从同步因素可能有哪些？" class="headerlink" title="影响mysql主从同步因素可能有哪些？"></a>影响mysql主从同步因素可能有哪些？</h3><h3 id="MySQL的主从复制过程是同步的还是异步的？MySQL主从同步原理是什么？MySQL是通过什么来保证主从数据的同步"><a href="#MySQL的主从复制过程是同步的还是异步的？MySQL主从同步原理是什么？MySQL是通过什么来保证主从数据的同步" class="headerlink" title="MySQL的主从复制过程是同步的还是异步的？MySQL主从同步原理是什么？MySQL是通过什么来保证主从数据的同步?"></a>MySQL的主从复制过程是同步的还是异步的？MySQL主从同步原理是什么？MySQL是通过什么来保证主从数据的同步?</h3><h3 id="存储引擎InnoDB和MyISAM有什么区别？"><a href="#存储引擎InnoDB和MyISAM有什么区别？" class="headerlink" title="存储引擎InnoDB和MyISAM有什么区别？"></a>存储引擎InnoDB和MyISAM有什么区别？</h3><h3 id="Nginx代理负载均衡的调度算法有哪些-具体实现时的现象是什么？"><a href="#Nginx代理负载均衡的调度算法有哪些-具体实现时的现象是什么？" class="headerlink" title="Nginx代理负载均衡的调度算法有哪些?具体实现时的现象是什么？"></a>Nginx代理负载均衡的调度算法有哪些?具体实现时的现象是什么？</h3><h3 id="为MySQL添加一个新用户"><a href="#为MySQL添加一个新用户" class="headerlink" title="为MySQL添加一个新用户"></a>为MySQL添加一个新用户</h3><ul><li><code>create user &#39;xy&#39;@&#39;%&#39; identified by &#39;123456&#39;;</code>  </li><li><code>insert into mysql.user(Host,User,Password) values(&#39;%&#39;,&#39;xy&#39;,&#39;password(&#39;123456&#39;)&#39;)</code> </li></ul><h3 id="MySQL数据库主从同步延迟解决方案"><a href="#MySQL数据库主从同步延迟解决方案" class="headerlink" title="MySQL数据库主从同步延迟解决方案"></a>MySQL数据库主从同步延迟解决方案</h3><h3 id="什么是冷热备份？各自优缺点？"><a href="#什么是冷热备份？各自优缺点？" class="headerlink" title="什么是冷热备份？各自优缺点？"></a>什么是冷热备份？各自优缺点？</h3><h3 id="实现一键还原前提条件？还原后有什么后果？"><a href="#实现一键还原前提条件？还原后有什么后果？" class="headerlink" title="实现一键还原前提条件？还原后有什么后果？"></a>实现一键还原前提条件？还原后有什么后果？</h3><h3 id="除DNS外，还可以通过什么方式进行域名解析，缺点？"><a href="#除DNS外，还可以通过什么方式进行域名解析，缺点？" class="headerlink" title="除DNS外，还可以通过什么方式进行域名解析，缺点？"></a>除DNS外，还可以通过什么方式进行域名解析，缺点？</h3><h3 id="DNS的空间结构是怎样的？"><a href="#DNS的空间结构是怎样的？" class="headerlink" title="DNS的空间结构是怎样的？"></a>DNS的空间结构是怎样的？</h3><h3 id="排障"><a href="#排障" class="headerlink" title="排障"></a>排障</h3><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤:"></a>步骤:</h4><ul><li>故障特征；复现故障</li><li>排除不可能原因</li><li>定位<ul><li>从简单问题入手</li><li>一次尝试一种方式</li></ul></li><li>备份源文件；借助工具<h4 id="例如"><a href="#例如" class="headerlink" title="例如"></a>例如</h4></li><li>MBR损坏<ul><li>借助别的主机修复</li><li>使用紧急模式<ul><li>boot.iso</li><li>使用完整的系统光盘，<code>boot: linux rescure /mnt/sysimage</code></li></ul></li></ul></li><li>grub文件丢失<ul><li>grub&gt; find (hd0, 0)/    # 找到内核</li><li>grub&gt; root (hd0, 0)</li><li>grub&gt; kernel /vmlinuz</li><li>grub&gt; initrd /initrd-</li><li>grub&gt; boot</li></ul></li><li>另外故障<ul><li>单用户模式编辑inittab文件</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Devops, linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> Devops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes</title>
      <link href="/posts/9acacb00.html"/>
      <url>/posts/9acacb00.html</url>
      
        <content type="html"><![CDATA[<p>2019-07-25-K8S</p><a id="more"></a><h1 id="Kubernetes"><a href="#Kubernetes" class="headerlink" title="Kubernetes"></a>Kubernetes</h1><h2 id="kubernetes-简介"><a href="#kubernetes-简介" class="headerlink" title="kubernetes 简介:"></a>kubernetes 简介:</h2><blockquote><p><strong>Kubernetes</strong>由Google团队发起并维护的基于Docker的开源容器集群管理系统, 目标是管理跨多个主机的容器, 它不仅支持常见的云平台, 而且支持内部数据中心.<br>核心概念是 <strong>Container Pod</strong>–&gt; 一个 Pod（容器集合）由<code>一组工作于同一物理工作节点的容器构成</code>, 组容器拥有相同的网络命名空间, IP以及存储配额, 也可以根据实际情况对每一个 Pod 进行端口映射.<br>kubernetes 组件构成:</p></blockquote><img src="/posts/9acacb00/k8s.jpg" class title="[kubernetes组件]"><h2 id="kubernetes-组件构成"><a href="#kubernetes-组件构成" class="headerlink" title="kubernetes 组件构成:"></a>kubernetes 组件构成:</h2><h3 id="Master组件"><a href="#Master组件" class="headerlink" title="Master组件:"></a>Master组件:</h3><ul><li><code>kube-apiserver</code>: <strong>Kubernetes API</strong>, <strong>集群统一入口</strong>, <strong>各组件协调者</strong>, 以HTTP API提供接口服务, <strong>所有对象资源的增删查改</strong>和监听操都交给APIServer处理后再提交给<strong>Etcd存储</strong>;</li><li><code>kube-scheduler</code>: （调度器）负责对资源进行调度, 分配未分发 Pod绑定到可用的Node节点上, 存储到etcd中;</li><li><code>kube-controller-manager</code>: 负责管理控制器, 一个资源对应一个控制器, CotrolerManager负责管理监控pod运行状态, 根据 etcd中的信息, 调用 node中的kubelet创建Pod; </li></ul><h3 id="Node组件"><a href="#Node组件" class="headerlink" title="Node组件:"></a>Node组件:</h3><ul><li><code>kubelet</code>: 是 Master在 Node节点上的 Agent, 负责具体的容器生命周期管理, 根据从数据库中获取的信息来管理容器, 并上报 pod运行状态等, 下载secret、获取容器与节点状态, kubelet将每个 Pod装换成一组容器;</li><li><code>kube-proxy</code>: 在 Node节点实现 Pod网络代理;</li><li><code>docker/rocker/rkt</code>: 运行容器</li></ul><h3 id="第三方服务-master-amp-amp-node"><a href="#第三方服务-master-amp-amp-node" class="headerlink" title="第三方服务(master &amp;&amp; node):"></a>第三方服务(master &amp;&amp; node):</h3><ul><li><code>etcd</code>: 用来保存集群所有状态的 Key/Value<code>存储系统</code>, 所有 Kubernetes组件会通过 API Server来跟 Etcd进行沟通从而保存或读取资源状态。如Pod、service等对象信息;</li></ul><h3 id="kubectl"><a href="#kubectl" class="headerlink" title="kubectl:"></a>kubectl:</h3><blockquote><p>kubectl 是 Kubernetes 自带的客户端, 可以用它来直接操作 Kubernetes</p></blockquote><table><thead><tr><th>command</th><th>mean</th></tr></thead><tbody><tr><td>get</td><td>显示一个或多个资源</td></tr><tr><td>describe</td><td>显示特定资源的详细信心</td></tr><tr><td>create</td><td>通过filename或stdin创建资源</td></tr><tr><td>update</td><td>通过filename或stdin更新资源</td></tr><tr><td>delete</td><td>删除资源</td></tr><tr><td>namespace</td><td>设置并查看当前的Kubernetes命名空间</td></tr><tr><td>log</td><td>在容器中打印容器的日志</td></tr><tr><td>rolling-update</td><td>执行给定ReplicationController的滚动更新</td></tr><tr><td>resize</td><td>为Replication Controller设置新大小</td></tr><tr><td>exec</td><td>在容器中执行命令</td></tr><tr><td>port-forward</td><td>将一个或多个本地端口转发到容器</td></tr><tr><td>proxy</td><td>运行代理到Kubernetes API服务器</td></tr><tr><td>run-container</td><td>在群集(cluster)上运行特定映像</td></tr><tr><td>stop</td><td>通过id或filename正常关闭资源</td></tr><tr><td>expose</td><td>获取replicated application并将其公开为Kubernetes Service</td></tr><tr><td>lable</td><td>更新资源标签</td></tr><tr><td>config</td><td>更改kuber相关配置文件</td></tr><tr><td>cluster-info</td><td>查看集群信息</td></tr><tr><td>api-version</td><td>打印可用的API版本</td></tr><tr><td>version</td><td>查看客户端和服务端版本信息</td></tr><tr><td>help</td><td>查看关于某个命令的帮助信息</td></tr></tbody></table><h3 id="Kubernetes-CNI网络最强对比：Flannel、Calico、Canal和Weave"><a href="#Kubernetes-CNI网络最强对比：Flannel、Calico、Canal和Weave" class="headerlink" title="Kubernetes CNI网络最强对比：Flannel、Calico、Canal和Weave"></a>Kubernetes CNI网络最强对比：Flannel、Calico、Canal和Weave</h3><ul><li><strong><a href="https://blog.csdn.net/RancherLabs/article/details/88885539">Kubernetes 网络</a></strong>  </li></ul><h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><ul><li><strong><a href="https://www.kubernetes.org.cn/5462.html">参考文章2</a></strong>    <h3 id="社区方案-优点是搭建简单、参考文档细致-缺点是太杂乱-升级不便"><a href="#社区方案-优点是搭建简单、参考文档细致-缺点是太杂乱-升级不便" class="headerlink" title="社区方案: 优点是搭建简单、参考文档细致; 缺点是太杂乱, 升级不便"></a>社区方案: <code>优点</code>是搭建简单、参考文档细致; <code>缺点</code>是太杂乱, 升级不便</h3><h3 id="官方推荐1-Kubeadm"><a href="#官方推荐1-Kubeadm" class="headerlink" title="官方推荐1: Kubeadm"></a>官方推荐1: <code>Kubeadm</code></h3></li><li><code>优点</code>: 简单、官方推荐、升级方便、支持高可用; <code>缺点</code>: 不易维护 <h3 id="官方推荐2-Binary"><a href="#官方推荐2-Binary" class="headerlink" title="官方推荐2: Binary"></a>官方推荐2: <code>Binary</code></h3></li><li><code>优点</code>: 易于维护、灵活、升级方便; <code>缺点</code>: 搭建太过复杂, 相关文档太少</li></ul><h2 id="Kubeadm"><a href="#Kubeadm" class="headerlink" title="Kubeadm:"></a>Kubeadm:</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备:"></a>环境准备:</h3><h4 id="1-硬件信息"><a href="#1-硬件信息" class="headerlink" title="1.硬件信息:"></a>1.硬件信息:</h4><table><thead><tr><th align="left">系统类型</th><th align="left">IP</th><th align="left">节点</th><th align="left">Hostname</th></tr></thead><tbody><tr><td align="left">CentOS7.2</td><td align="left">192.168.137.13</td><td align="left">master</td><td align="left">m1</td></tr><tr><td align="left">CentOS7.2</td><td align="left">192.168.137.14</td><td align="left">master</td><td align="left">m2</td></tr><tr><td align="left">CentOS7.2</td><td align="left">192.168.137.15</td><td align="left">master</td><td align="left">m3</td></tr><tr><td align="left">CentOS7.2</td><td align="left">192.168.137.30</td><td align="left">worker</td><td align="left">n1</td></tr><tr><td align="left">CentOS7.2</td><td align="left">192.168.137.32</td><td align="left">worker</td><td align="left">n2</td></tr></tbody></table><img src="/posts/9acacb00/k8s%E5%8D%95master.jpg" class title="[单-master]">  <h4 id="2-设置主机名hostname-每一台配置hosts文件域名解析"><a href="#2-设置主机名hostname-每一台配置hosts文件域名解析" class="headerlink" title="2.设置主机名hostname, 每一台配置hosts文件域名解析:  "></a>2.设置主机名<code>hostname</code>, 每一台配置<code>hosts</code>文件域名解析:  <div id="kubeadm"></div></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt;&gt;/etc/hosts   <span class="comment"># 追加</span></span><br><span class="line">  192.168.137.13 m1</span><br><span class="line">  192.168.137.13 m2</span><br><span class="line">  192.168.137.13 m3</span><br><span class="line">  192.168.137.30 n1</span><br><span class="line">  192.168.137.32 n2</span><br><span class="line">  EOF</span><br></pre></td></tr></table></figure><h4 id="3-关闭防火墙、SELinux及swap"><a href="#3-关闭防火墙、SELinux及swap" class="headerlink" title="3.关闭防火墙、SELinux及swap:"></a>3.关闭<code>防火墙</code>、<code>SELinux</code>及<code>swap</code>:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systmectl <span class="built_in">disable</span> firewalled</span><br><span class="line"></span><br><span class="line">iptables -F</span><br><span class="line">iptables -X &amp;&amp; iptables -F -t nat</span><br><span class="line">iptables -X -t nat &amp;&amp; iptables -P FORWARD ACCEPT</span><br><span class="line"></span><br><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">&quot;s/^SELINUX=enforcing/SELINUX=disabled/g&quot;</span> /etc/selinux/config</span><br><span class="line"></span><br><span class="line">swapoff -a</span><br><span class="line">sed -i <span class="string">&#x27;s/.*swap.*/#&amp;/&#x27;</span> /etc/fstab </span><br><span class="line">sed -i <span class="string">&#x27;/swap/s/^\(.*\)$/#\1/g&#x27;</span> /etc/fstab</span><br></pre></td></tr></table></figure><h4 id="4-配置内核参数，将桥接的IPv4流量传递到iptables的链"><a href="#4-配置内核参数，将桥接的IPv4流量传递到iptables的链" class="headerlink" title="4.配置内核参数，将桥接的IPv4流量传递到iptables的链"></a>4.配置内核参数，将桥接的IPv4流量传递到iptables的链</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; /etc/sysctl.d/k8s.conf   <span class="comment"># 多行输入</span></span><br><span class="line">  net.bridge.bridge-nf-call-iptables=1</span><br><span class="line">  net.bridge.bridge-nf-call-ip6tables=1</span><br><span class="line">  net.ipv4.ip_forward=1</span><br><span class="line">  vm.swappiness=0</span><br><span class="line">  vm.overcommit_memory=1</span><br><span class="line">  vm.panic_on_oom=0</span><br><span class="line">  fs.inotify.max_user_watches=89100</span><br><span class="line">  EOF</span><br><span class="line"></span><br><span class="line">sysctl --system</span><br><span class="line">sysctl -p /etc/sysctl.d/kubernetws.conf</span><br></pre></td></tr></table></figure><h4 id="5-配置国内yum源、Docker源及Kubernets源"><a href="#5-配置国内yum源、Docker源及Kubernets源" class="headerlink" title="5.配置国内yum源、Docker源及Kubernets源:"></a>5.配置国内yum源、Docker源及Kubernets源:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget</span><br><span class="line">mkdir /etc/yum.repos.d/bak &amp;&amp; mv /etc/yum.repos.d/*.repo /etc/yum.repos.d/bak</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.cloud.tencent.com/repo/centos7_base.repo</span><br><span class="line">wget http://mirrors.cloud.tencent.com/repo/epel-7.repo -O /etc/yum.repos.d/epel.repo </span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br><span class="line"></span><br><span class="line">wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repo.d/kubernetes.repo</span><br><span class="line">  [kubernetes]</span><br><span class="line">  name=Kubernetes</span><br><span class="line">  baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">  enabled=1</span><br><span class="line">  gpgcheck=1</span><br><span class="line">  repo_gpgcheck=1</span><br><span class="line">  gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">  EOF</span><br></pre></td></tr></table></figure><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装:"></a>软件安装:</h3><h4 id="6-所有节点安装docker、kuberadm、kubelet及kubectl"><a href="#6-所有节点安装docker、kuberadm、kubelet及kubectl" class="headerlink" title="6.所有节点安装docker、kuberadm、kubelet及kubectl"></a>6.所有节点安装docker、kuberadm、kubelet及kubectl</h4><ul><li>kubeadm: 部署集群用的命令</li><li>kubelet: 在集群中每台机器上都要运行的组件，负责管理pod、容器的生命周期  </li><li>kubectl: 集群管理工具(可选, 只要在控制集群的节点上安装即可)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">yum update </span><br><span class="line">yum install -y conntrack ipvsadm ipset jq sysstat curl iptables libseccomp</span><br><span class="line"></span><br><span class="line">yum remove -y docker* container-selinux</span><br><span class="line">yum install -y docker-ce-18.06.1.ce-3.el7</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/docker/daemon.json</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;graph&quot;</span>: <span class="string">&quot;/docker/data/path&quot;</span>,<span class="comment"># df -h 找空间比较大的, 默认 /var/lib/docker</span></span><br><span class="line">    <span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdrive=systemd&quot;</span>]// 默认 cgroups</span><br><span class="line">    <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://registry.docker-cn.com&quot;</span>] </span><br><span class="line">  &#125;</span><br><span class="line">  EOF</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> docker &amp;&amp; systemctl start docker</span><br><span class="line">docker -version</span><br><span class="line">yum list kubeadm --showduplicates | sort -r  <span class="comment"># 找到要安装的版本号</span></span><br><span class="line">yum install -y kubelet-1.13.3 kubeadm-1.13.3 kubectl-1.13.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置kubelet的cgroupdriver (kubelet的cgroupdriver默认为systemd, 如果上面没有设置docker的exec-opts为systemd, 这里就需要将kubelet的设置为cgroupfs)</span></span><br><span class="line">sed -i <span class="string">&quot;s/cgroup-driver=systemd/cgroup-driver=cgroupfs/g&quot;</span> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf </span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet<span class="comment"># 设置开机启动暂时不启动</span></span><br></pre></td></tr></table></figure><h3 id="部署配置"><a href="#部署配置" class="headerlink" title="部署配置:"></a>部署配置:</h3><h4 id="7-下载参考配置文件"><a href="#7-下载参考配置文件" class="headerlink" title="7.下载参考配置文件"></a>7.下载参考配置文件</h4><ul><li><strong><a href="https://www.jianshu.com/p/74a6673ff78b">关于镜像下载问题</a></strong>   </li><li><strong><a href="https://github.com/HikoQiu/kubeadm-install-k8s">kubeadm-config.yaml配置参考</a></strong>   </li><li><strong><a href="https://github.com/anjia0532/gcr.io_mirror/tree/master/google-containers">gcr.io_mirror</a></strong>  </li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 下载镜像</span></span><br><span class="line">images=(kube-proxy-amd64:v1.13.3 kube-apiserver-amd64:v1.13.3 kube-controller-manager-amd64:v1.13.3 kube-scheduler-amd64:v1.13.3 pause:3.1 etcd-amd64:3.2.18 coredns:1.1.3)</span><br><span class="line"><span class="keyword">for</span> imageName <span class="keyword">in</span> <span class="variable">$&#123;images[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    docker pull anjia0532/google-containers.<span class="variable">$imageName</span></span><br><span class="line">    docker tag anjia0532/google-containers.<span class="variable">$imageName</span> k8s.gcr.io/<span class="variable">$imageName</span></span><br><span class="line">    docker rmi anjia0532/google-containers.<span class="variable">$imageName</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">./k8s-docker-images.sh</span><br></pre></td></tr></table></figure><h4 id="8-部署mater节"><a href="#8-部署mater节" class="headerlink" title="8.部署mater节"></a>8.部署mater节</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init \</span><br><span class="line">  --kubernetes-version&#x3D;1.13.3 \</span><br><span class="line">  # 单master: api server地址是master本机IP地址</span><br><span class="line">  --apiserver-advertise-address&#x3D;192.168.137.13 \ </span><br><span class="line">  --image-repository registry.aliyuncs.com&#x2F;google_containers \</span><br><span class="line">  --service-cidr&#x3D;10.1.0.0&#x2F;16 \   # 负载均衡虚拟IP</span><br><span class="line">  --pod-network-cidr&#x3D;10.244.0.0&#x2F;16 </span><br><span class="line"></span><br><span class="line">kubeadm join :6443 --token kekvgu.nw1n76h84f4camj6 --discovery-token-ca-cert-hash sha256:4ee74205227c78ca62f2d641635afa4d50e6634acfaa8291f28582c7e3b0e30e</span><br><span class="line"></span><br><span class="line">ls &#x2F;etc&#x2F;kubernetes&#x2F;pki # 证书路径</span><br><span class="line">mkdir -p $HOME&#x2F;.kube</span><br><span class="line">sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class="line">  kubectl get node</span><br><span class="line">  NAMESTATUSROLESAGEVERSION</span><br><span class="line">  m1NotReadymaster5m46sv1.13.3</span><br></pre></td></tr></table></figure><h4 id="9-部署POD网络-部署Flanne-网络插件"><a href="#9-部署POD网络-部署Flanne-网络插件" class="headerlink" title="9.部署POD网络, 部署Flanne 网络插件"></a>9.部署POD网络, 部署Flanne 网络插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml</span><br><span class="line">kubectl get pods -n kube-ststem</span><br></pre></td></tr></table></figure><h4 id="10-加入Kubernetes-Node-即向集群添加新节点"><a href="#10-加入Kubernetes-Node-即向集群添加新节点" class="headerlink" title="10.加入Kubernetes Node, 即向集群添加新节点"></a>10.加入Kubernetes Node, 即向集群添加新节点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join --token &lt;master-ip&gt;:&lt;master-port&gt; --discovery-token-ca-cert-hash sha256:code</span><br><span class="line"># 在所有 node节点 上执行如下命令:</span><br><span class="line">kubeadm join 192.168.137.13:6443 --token kekvgu.nw1n76h84f4camj6 --discovery-token-ca-cert-hash sha256:4ee74205227c78ca62f2d641635afa4d50e6634acfaa8291f28582c7e3b0e30e</span><br><span class="line"></span><br><span class="line"># master 查看node 状态</span><br><span class="line">  kubectl get node</span><br><span class="line">  NAMESTATUSROLESAGEVERSION</span><br><span class="line">  m1Readymaster15mv1.13.3</span><br><span class="line">  n1Ready&lt;none&gt;4sv1.13.3</span><br><span class="line">  n2Ready&lt;none&gt;88sv1.13.3</span><br><span class="line"></span><br><span class="line">kubectl get pods -n kube-system</span><br><span class="line">kubectl delete pods kube-flannel-ds-amd64-6jf7t -n kube-system</span><br></pre></td></tr></table></figure><h4 id="11-创建Pod以验证集群是否正常"><a href="#11-创建Pod以验证集群是否正常" class="headerlink" title="11.创建Pod以验证集群是否正常"></a>11.创建Pod以验证集群是否正常</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">kubectl create deployment nginx --image=nginx</span><br><span class="line">kubectl get pods</span><br><span class="line">  NAMEREADYSTATUSRESTARTSAGE</span><br><span class="line">  nginx-5c7588df-fhhb90/1ContainerCreating028s</span><br><span class="line">  kubectl expose deployment nginx --port=80 --<span class="built_in">type</span>=NodePort</span><br><span class="line"></span><br><span class="line">  kubectl get pods,svc -o wide<span class="comment"># 查看详细信息  </span></span><br><span class="line"><span class="comment"># 测试: 192.168.137.30:80</span></span><br></pre></td></tr></table></figure><h4 id="12-部署Dashboard-master节点"><a href="#12-部署Dashboard-master节点" class="headerlink" title="12.部署Dashboard(master节点)"></a>12.部署Dashboard(master节点)</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">wget</span> <span class="string">https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vim 手动修改yaml文件Dashboard 的获取地址</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">loveone/kubernetes-dashboard-amd64:v1.10.1</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">spec:</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">         <span class="attr">targetPort:</span> <span class="number">8443</span></span><br><span class="line">         <span class="comment"># nodePort: 30001定义外部访问端口</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line"></span><br><span class="line"><span class="string">docker</span> <span class="string">pull</span> <span class="string">loveone/kubernetes-dashboard-amd64:v1.10.1</span> <span class="comment"># 也可以先下载镜像</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">apply</span> <span class="string">-f</span> <span class="string">kubernetes-dashboard.yaml</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">kubernetes-dashboard.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看服务状态</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">get</span> <span class="string">deployment</span> <span class="string">kubernetes-dashboard</span> <span class="string">-n</span> <span class="string">kube-system</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">get</span> <span class="string">pods</span> <span class="string">-n</span> <span class="string">kube-system</span> <span class="string">-o</span> <span class="string">wide</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">get</span> <span class="string">services</span> <span class="string">-n</span> <span class="string">kube-system</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">get</span> <span class="string">pods,svc</span> <span class="string">-n</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="string">NAME</span><span class="string">TYPE</span><span class="string">CLUSTER_IP</span><span class="string">EXTERNAL_IP</span><span class="string">PORT(S)</span><span class="string">AGE</span></span><br><span class="line">  <span class="string">service/kube-dns</span><span class="string">ClusterIP</span><span class="number">10.1</span><span class="number">.0</span><span class="number">.10</span><span class="string">&lt;none&gt;</span><span class="number">53</span><span class="string">/UDP,53/TCP</span><span class="string">27m</span></span><br><span class="line">  <span class="string">service/kubernetes-dashboard</span><span class="string">NodePort</span><span class="number">10.1</span><span class="number">.225</span><span class="number">.37</span><span class="string">&lt;none&gt;</span><span class="number">443</span><span class="string">:32569/TCP</span><span class="string">53s</span></span><br><span class="line"></span><br><span class="line"><span class="string">nestat</span> <span class="string">-anltp</span> <span class="string">|grep</span> <span class="number">8443</span></span><br><span class="line"><span class="comment"># 测试: https://192.168.137.13:32569</span></span><br></pre></td></tr></table></figure><h4 id="13-登录认证"><a href="#13-登录认证" class="headerlink" title="13.登录认证"></a>13.登录认证</h4><img src="/posts/9acacb00/dashboard.jpg" class title="[dashboard认证界面]"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看访问Dashboard的认证令牌</span></span><br><span class="line">kubectl create serviceaccount dashboard-admin -n kube-system</span><br><span class="line">kubectl create clusterrolebinding  dashboard-admin --clusterrole=cluster-admin --serviceaccount=kube-system:dashboard-admin</span><br><span class="line"></span><br><span class="line">kubectl get secret -n kube-system</span><br><span class="line">  NAMETYPEDATAAGE</span><br><span class="line">  dashboard-admin-token-w6rtnkuberbetes.io/service-account-tokendefault-token-82hvk360s</span><br><span class="line">kubectl describe secrets dashboard-admin-token-w6rtn -n kube-system</span><br><span class="line">kubectl describe secrets -n kube-system $(kubectl -n kube-system get secret | awk <span class="string">&#x27;/dashboard-admin/&#123;print $1&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure><img src="/posts/9acacb00/dashboard-%E9%A1%B5%E9%9D%A2.jpg" class title="[dashboard页面]"><h2 id="二进制部署"><a href="#二进制部署" class="headerlink" title="二进制部署:"></a>二进制部署:</h2>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins</title>
      <link href="/posts/9a7f448e.html"/>
      <url>/posts/9a7f448e.html</url>
      
        <content type="html"><![CDATA[<p>2019-07-23-Jenkins</p><a id="more"></a><h1 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h1><h2 id="Jenkin是什么"><a href="#Jenkin是什么" class="headerlink" title="Jenkin是什么?"></a>Jenkin是什么?</h2><blockquote><p>Jenkins是开源<strong>CI&amp;CD</strong>软件领导者, 提供超过1000个插件来支持构建, 部署, 自动化, 满足任何项目的需要, Jenkins是一个独立的基于<strong>Java的程序</strong>, 可以立即运行, 包含Windows，Mac OS X和其他类Unix操作系统.</p></blockquote><h2 id="Jenkins的特点"><a href="#Jenkins的特点" class="headerlink" title="Jenkins的特点:"></a>Jenkins的特点:</h2><blockquote><p><strong>持续集成和持续交付</strong>作为一个可扩展的自动化服务器, Jenkins可以用作简单的CI服务器, 或者变成任何项目的连续交付中心.<br>Jenkins可以通过其网页界面<strong>轻松设置和配置</strong>, 其中包括即时错误检查和内置帮助.<br>通过更新中心中的1000多个<strong>插件</strong>, Jenkins集成了持续集成和持续交付工具链中几乎所有的工具.<br>Jenkins 可以通过其插件架构进行<strong>扩展</strong>, 从而为 Jenkins 可以做的事提供几乎无限的可能性.<br>Jenkins可以轻松地在<strong>多台机器</strong>上分配工作，帮助更快速地<strong>跨多个平台</strong>推动构建，测试和部署.</p></blockquote><h2 id="Jenkins部署"><a href="#Jenkins部署" class="headerlink" title="Jenkins部署:"></a>Jenkins部署:</h2><h3 id="选用Ubuntu进行部署"><a href="#选用Ubuntu进行部署" class="headerlink" title="选用Ubuntu进行部署"></a>选用Ubuntu进行部署</h3><ul><li><strong>建议所有操作在root下部署</strong></li><li>关于Ubuntu设置永久DNS的方法:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim &#x2F;etc&#x2F;network&#x2F;interfaces     # dns-nameserver 192.168.137.2</span><br><span class="line">$ vim &#x2F;etc&#x2F;systemd&#x2F;resolved.conf # [Resolve] DNS&#x3D;DNS </span><br></pre></td></tr></table></figure></li></ul><h3 id="Ubuntu的相关配置"><a href="#Ubuntu的相关配置" class="headerlink" title="Ubuntu的相关配置:"></a>Ubuntu的相关配置:</h3><blockquote><p>192.168.37.10: jenkins/SVN; 192.168.37.12: 测试机; 192.168.37.14: 生产环境</p></blockquote><h4 id="下载git"><a href="#下载git" class="headerlink" title="下载git"></a>下载git</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install libcurl4-gnutls-dev libexpat1-dev gettext \</span><br><span class="line">  libz-dev libssl-dev</span><br><span class="line"></span><br><span class="line">$ wget -O v2.22.0.tar.gz https://github.com/git/git/archive/v2.22.0.tar.gz</span><br><span class="line"></span><br><span class="line">$ tar -xzvf git-v2.22.0.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> git-1.7.2.2</span><br><span class="line">$ make prefix=/usr/<span class="built_in">local</span>/git all</span><br><span class="line"></span><br><span class="line">$ sudo make prefix=/usr/<span class="built_in">local</span>/git install</span><br><span class="line">$ vim /etc/profie</span><br><span class="line">PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/bin</span><br><span class="line">$ <span class="built_in">source</span> /etc/profile</span><br><span class="line">$ <span class="built_in">export</span> PATH</span><br></pre></td></tr></table></figure><h4 id="搭建SVN-svn-IP-repos-192-168-37-10"><a href="#搭建SVN-svn-IP-repos-192-168-37-10" class="headerlink" title="搭建SVN(svn://IP/repos) 192.168.37.10"></a>搭建SVN(svn://IP/repos) 192.168.37.10</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install subversion</span><br><span class="line">$ mkdir /home/svn</span><br><span class="line">$ svnadmin create /home/svn/repos</span><br><span class="line">$ <span class="built_in">cd</span> /home/svn/repos</span><br><span class="line"></span><br><span class="line">$ vim svnserve.conf</span><br><span class="line">    anon-access = none</span><br><span class="line">    auth-access = write</span><br><span class="line">    password-db = passwd</span><br><span class="line">    authz-db = authz</span><br><span class="line">$ vim passwd</span><br><span class="line">    [users]</span><br><span class="line">    <span class="built_in">test</span> = 123456</span><br><span class="line">$ vim authz</span><br><span class="line">    [repos:/]</span><br><span class="line">    <span class="built_in">test</span> = rw</span><br><span class="line">    * =</span><br><span class="line"></span><br><span class="line">$ svnserve -d -r /home/svn</span><br></pre></td></tr></table></figure><h4 id="安装Java-192-168-37-10"><a href="#安装Java-192-168-37-10" class="headerlink" title="安装Java 192.168.37.10"></a>安装Java 192.168.37.10</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir /usr/<span class="built_in">local</span>/java/jdk1.8</span><br><span class="line">$ tar -xzvf jdk-8u221-linux-x64.tar.gz</span><br><span class="line">$ mv jdk1.8.0_221/ /usr/<span class="built_in">local</span>/java/jdk1.8</span><br><span class="line">$ vim ~/.bashrc</span><br><span class="line">    JAVA_HOME=/usr/<span class="built_in">local</span>/jdk1.8  </span><br><span class="line">    CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line">    JAVA_JRE=<span class="variable">$JAVA_HOME</span>/jre</span><br><span class="line">    MAVEN_HOME=/usr/<span class="built_in">local</span>/maven3.6.1</span><br><span class="line">    PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$MAVEN_HOME</span>/bin</span><br><span class="line">    <span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$MAVEN_HOME</span>/bin</span><br><span class="line">$ <span class="built_in">source</span> ~/.bashrc</span><br><span class="line">$ java -verison</span><br></pre></td></tr></table></figure><h4 id="安装apache-tomcat-java-jar-jenkins-war-192-168-37-10"><a href="#安装apache-tomcat-java-jar-jenkins-war-192-168-37-10" class="headerlink" title="安装apache-tomcat(java -jar jenkins.war) 192.168.37.10"></a>安装apache-tomcat(java -jar jenkins.war) 192.168.37.10</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://mirror.bit.edu.cn/apache/tomcat/tomcat-8/v8.5.43/bin/apache-tomcat-8.5.43.tar.gz</span><br><span class="line">$ tar -xzvf apache-tomcat-8.5.43.tar.gz</span><br><span class="line">$ mv apache-tomcat-8.5.43 /usr/<span class="built_in">local</span>/apache-tomcat-8</span><br><span class="line">$ chmod 755 -R /usr/<span class="built_in">local</span>/apache-tomcat-8.5.43</span><br><span class="line">$ unzip -d jenkins jenkins.war</span><br><span class="line">$ mv jenkins /usr/<span class="built_in">local</span>/apache-tomcat-8/webapps</span><br><span class="line"></span><br><span class="line">浏览器访问Jenkin: IP:8080/jenkins</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/apache-tomcat-8.5.43/bin/startup.sh</span><br><span class="line">$ tail -f ../logs/catalina.out</span><br><span class="line">$ cat /root/.jenkins/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure><h4 id="搭建私有镜像仓库与构建LNMP基础镜像"><a href="#搭建私有镜像仓库与构建LNMP基础镜像" class="headerlink" title="搭建私有镜像仓库与构建LNMP基础镜像"></a>搭建私有镜像仓库与构建LNMP基础镜像</h4><ul><li><p>创建nginx php镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -v /opt/registry:/var/lib/registry -p 5000:5000 --restart=always --name registry registry</span><br><span class="line"></span><br><span class="line">vim /etc/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">      <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;http://f1361db2.m.daocloud.io&quot;</span>],</span><br><span class="line">      <span class="string">&quot;insecure-registries&quot;</span>: [<span class="string">&quot;192.168.37.10:5000&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">FROM centsos:6</span><br><span class="line">MAINTAINER anyu967</span><br><span class="line">RUN yum install -y gcc gcc-c++ make openssl-devel pcre-devel &amp;&amp; \</span><br><span class="line">yumclaean all </span><br><span class="line">ADD nginx-1.12.tar.gz /tmp</span><br><span class="line">RUN <span class="built_in">cd</span> /tmp/nginx-1.12 &amp;&amp; ./configure --prefix=/usr/<span class="built_in">local</span>/nginx &amp;&amp; make -j 2 &amp;&amp; \</span><br><span class="line">make install &amp;&amp; rm -rf /tmp/nginx-1.12.1</span><br><span class="line">COPY nginx.cong /usr/<span class="built_in">local</span>/nginx/conf</span><br><span class="line">EXPOSED 80</span><br><span class="line">CMD [<span class="string">&quot;/usr/local/nginx/sbin/nginx&quot;</span>, <span class="string">&quot;-g&quot;</span>, <span class="string">&quot;daemon off:&quot;</span>]</span><br><span class="line"></span><br><span class="line">FROM centsos:6</span><br><span class="line">MAINTAINER anyu967</span><br><span class="line">RUN yum install -y gcc gcc-c++ gd-devel libxml2-devel \</span><br><span class="line">libcurl-devel libjpeg-devel libpng-devel openssl-devel &amp;&amp; \ </span><br><span class="line">yum claean all </span><br><span class="line">ADD php-5.6.31.tar.gz /tmp</span><br><span class="line">RUN <span class="built_in">cd</span> /tmp/php-5.6.31 &amp;&amp; \</span><br><span class="line">    ./configure --prefix=/usr/<span class="built_in">local</span>/php \</span><br><span class="line">    --with-config-file-path=/usr/<span class="built_in">local</span>/php/etc \</span><br><span class="line">    --with-mysql --with-mysqli \</span><br><span class="line">    --with--openssl --with-zlib --with-curl --with-gd \</span><br><span class="line">    --with--jpeg-dir --with-png-dir --with-iconv \</span><br><span class="line">    --<span class="built_in">enable</span>-fpm --<span class="built_in">enable</span>-zip --<span class="built_in">enable</span>-mbstring &amp;&amp; \</span><br><span class="line">    make -j 4 &amp;&amp; make install &amp;&amp; \</span><br><span class="line">    cp /usr/<span class="built_in">local</span>/etc/php-fpm.conf.default /usr/<span class="built_in">local</span>/php/etc/php-fpm.cong &amp;&amp; \</span><br><span class="line">    sed -i <span class="string">&quot;s/127.0.0.1/0.0.0.0/&quot;</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf &amp;&amp; \</span><br><span class="line">    cp ./sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm &amp;&amp; \</span><br><span class="line">    chmod +x /etc/init.d/php-fpm &amp;&amp; \</span><br><span class="line">rm -rf /tmp/php-5.6.31</span><br><span class="line">COPY php.ini /usr/<span class="built_in">local</span>/php/etc</span><br><span class="line">EXPOSED 9000</span><br><span class="line">CMD /etc/init.d/php-fpm start &amp;&amp; tail -F /var/<span class="built_in">log</span>/messages</span><br><span class="line"></span><br><span class="line">docker build -t 192.168.37.10:5000/lnmp-php:base .</span><br><span class="line">docker push 192.168.37.10:5000/lnmp-php:base</span><br><span class="line"></span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">      root           html;</span><br><span class="line">      fastcgi_pass   php-cgi:9000;</span><br><span class="line">      fastcgi_param  SCRIPT_FILENAME scripts<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">      include        fastcgi_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建文件-测试环境的配置"><a href="#创建文件-测试环境的配置" class="headerlink" title="创建文件(测试环境的配置)"></a>创建文件(测试环境的配置)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">|-- /home/anyue/lnmp</span><br><span class="line">|-- Dockerfile</span><br><span class="line">|   |-- nginx</span><br><span class="line">|   |-- php</span><br><span class="line">|-- config</span><br><span class="line">|   |-- prod.html</span><br><span class="line">|   |-- prod.tar.gz</span><br><span class="line">|   |-- test.html</span><br><span class="line">|   |-- test.tar.gz</span><br><span class="line">|-- deploy.sh</span><br><span class="line">|-- docker-compose.yml</span><br><span class="line">|-- mysql_data</span><br><span class="line">|-- push_images.sh</span><br><span class="line">|-- revision.svn</span><br><span class="line">|-- wwwroot</span><br></pre></td></tr></table></figure></li><li><p>deploy.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">REVISION=<span class="variable">$1</span></span><br><span class="line">WORK_ENV=<span class="built_in">test</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$REVISION</span> &gt;./revision.svn</span><br><span class="line"><span class="built_in">cd</span> Dockerfile</span><br><span class="line">docker build --build-arg work_env=<span class="variable">$WORK_ENV</span> -t lnmp-nginx:laste -f nginx ../  <span class="comment"># tag</span></span><br><span class="line">docker build --build-arg work_env=<span class="variable">$WORK_ENV</span> -t lnmp-php:laste -f php ../</span><br><span class="line">docker-compose down</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></li><li><p>Docker-compose.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">service:</span></span><br><span class="line">  <span class="attr">nginx:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">lnmp_nginx:latest</span></span><br><span class="line">      <span class="attr">ports:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br><span class="line">      <span class="attr">links:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">php:</span> <span class="string">php-cgi</span></span><br><span class="line">      <span class="attr">depends_on:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">php</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">php:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">lnmp-php:latest</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">mysql:</span> <span class="string">mysql-db</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.6</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3306</span><span class="string">:3306</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysql_data:/var/lib/mysql</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">--character-set-server=utf8</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="number">123456</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">MYSQL_USER:</span> <span class="string">user</span></span><br><span class="line">      <span class="attr">MYSQL_PASSWORD:</span> <span class="string">user123</span>  </span><br></pre></td></tr></table></figure></li><li><p>nginx &amp;&amp; php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">FROM 192.168.37.10:5000/lnmp-nginx:base</span><br><span class="line">MAINTAINER anyue</span><br><span class="line">ARG work_env</span><br><span class="line">ADD wwwroot /usr/<span class="built_in">local</span>/nginx/html</span><br><span class="line">ADD config/<span class="variable">$&#123;work_env&#125;</span>.tar.gz /usr/<span class="built_in">local</span>/nginx/html</span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line">FROM 192.168.37.10:5000/lnmp-php:base</span><br><span class="line">MAINTAINER anyue</span><br><span class="line">ARG work_env</span><br><span class="line">ADD wwwroot /usr/<span class="built_in">local</span>/nginx/html</span><br><span class="line">ADD config/<span class="variable">$&#123;work_env&#125;</span>.tar.gz /usr/<span class="built_in">local</span>/nginx/html</span><br><span class="line">EXPOSE 9000</span><br></pre></td></tr></table></figure></li><li><p>push_image.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">IMAGE_REPOS=192.168.37.10:5000</span><br><span class="line">REVISION=$(cat revision.svn)</span><br><span class="line">WORK_ENV=prod</span><br><span class="line"><span class="built_in">cd</span> Dockerfile</span><br><span class="line">docker build --build-arg work_env=<span class="variable">$WORK_ENV</span> -t <span class="variable">$IMAGE_REPOS</span>/lnmp-nginx:<span class="variable">$REVISION</span> -f nginx ../</span><br><span class="line">docker build --build-arg work_env=<span class="variable">$WORK_ENV</span> -t <span class="variable">$IMAGE_REPOS</span>/lnmp-php:<span class="variable">$REVISION</span> -f php ../</span><br><span class="line">docker push <span class="variable">$IMAGE_REPOS</span>/lnmp-nginx:<span class="variable">$REVISION</span></span><br><span class="line">docker push <span class="variable">$IMAGE_REPOS</span>/lnmp-php:<span class="variable">$REVISION</span></span><br></pre></td></tr></table></figure><h4 id="创建文件-生产环境的配置"><a href="#创建文件-生产环境的配置" class="headerlink" title="创建文件(生产环境的配置)"></a>创建文件(生产环境的配置)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|-- deploy.sh</span><br><span class="line">|-- docker-compose.yml</span><br><span class="line">|-- revision.svn</span><br><span class="line">|-- roll-back.sh</span><br></pre></td></tr></table></figure></li><li><p>deploy.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">REVISION=revison.svn</span><br><span class="line">IMAGE_REPOS=http://192.168.37.10:5000/v2</span><br><span class="line">LATEST_REVISION=$(curl <span class="variable">$IMAGE_REPOS</span>/lnmp-nginx/tags/list |grep -Po <span class="string">&#x27;(?&lt;=&quot;)\d+(?=&quot;)&#x27;</span> |awk <span class="string">&#x27;BEGIN&#123;max=0&#125; &#123;for(i=0;i&lt;=NF;i++) if($i&gt;max) max=$i&#125;END&#123;print max&#125;&#x27;</span>)</span><br><span class="line">sed -i -r <span class="string">&#x27;/:5000/s/[0-9]+$/&#x27;</span><span class="variable">$LATEST_REVISION</span><span class="string">&#x27;/&#x27;</span> docker-compose.yml</span><br><span class="line"><span class="keyword">if</span> ! grep <span class="string">&quot;^<span class="variable">$LATEST_REVISION</span> &quot;</span> <span class="variable">$REVISION</span> &amp;&gt;/dev/null; <span class="keyword">then</span></span><br><span class="line">      sed -i -r <span class="string">&#x27;$s/([0-9]+).*/\1 Previous/&#x27;</span> <span class="variable">$REVISION</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$LATEST_REVISION</span> Current&quot;</span> &gt;&gt;<span class="variable">$REVISION</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">docker-compose down</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></li><li><p>docker-compose.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  nginx:</span><br><span class="line">    image: 192.168.37.10:5000/lnmp-nginx:12</span><br><span class="line">    ports:</span><br><span class="line">      - 80:80</span><br><span class="line">    links:</span><br><span class="line">      - php: php-cgi</span><br><span class="line">    depends_on:</span><br><span class="line">      - php</span><br><span class="line">  php:</span><br><span class="line">    image: 192.168.37.10:5000/lnmp-php:12</span><br><span class="line">    links:</span><br><span class="line">      - mysql: mysql-db</span><br><span class="line">  mysql:</span><br><span class="line">    image: mysql:5.6</span><br><span class="line">    ports:</span><br><span class="line">      - 3306:3306</span><br><span class="line">    volumes:</span><br><span class="line">      - ./mysql_data:/var/lib/mysql</span><br><span class="line">    <span class="built_in">command</span>: --character-set-server=utf8</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: 123456</span><br><span class="line">      MYSQL_DATABASE: wordpress</span><br><span class="line">      MYSQL_USER: user</span><br><span class="line">      MYSQL_PASSWORD: user123  </span><br></pre></td></tr></table></figure></li><li><p>roll-back.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">PRE_REVISION=$(awk <span class="string">&#x27;Previous/&#123;revision=$1&#125; END&#123;print revision&#125;&#x27;</span> revision.svn)</span><br><span class="line">sed -i -r <span class="string">&#x27;/:5000/s/[0-9]+$/&#x27;</span><span class="variable">$PRE_REVISION</span><span class="string">&#x27;/&#x27;</span> docker-compose.yml</span><br><span class="line">docker-compose down</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h2 id="Jenkins配置"><a href="#Jenkins配置" class="headerlink" title="Jenkins配置"></a>Jenkins配置</h2><table><thead><tr><th align="left">Manage Jenkin</th><th align="left">desc</th></tr></thead><tbody><tr><td align="left">Configure System</td><td align="left">Configure global setting and paths</td></tr><tr><td align="left">Configure Global Security</td><td align="left">Secure Jenkins; define who is allowed access/use the system</td></tr><tr><td align="left">Global Tool Configuration</td><td align="left">Configure tools, their location and automatic installers</td></tr><tr><td align="left">Manager Users</td><td align="left">Create/delete/modify users that can log in to this Jenkins</td></tr></tbody></table></li></ul><h2 id="解决乱码"><a href="#解决乱码" class="headerlink" title="解决乱码"></a>解决乱码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /opt/tomcat8/bin/catalina.sh   <span class="comment"># 解决乱码: export LANG=zh_CN.UTF-8</span></span><br></pre></td></tr></table></figure><h2 id="Jenkins使用"><a href="#Jenkins使用" class="headerlink" title="Jenkins使用"></a>Jenkins使用</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><img src="/posts/9a7f448e/CI.png" class title="[jenkins_CI]"> <h3 id="Configure-System-配置SSH"><a href="#Configure-System-配置SSH" class="headerlink" title="Configure System(配置SSH)"></a>Configure System(配置SSH)</h3><img src="/posts/9a7f448e/Configure_System.png" class title="[Configure_System]">  <h3 id="Global-Tool-Configuration-配置相关工具路径"><a href="#Global-Tool-Configuration-配置相关工具路径" class="headerlink" title="Global Tool Configuration(配置相关工具路径)"></a>Global Tool Configuration(配置相关工具路径)</h3><img src="/posts/9a7f448e/Global_Tool_Configuration.png" class title="[Global_Tool_Configuration]">  ]]></content>
      
      
      <categories>
          
          <category> CICD </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jenkins </tag>
            
            <tag> Linux </tag>
            
            <tag> CI </tag>
            
            <tag> CD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dockerFile</title>
      <link href="/posts/b94b563a.html"/>
      <url>/posts/b94b563a.html</url>
      
        <content type="html"><![CDATA[<p>2019-07-16-DockFile</p><a id="more"></a><h3 id="DockerFile-语法"><a href="#DockerFile-语法" class="headerlink" title="DockerFile 语法"></a>DockerFile 语法</h3><h4 id="docker-practice"><a href="#docker-practice" class="headerlink" title="docker_practice"></a><a href="https://github.com/yeasy/docker_practice">docker_practice</a></h4><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --rm -p 4000:80 dockerpracticesig/docker_practice</span><br><span class="line"><span class="comment"># localhost:4000</span></span><br></pre></td></tr></table></figure><h4 id="FROM-–-指定基础image"><a href="#FROM-–-指定基础image" class="headerlink" title="FROM – 指定基础image"></a>FROM – 指定基础image</h4><ul><li>构建指令，必须指定且需要在 DockerFile 其他指令的前面，后续指令依赖指定的 image，FROM指定的基础 image 既可以是本地 Repo 也可以是官方的远程仓<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">FROM</span> <span class="string">centos:7.2</span></span><br><span class="line"><span class="string">FROM</span> <span class="string">centos</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="MAINTAINER-–指定镜像创建者信息"><a href="#MAINTAINER-–指定镜像创建者信息" class="headerlink" title="MAINTAINER –指定镜像创建者信息"></a>MAINTAINER –指定镜像创建者信息</h4><ul><li>构建指令，用于将 image 的制作者相关信息写入到 image 中，当执行<code>docker inspect</code>，输出中有相应的字段记录该信息<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MAINTAINER username &quot;username@xxx.com&quot;</span><br></pre></td></tr></table></figure></li></ul><h4 id="RUN-–安装软件用"><a href="#RUN-–安装软件用" class="headerlink" title="RUN –安装软件用"></a>RUN –安装软件用</h4><ul><li>构建指令，RUN 可以运行任何被基础 image 支持的命令，若基础 image 为 centos，则软件管理部分只能使用 centos 的包管理命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RUN cd &#x2F;tmp &amp;&amp; curl -L &#39;http:&#x2F;&#x2F;archive.apache.org.dist&#x2F;tomcat&#x2F;tomcat-7&#x2F;v7.0.8&#x2F;bin&#x2F;apache-tomcat-7.0.8.tar.gz&#39; | tar -xz</span><br><span class="line">RUN [ &quot;&#x2F;bin&#x2F;bash&quot;, &quot;-c&quot;, &quot;echo helllo&quot; ]</span><br></pre></td></tr></table></figure></li></ul><h4 id="CMD-–设置-container-启动时执行的操作-覆盖"><a href="#CMD-–设置-container-启动时执行的操作-覆盖" class="headerlink" title="CMD –设置 container 启动时执行的操作(覆盖)"></a>CMD –设置 container 启动时执行的操作(覆盖)</h4><ul><li>设置指令，用于 container 启动时指定的操作，该操可以是自定义的脚本，也可以是执行系统的命令，该指令只能在文件中存在一次，若有多个，只执行最后一条<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CMD echo &quot;Hello，World！&quot;</span><br></pre></td></tr></table></figure></li></ul><h4 id="ENTRYPOINT-–设置-container-启动执行的操作-追加"><a href="#ENTRYPOINT-–设置-container-启动执行的操作-追加" class="headerlink" title="ENTRYPOINT –设置 container 启动执行的操作(追加)"></a>ENTRYPOINT –设置 container 启动执行的操作(追加)</h4><ul><li><p>设置指令，指定容器启动时执行的操作，可以多次设置，但是只有最后一个有效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ENTRYPOINT ls -l</span><br></pre></td></tr></table></figure></li><li><p>该指令独自使用, 若还有CMD命令且CMD是一条完整的可执行的命令，则CMD指令和ENTRYPOINT会相互覆盖，只有最后一个CMD 或 ENTRYPOINT 有效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CMD echo &quot;Hello World&quot;</span><br><span class="line">ENTRYPOINT ls -l</span><br><span class="line"># CMD 不会执行, ENTRYPOINT有效</span><br></pre></td></tr></table></figure></li><li><p>该指令与CMD配合使用指定 ENTRYPOINT 的默认参数，则 CMD 指令不是完整的可执行命令，仅仅是参数部分；ENTRYPOINT 指令只能使用 JSON 方式 指定执行命令，而不能指定参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FROM ubuntu</span><br><span class="line">CMD [&quot;-l&quot;]</span><br><span class="line">ENTRYPOINT [&quot;&#x2F;usr&#x2F;bin&#x2F;ls&quot;]</span><br></pre></td></tr></table></figure></li></ul><h4 id="USER-–设置-container-用户"><a href="#USER-–设置-container-用户" class="headerlink" title="USER –设置 container 用户"></a>USER –设置 container 用户</h4><ul><li>设置指令，设置启动容器的用户，默认 root 用户<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USER daemon &#x3D; ENTRYPOINT [&quot;memcached&quot;, &quot;-u&quot;, &quot;daemon&quot;]</span><br></pre></td></tr></table></figure></li></ul><h4 id="EXPOSE-–指定容器需要映射到宿主机的端口"><a href="#EXPOSE-–指定容器需要映射到宿主机的端口" class="headerlink" title="EXPOSE –指定容器需要映射到宿主机的端口"></a>EXPOSE –指定容器需要映射到宿主机的端口</h4><ul><li>设置指令，会将容器中端口映射成宿主机中的某个端口<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">EXPOSE 22</span><br><span class="line">docker run -p port1 image</span><br><span class="line">EXPOSE port1 port2 port3</span><br><span class="line">docker run -p port1 port2 port3 image</span><br><span class="line">docker run -p host_port1:port1 -p host_port2:port2 -p host_port3:port3 image</span><br></pre></td></tr></table></figure></li></ul><h4 id="ENV-–用于设置环境变量"><a href="#ENV-–用于设置环境变量" class="headerlink" title="ENV –用于设置环境变量"></a>ENV –用于设置环境变量</h4><ul><li>构建指令，在 image 中设置一个环境变量，后续的 RUN 可以使用，container 启动后，通过 <code>docker inspect</code> 查看环境变量，或者 <code>docker run --env key=value</code> 时设置或修改环境变量<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ENV JAVA_HOME &#x2F;path&#x2F;to&#x2F;java&#x2F;dirent</span><br></pre></td></tr></table></figure></li></ul><h4 id="ADD-–从-src-复制文件到-container-的-dest-路径-解包后拷贝"><a href="#ADD-–从-src-复制文件到-container-的-dest-路径-解包后拷贝" class="headerlink" title="ADD –从 src 复制文件到 container 的 dest 路径(解包后拷贝)"></a>ADD –从 src 复制文件到 container 的 dest 路径(解包后拷贝)</h4><ul><li>ADD [src] [dest]<ul><li>[src] 是相对被构建的源目录的相对路径，可以是 文件或目录 路径，也可以是远程的文件 url</li><li>[dest] 是container 中的绝对路径</li></ul></li></ul><h4 id="COPY-–从-src-复制文件到-container-的-dest-路径"><a href="#COPY-–从-src-复制文件到-container-的-dest-路径" class="headerlink" title="COPY –从 src 复制文件到 container 的 dest 路径"></a>COPY –从 src 复制文件到 container 的 dest 路径</h4><ul><li>COPY [src] [dest]</li></ul><h3 id="VOLUME-–指定挂载点"><a href="#VOLUME-–指定挂载点" class="headerlink" title="VOLUME –指定挂载点"></a>VOLUME –指定挂载点</h3><ul><li>设置指令，使容器中的一个目录具有持久化存储数据的功能，该目录可以被容器本身使用，也可以共享给其他容器使用，因为容器使用的是UFS技术，这种文件系统不能持久化，当容器关闭后，所有更改都会丢失<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FROM base</span><br><span class="line">VOLUME [&quot;&#x2F;tmp&#x2F;data&quot;]</span><br></pre></td></tr></table></figure></li></ul><h4 id="WORKDIR-–切换目录"><a href="#WORKDIR-–切换目录" class="headerlink" title="WORKDIR –切换目录"></a>WORKDIR –切换目录</h4><ul><li>设置指令，可以多次切换，等同于 cd，对RUN、CMD、ENTRYPOINT生效<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WORKDIR &#x2F;p1 WORKDIR p2 RUN vim a.txt  &#x3D;&#x3D;&#x3D; RUN cd &#x2F;p1&#x2F;p2 &amp;&amp; vim a.txt</span><br></pre></td></tr></table></figure></li></ul><h4 id="ONBUILD-–在子镜像中执行"><a href="#ONBUILD-–在子镜像中执行" class="headerlink" title="ONBUILD –在子镜像中执行"></a>ONBUILD –在子镜像中执行</h4><ul><li>在构建镜像时并不执行，而是在它的子镜像中执行<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">ONBUILD</span> <span class="string">ADD</span> <span class="string">.</span> <span class="string">/app/src</span></span><br><span class="line"><span class="string">ONBUILD</span> <span class="string">RUN</span> <span class="string">/usr/local/bin/python-build</span> <span class="string">--dir</span> <span class="string">/app/src</span></span><br><span class="line"></span><br><span class="line"><span class="string">docker</span> <span class="string">build</span> <span class="string">-t</span> <span class="string">imagename</span> <span class="string">.</span></span><br><span class="line"><span class="string">FROM</span> <span class="string">hub.c.163.com/public/centos:6.7</span></span><br><span class="line"><span class="string">MAINTAINER</span> <span class="string">xingyue@163.com</span></span><br><span class="line"><span class="string">ADD</span> <span class="string">./apache-tomcat-7.0.42.tar.gz</span> <span class="string">/root</span></span><br><span class="line"><span class="string">ADD</span> <span class="string">./jdk-7u25-linux-x64.tar.gz</span> <span class="string">/root</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">JAVA_HOME</span> <span class="string">/root/jdk1.7.0_25</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">PATH</span> <span class="string">$JAVA_HOME/bin:$PATH</span></span><br><span class="line"><span class="string">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"><span class="string">ENTRYPOINT</span> <span class="string">/root/apache-tomcat-7.0.42/bin/startup.sh</span> <span class="string">&amp;&amp;</span> <span class="string">tailf</span> <span class="string">/root/apache-tomcat-7.0.42/logs/catalina.out</span></span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th>命令</th><th>描述</th><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>FROM</td><td>构建基于的镜像</td><td>COPY</td><td>拷贝文件或目录到镜像</td></tr><tr><td>MAINTAINER</td><td>镜像维护者信息</td><td>ENTRYPOINT</td><td>运行容器执行的shell命令</td></tr><tr><td>RUN</td><td>构建镜像运行的shell命令</td><td>VOLUME</td><td>指定容器挂载点到宿主机自动生成的目录</td></tr><tr><td>CMD</td><td>运行容器执行的shell命令</td><td>USER</td><td>为RUN/CMD/ENTRYPOINT执行命令指定用户</td></tr><tr><td>EXPOSE</td><td>容器运行服务端口</td><td>WORKDIR</td><td>为RUN/CMD/ENTRYPOINT设置工作目录</td></tr><tr><td>ENV</td><td>容器内部环境变量</td><td>HEALTHCHECK</td><td>健康检查</td></tr><tr><td>ADD</td><td>拷贝文件或目录到镜像</td><td>ARG</td><td>构建镜像时指定参数(效果同ENV)</td></tr></tbody></table><h4 id="构建示例-构建PHP"><a href="#构建示例-构建PHP" class="headerlink" title="构建示例(构建PHP)"></a>构建示例(构建PHP)</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">FROM</span> <span class="string">centos:7</span></span><br><span class="line"><span class="string">MAINTAINER</span> <span class="string">anyue967</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">yum</span> <span class="string">install</span> <span class="string">-y</span> <span class="string">gcc</span> <span class="string">gcc-c++</span> <span class="string">make</span> <span class="string">gd-devel</span> <span class="string">libxml2-devel</span> <span class="string">libcurl-devel</span> <span class="string">libjpeg-devel</span> <span class="string">libpng-devel</span> <span class="string">openssl-devel</span></span><br><span class="line"><span class="string">ADD</span> <span class="string">php-5.6.31.tar.gz</span> <span class="string">/tmp/</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">cd</span> <span class="string">/tmp/php-5.6.31</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">./configure</span> <span class="string">--prefix=/usr/local/php</span> <span class="string">\</span></span><br><span class="line">    <span class="string">--with-config-file-path=/usr/local/php/etc</span> <span class="string">\</span></span><br><span class="line">    <span class="string">--with-mysql</span> <span class="string">--with-mysqli</span> <span class="string">\</span></span><br><span class="line">    <span class="string">--with-openssl</span> <span class="string">--with-zlib</span> <span class="string">--with-curl</span> <span class="string">--with-gd</span> <span class="string">\</span></span><br><span class="line">    <span class="string">--with-jpeg-dir</span> <span class="string">--with-png-dir</span> <span class="string">--with-iconv</span> <span class="string">\</span></span><br><span class="line">    <span class="string">--enable-fpm</span> <span class="string">--enable-zip</span> <span class="string">--enable-mbstring</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">make</span> <span class="string">-j</span> <span class="number">4</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">make</span> <span class="string">install</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">cp</span> <span class="string">/usr/local/php/etc/php-fpm.conf.default</span> <span class="string">/usr/local/php/etc/php-fpm.conf</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">sed</span> <span class="string">-i</span> <span class="string">&quot;s/127.0.0.1/0.0.0.0/&quot;</span> <span class="string">/usr/local/php/etc/php-fpm.conf</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">sed</span> <span class="string">-i</span> <span class="string">&quot;21a \daemonize = no&quot;</span> <span class="string">/usr/local/php/etc/php-fpm.conf</span>  <span class="comment"># 21行追加 daemonize = no </span></span><br><span class="line"><span class="string">COPY</span> <span class="string">php.ini</span> <span class="string">/usr/local/php/etc</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">rm</span> <span class="string">-rf</span> <span class="string">/tmp/php-5.6.31*</span> <span class="string">&amp;&amp;</span> <span class="string">yum</span> <span class="string">clean</span> <span class="string">all</span></span><br><span class="line"><span class="string">WORKDIR</span> <span class="string">/usr/local/php</span></span><br><span class="line"><span class="string">EXPOSE</span> <span class="number">9000</span></span><br><span class="line"><span class="string">CMD</span> [<span class="string">&quot;./sbin/php-fpm&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;/usr/local/php/etc/php-fpm.conf&quot;</span>]</span><br></pre></td></tr></table></figure><h3 id="构建示例-构建JAVA"><a href="#构建示例-构建JAVA" class="headerlink" title="构建示例(构建JAVA)"></a>构建示例(构建JAVA)</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">FROM</span> <span class="string">cnetos:7</span></span><br><span class="line"><span class="string">MAINTAINER</span> <span class="string">anyue967</span></span><br><span class="line"><span class="string">ADD</span> <span class="string">jdk-8u45-linux-64.tar.gz</span> <span class="string">/usr/local</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">JAVA_HOME</span> <span class="string">/usr/local/jdk1.8.0_45</span></span><br><span class="line"><span class="string">ADD</span> <span class="string">apache-tomcat-8.0.16.tar.gz</span> <span class="string">/usr/local</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">server.xml</span> <span class="string">/usr/local/apache-tomcat-8.0.46/conf</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">rm</span> <span class="string">-f</span> <span class="string">/usr/local/*.tar.gz</span></span><br><span class="line"><span class="string">WORKDIR</span> <span class="string">/usr/local/apache-tomcat-8.0.46</span></span><br><span class="line"><span class="string">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"><span class="string">ENTRYPOINT</span> [<span class="string">&quot;./bin/catalina.sh&quot;</span>, <span class="string">&quot;run&quot;</span>]</span><br></pre></td></tr></table></figure><h4 id="构建示例-tomcat"><a href="#构建示例-tomcat" class="headerlink" title="构建示例(tomcat)"></a>构建示例(tomcat)</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">FROM</span> <span class="string">centos</span></span><br><span class="line"><span class="string">MAINTAINER</span> <span class="string">anyu967@163.com</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">test.txt</span> <span class="string">/usr/local/container.txt</span></span><br><span class="line"><span class="string">ADD</span> <span class="string">jdk-8u171-linux-x64.tar.gz</span> <span class="string">/usr/local/</span></span><br><span class="line"><span class="string">ADD</span> <span class="string">apache-tomcat-9.0.8.tar.gz</span> <span class="string">/usr/local</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">yum</span> <span class="string">install</span> <span class="string">-y</span> <span class="string">vim</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">MYPATH</span> <span class="string">/usr/local</span></span><br><span class="line"><span class="string">WORKDIR</span> <span class="string">$MYPATH</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">JAVA_HOME</span> <span class="string">/usr/local/jdk1.8.0_171</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">CLASSPATH</span> <span class="string">$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">CATALINA_HOME</span> <span class="string">/usr/local/apache-tomcat-9.0.8</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">CATALINA_BASE</span> <span class="string">/usr/local/apache-tomcat-9.0.8</span></span><br><span class="line"><span class="string">EXPOSED</span> <span class="number">8080</span></span><br><span class="line"><span class="comment"># ENTRYPOINT [&quot;/usr/local/apache-tomcat-9.0.8/bin/startup.sh&quot;]</span></span><br><span class="line"><span class="comment"># CMD [&quot;/usr/local/apache-tomcat-9.0.8/bin/catalina.sh&quot;,&quot;run&quot;]</span></span><br><span class="line"><span class="string">CMD</span> <span class="string">/usr/local/apache-tomcat-9.0.8/bin/startup.sh</span> <span class="string">&amp;&amp;</span> <span class="string">tail</span> <span class="string">-F</span> <span class="string">/usr/local/apache-tomcat-9.0.8/bin/log/catalina.out</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dockerfile </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker基础</title>
      <link href="/posts/5ae6092.html"/>
      <url>/posts/5ae6092.html</url>
      
        <content type="html"><![CDATA[<p>2019-07-16-Docker</p><a id="more"></a><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><img src="/posts/5ae6092/docker-logo.jpg" class title="[docker-logo]">  <h3 id="什么是docker"><a href="#什么是docker" class="headerlink" title="什么是docker?"></a>什么是docker?</h3><blockquote><p><strong>Docker</strong> 是一个<strong>开源</strong>的应用<strong>容器引擎</strong>，基于Go，Docker 使用客户端-服务器 (C/S) 架构模式，使用远程API来管理和创建Docker容器。Docker 容器通过 Docker 镜像来创建。</p></blockquote><blockquote><p>容器是解决从一个计算环境移动到另一个计算环境时如何使软件可靠运行的问题的解决方案。这可以是从开发人员的笔记本电脑到测试环境，从临时环境到生产，从数据中心的物理机器到私有云或公共云中的虚拟机。<br>一个容器包含了完整的运行时环境：一个应用、这个应用所需的全部依赖、类库、其他二进制文件、配置文件，它们统一被打入了一个包中。通过将应用平台和其依赖容器化，操作系统发行版本和其他基础环境造成的差异，都被抽象掉了。</p></blockquote><h3 id="虚拟化和容器有什么不同？"><a href="#虚拟化和容器有什么不同？" class="headerlink" title="虚拟化和容器有什么不同？"></a>虚拟化和容器有什么不同？</h3><blockquote><p>传统虚拟机技术是虚拟出一套硬件后，在其上运行一个完整操作系统，在该系统上再运行所需应用进程；而容器内的应用进程直接运行于宿主的内核，容器内没有自己的内核，而且也没有进行硬件虚拟。因此容器要比传统虚拟机更为轻便。</p></blockquote><img src="/posts/5ae6092/Container.jpg" class title="[Container]">  <h2 id="docker三个基本概念："><a href="#docker三个基本概念：" class="headerlink" title="docker三个基本概念："></a>docker三个基本概念：</h2><ul><li>镜像(image)：镜像采用<strong>分层存储 UFS</strong>，并不是传统的ISO打包，实际上是由多层文件系统联合组成。镜像构建时，会一层层构建，前一层是后一层的基础。每一层构建完就不会再发生改变后一层上的任何改变只发生在自己这一层。因此每一层尽量只包含该层需要添加的东西，任何额外的东西应该在该层构建结束前清理掉。</li><li>容器(container)：镜像（ Image ）和容器（ Container ）的关系，就像是面向对象程序设计中的 <strong>类 和 实例</strong>一样，镜像是静态的定义，容器是镜像运行时的实体。<strong>容器可以被创建、启动、停止、删除、暂停等</strong>。<strong>容器的实质是进程</strong>，但与直接在宿主执行的进程不同，<strong>容器进程</strong>运行于属于自己的独立的 <strong>命名空间</strong>。  </li><li>仓库(repository)：Docker 仓库用来保存镜像，可以理解为代码控制中的代码仓库。分为公开与私有。  <img src="/posts/5ae6092/dockerStr.jpg" class title="[dockerStr]">    <img src="/posts/5ae6092/docker-command.jpg" class title="[docker-command]">    </li></ul><h3 id="docker-的安装"><a href="#docker-的安装" class="headerlink" title="docker 的安装"></a>docker 的安装</h3><p><strong><a href="https://docs.docker.com/">docker官方文档</a></strong></p><ul><li><p>安装前卸载旧版本(centos7):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ uname -r</span><br><span class="line">$ yum update</span><br><span class="line">$ yum remove docker \</span><br><span class="line">  docker-client \</span><br><span class="line">  docker-client-latest \</span><br><span class="line">  docker-common \</span><br><span class="line">  docker-latest \</span><br><span class="line">  docker-latest-logrotate \</span><br><span class="line">  docker-logrotate \</span><br><span class="line">  docker-engine</span><br></pre></td></tr></table></figure></li><li><p>安装:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> $ yum install -y yum-utils \</span><br><span class="line">  device-mapper-persistent-data \</span><br><span class="line">  lvm2</span><br><span class="line"> <span class="comment"># 官方软件源</span></span><br><span class="line"> $ yum-config-manager --add-repo \ </span><br><span class="line">https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"> </span><br><span class="line"> <span class="comment"># 国内阿里软件源</span></span><br><span class="line"> $ yum-config-manager --add-repo \</span><br><span class="line">http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"> </span><br><span class="line"> $ yum makecache fast</span><br><span class="line"> $ yum list docker-ce --showduplicates |sort -r<span class="comment"># 查看所有版本</span></span><br><span class="line"> $ yum -y install docker-ce</span><br><span class="line"> $ systemctl start docker</span><br><span class="line"> $ systemctl <span class="built_in">enable</span> docker</span><br><span class="line"> $ docker info// docker version</span><br><span class="line"> $ docker run hello-world</span><br></pre></td></tr></table></figure></li><li><p>安装前卸载旧版本(Ubuntu 18.04):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ uname -r</span><br><span class="line">$ apt-get update</span><br><span class="line">$ apt-get remove docker docker-engine docker.io</span><br></pre></td></tr></table></figure></li><li><p>安装:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install \</span><br><span class="line"> apt-transport-https \</span><br><span class="line"> ca-certificates \</span><br><span class="line"> software-properties-common \</span><br><span class="line"> curl</span><br><span class="line">// 官方证书及软件源</span><br><span class="line">$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line">$ apt-key fingerprint 0EBFCD88// 验证密钥</span><br><span class="line">$ add-apt-repository \</span><br><span class="line"> <span class="string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string"> <span class="subst">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string"> stable&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 国内证书及软件源(速度比较快)</span></span><br><span class="line">$ curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line">$ apt-key fingerprint 0EBFCD88</span><br><span class="line">$ add-apt-repository \</span><br><span class="line"> <span class="string">&quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu \</span></span><br><span class="line"><span class="string"> <span class="subst">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string"> stable&quot;</span></span><br><span class="line"> </span><br><span class="line">$ apt-get update </span><br><span class="line">$ apt-cache madison docker-ce <span class="comment"># 查找docker版本</span></span><br><span class="line">$ apt-get install docker-ce </span><br><span class="line"></span><br><span class="line">$ systemctl start docker</span><br><span class="line">$ systemctl <span class="built_in">enable</span> docker</span><br><span class="line">$ docker info<span class="comment"># docker version</span></span><br><span class="line">$ docker run hello-world</span><br></pre></td></tr></table></figure></li><li><p>镜像加速(/etc/docker/daemon.json):</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;https://registry.docker-cn.com&quot;</span></span><br><span class="line">        <span class="string">&quot;https://my5f0mvy.mirror.aliyuncs.com&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">$ systemctl restart docker</span><br></pre></td></tr></table></figure></li></ul><h3 id="docker-的使用-docker-–help-："><a href="#docker-的使用-docker-–help-：" class="headerlink" title="docker 的使用(docker –help)："></a>docker 的使用(docker –help)：</h3><h4 id="Management-Commands"><a href="#Management-Commands" class="headerlink" title="Management Commands"></a>Management Commands</h4><table><thead><tr><th align="left">命令</th><th>描述</th></tr></thead><tbody><tr><td align="left">container</td><td>Manage containers</td></tr><tr><td align="left">image</td><td>Manage images</td></tr><tr><td align="left">volume</td><td>Manage volumes</td></tr><tr><td align="left">network</td><td>Manage networks</td></tr><tr><td align="left">builder</td><td>Manage builds</td></tr><tr><td align="left">config</td><td>Manage Docker configs</td></tr><tr><td align="left">engine</td><td>Manage the docker engine</td></tr><tr><td align="left">node</td><td>Manage Swarm nodes</td></tr><tr><td align="left">plugin</td><td>Manage plugins</td></tr><tr><td align="left">secret</td><td>Manage Docker secrets</td></tr><tr><td align="left">service</td><td>Manage services</td></tr><tr><td align="left">stack</td><td>Manage Docker stacks</td></tr><tr><td align="left">swarm</td><td>Manage Swarm</td></tr><tr><td align="left">system</td><td>Manage Docker</td></tr><tr><td align="left">trust</td><td>Manage trust on Docker images</td></tr></tbody></table><h4 id="镜像管理-docker-image"><a href="#镜像管理-docker-image" class="headerlink" title="镜像管理(docker image):"></a>镜像管理(docker image):</h4><table><thead><tr><th align="left">命令</th><th>描述</th></tr></thead><tbody><tr><td align="left">build</td><td>构建镜像来自DockerFile</td></tr><tr><td align="left">push</td><td>推送镜像到仓库</td></tr><tr><td align="left">pull</td><td>拉取镜像至本地</td></tr><tr><td align="left">ls</td><td>列出镜像</td></tr><tr><td align="left">history</td><td>查看镜像历史</td></tr><tr><td align="left">inspect</td><td>显示一个或多个镜像信息</td></tr><tr><td align="left">rm</td><td>删除镜像</td></tr><tr><td align="left">prune</td><td>删除虚悬镜像</td></tr><tr><td align="left">tag</td><td>创建一个引用源镜像标记目标镜像</td></tr><tr><td align="left">export</td><td>导出容器文件系统到tar归档文件</td></tr><tr><td align="left">import</td><td>导入容器文件系统tar创建镜像</td></tr><tr><td align="left">save</td><td>保存镜像</td></tr><tr><td align="left">load</td><td>加载镜像来自tar归档文件或标准输入</td></tr></tbody></table><h5 id="docker-image-pull"><a href="#docker-image-pull" class="headerlink" title="$ docker image pull"></a><code>$ docker image pull</code></h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ docker image pull ubuntu:16.04      <span class="comment"># 获取镜像</span></span><br><span class="line">  16.04: Pulling from library/ubuntu</span><br><span class="line">  bf5d46315322: Pull complete </span><br><span class="line">  9f13e0ac480c: Pull complete</span><br><span class="line">  e8988b5b3097: Pull complete</span><br><span class="line">  40af181810e7: Pull complete</span><br><span class="line">  e6f7c7e5c03e: Pull complete</span><br><span class="line">  Digest:</span><br><span class="line">  sha256:147913621d9cdea08853f6ba9116c2e27a3ceffecf3b492983ae97c3d643fbbe</span><br><span class="line">  Status: Downloaded newer image <span class="keyword">for</span> ubuntu:16.04 </span><br></pre></td></tr></table></figure><h5 id="docker-image-ls"><a href="#docker-image-ls" class="headerlink" title="$ docker image ls"></a><code>$ docker image ls</code></h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">REPOSITORY      TAG     IMAGE ID        CREATED     SIZE</span><br><span class="line">redis           latest  5f515359c7f8    5 days ago  183 MB</span><br><span class="line">nginx           latest  05a60462f8ba    5 days ago  181 MB</span><br><span class="line">&lt;none&gt;          &lt;none&gt;  00285df0df87    5 days ago  342 MB <span class="comment"># 虚悬镜像</span></span><br><span class="line"></span><br><span class="line">$ docker image inspect nginx:1.12      <span class="comment"># 查看镜像信息</span></span><br><span class="line">$ docker image rm nginx:1.12</span><br><span class="line">$ docker image ls -f dangling=<span class="literal">true</span>     <span class="comment"># 查询虚悬镜像(filter)</span></span><br><span class="line">$ docker image prune                   <span class="comment"># 删除虚悬镜像</span></span><br><span class="line">$ docker image <span class="built_in">export</span> ID &gt; ID.tar      <span class="comment"># 导出容器</span></span><br></pre></td></tr></table></figure><h4 id="容器管理-docker-container"><a href="#容器管理-docker-container" class="headerlink" title="容器管理(docker container)"></a>容器管理(docker container)</h4><table><thead><tr><th align="left">命令</th><th>描述</th></tr></thead><tbody><tr><td align="left">create</td><td>Create a new container</td></tr><tr><td align="left">run</td><td>运行命令在容器中</td></tr><tr><td align="left">exec</td><td>运行命令在容器中</td></tr><tr><td align="left">ls</td><td>列出容器</td></tr><tr><td align="left">inspect</td><td>显示容器信息</td></tr><tr><td align="left">attach</td><td>将本地标准输入、输出和错误流附加到正在运行的容器</td></tr><tr><td align="left">commit</td><td>据容器创建镜像</td></tr><tr><td align="left">cp</td><td>拷贝文件到容器</td></tr><tr><td align="left">logs</td><td>容器日志</td></tr><tr><td align="left">port</td><td>列出/指定容器端口映射</td></tr><tr><td align="left">stats</td><td>显示容器资源使用统计</td></tr><tr><td align="left">top</td><td>显示容器运行进程</td></tr><tr><td align="left">update</td><td>更新容器</td></tr><tr><td align="left">stop/start</td><td>停止/启动容器</td></tr><tr><td align="left">rm</td><td>删除容器</td></tr></tbody></table><table><thead><tr><th align="left">选项</th><th>描述</th></tr></thead><tbody><tr><td align="left"><code>-i</code>, –interractive</td><td>交互式</td></tr><tr><td align="left"><code>-t</code>, –tty</td><td>分配伪终端</td></tr><tr><td align="left"><code>-d</code>, –detach</td><td>后台运行容器</td></tr><tr><td align="left"><code>-p</code>, –public list</td><td>本地端口映射至容器</td></tr><tr><td align="left">-P, –publish-all</td><td>随机映射的端口到内部容器开放的网络端口</td></tr><tr><td align="left">–net</td><td>网络配置</td></tr><tr><td align="left">–mount mount</td><td>挂载宿主机分区至容器</td></tr><tr><td align="left"><code>-v</code>, –volume list</td><td>挂载宿主机目录至容器</td></tr><tr><td align="left">-a, –attach list</td><td>附加到运行的容器</td></tr><tr><td align="left">–dns list</td><td>设置DNS</td></tr><tr><td align="left">-e, –env list</td><td>设置环境变量</td></tr><tr><td align="left">–env-file list</td><td>从文件读取环境变量</td></tr><tr><td align="left">-h, –hostname=string</td><td>主机名</td></tr><tr><td align="left">–ip=string</td><td>设置IP</td></tr><tr><td align="left">–link list</td><td>添加链接到另一个容器</td></tr><tr><td align="left">–restart=string</td><td>重启</td></tr><tr><td align="left">–add-host list</td><td>添加其他主机到容器中</td></tr><tr><td align="left">–restart=always</td><td>始终会重启容器</td></tr></tbody></table><h5 id="docker-container-run"><a href="#docker-container-run" class="headerlink" title="docker container run"></a><code>docker container run</code></h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ docker container run -itd --name Ubuntu \ </span><br><span class="line">  ubuntu:16.04 \  <span class="comment"># 指定容器版本</span></span><br><span class="line">  bash  </span><br><span class="line">$ root@e7009c6ce357:/<span class="comment"># cat /etc/os-release    </span></span><br><span class="line">  NAME=<span class="string">&quot;Ubuntu&quot;</span></span><br><span class="line">  VERSION=<span class="string">&quot;16.04.4 LTS, Trusty Tahr&quot;</span></span><br><span class="line">  ID=ubuntu</span><br><span class="line">  ID_LIKE=debian</span><br><span class="line">  PRETTY_NAME=<span class="string">&quot;Ubuntu 16.04.4 LTS&quot;</span></span><br><span class="line">  VERSION_ID=<span class="string">&quot;16.04&quot;</span></span><br><span class="line">  HOME_URL=<span class="string">&quot;http://www.ubuntu.com/&quot;</span></span><br><span class="line">  SUPPORT_URL=<span class="string">&quot;http://help.ubuntu.com/&quot;</span></span><br><span class="line">  BUG_REPORT_URL=<span class="string">&quot;http://bugs.launchpad.net/ubuntu/&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ docker container start webserver</span><br><span class="line">$ docker container <span class="built_in">exec</span> -it webserver bash</span><br><span class="line">  root@ea4664298c21:/<span class="comment"># ls</span></span><br><span class="line">  bin   dev   etc   home    proc    sys   tmp</span><br><span class="line">$ docker container run -itd -p 8080:80 --name nginx01 nginx  <span class="comment"># 宿主机8080映射到容器80端口</span></span><br><span class="line">$ docker logs nginx01      <span class="comment"># 查看容器日志</span></span><br><span class="line">$ docker container ps -l   <span class="comment"># 查看运行的容器</span></span><br></pre></td></tr></table></figure><h4 id="Docker将数据卷挂在至容器中三种方法实现"><a href="#Docker将数据卷挂在至容器中三种方法实现" class="headerlink" title="Docker将数据卷挂在至容器中三种方法实现:"></a>Docker将数据卷挂在至容器中三种方法实现:</h4><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">create</td><td align="left">创建数据卷</td></tr><tr><td align="left">inspect</td><td align="left">显示数据卷信息</td></tr><tr><td align="left">ls</td><td align="left">列出数据卷</td></tr><tr><td align="left">prune</td><td align="left">删除未归属的数据卷</td></tr><tr><td align="left">rm</td><td align="left">删除数据卷</td></tr></tbody></table><h5 id="管理volumes-Docker管理宿主机文件系统的一部分-var-lib-docker-volumes"><a href="#管理volumes-Docker管理宿主机文件系统的一部分-var-lib-docker-volumes" class="headerlink" title="管理volumes: Docker管理宿主机文件系统的一部分(/var/lib/docker/volumes)"></a>管理volumes: Docker管理宿主机文件系统的一部分(/var/lib/docker/volumes)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker volume create nginx-vol</span><br><span class="line">$ docker volume ls</span><br><span class="line">$ docker volume inspect nginx-vol</span><br><span class="line">$ docker run -d -it --name=nginx-test -p 88:80 -v nginx-vol:/usr/share/nginx/html/nginx</span><br><span class="line">$ docker run -d -it --name=nginx-test -p 88:80 --mount src=nginx-vol,dst=/usr/share/nginx/html nginx</span><br></pre></td></tr></table></figure><h5 id="清理数据卷"><a href="#清理数据卷" class="headerlink" title="清理数据卷"></a>清理数据卷</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ docker container stop nginx-test</span><br><span class="line">$ docjer container rm nginx-test</span><br><span class="line">$ docker rm -f $(docker ps -q -a) <span class="comment"># 删除所有容器</span></span><br><span class="line">$ docker volume rm nginx-vol</span><br><span class="line">  </span><br><span class="line">$ <span class="built_in">bind</span> mounts: <span class="comment"># 存储于宿主机系统的任意位置(必须先创建好挂载数据卷, 否则会报错)</span></span><br><span class="line">$ docker run -itd --name=nginx-test --mount <span class="built_in">type</span>=<span class="built_in">bind</span>,src=/app/wwwroot,dst=/usr/share/nginx/html nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># tmpfs: 挂在存储在宿主机系统内存中, 不会写入宿主机的文件系统</span></span><br><span class="line">$ docker image prune     <span class="comment"># 批量清理临时镜像文件</span></span><br><span class="line">$ docker container prune<span class="comment"># 批量清理已经停止的容器</span></span><br><span class="line">$ docker run IMAGE env  <span class="comment"># 查看镜像支持的环境变量</span></span><br><span class="line">$ docker <span class="built_in">kill</span> $(docker ps -q)<span class="comment"># 停止所有正则运行的容器</span></span><br><span class="line">$ docker inspect --format <span class="string">&#x27;&#123;&#123; .State.pid&#125;&#125; &lt;CONTAINER ID or NAME&gt;&#x27;</span><span class="comment"># PID </span></span><br><span class="line">$ docker inspect --format <span class="string">&#x27;&#123;&#123; .Networkings.IPAddress&#125;&#125; &lt;CONTAINER ID or NAME&gt;&#x27;</span><span class="comment"># IP</span></span><br></pre></td></tr></table></figure><h3 id="镜像构建-docker-builder"><a href="#镜像构建-docker-builder" class="headerlink" title="镜像构建(docker builder)"></a>镜像构建(docker builder)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker build -t image:1.0 -f /root/Dockerfile  <span class="comment"># tag  </span></span><br><span class="line">docker tag mysql:5.6 myregistry/mysql:version  </span><br></pre></td></tr></table></figure><h3 id="搭建LNMP网站平台"><a href="#搭建LNMP网站平台" class="headerlink" title="搭建LNMP网站平台"></a>搭建LNMP网站平台</h3><ul><li><p>自定义网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create lnmp</span><br></pre></td></tr></table></figure></li><li><p>创建Mysql数据库容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -it \</span><br><span class="line">  --name lnmp_mysql \</span><br><span class="line">  --net lnmp \</span><br><span class="line">  -p 3306:3306 \</span><br><span class="line">  --mount src=mysql-vol,dst=/var/lib/mysql \</span><br><span class="line">  -e MYSQL_ROOT_PASSWORD=YourPassword \</span><br><span class="line">  -d mysql:5.7</span><br></pre></td></tr></table></figure></li><li><p>创建数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> lnmp_mysql sh \</span><br><span class="line">  -c <span class="string">&#x27;exec mysql -uroot -p&quot;$MYSQL_ROOT_PASSWORD&quot; -e &quot;create database wordpress&quot;&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>创建PHP环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -it \</span><br><span class="line">  --name lnmp_web \</span><br><span class="line">  --net lnmp \</span><br><span class="line">  -p 8088:80 \</span><br><span class="line">  --mount <span class="built_in">type</span>=<span class="built_in">bind</span>,src=/<span class="variable">$PWD</span>/app/wwwroot, dst=/var/www/html \</span><br><span class="line">  -d richarvey/nginx-php-fpm</span><br></pre></td></tr></table></figure></li><li><p>用WordPress博客做测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://cn.wordpress.org/wordpress-4.7.4-zh_CN.tar.gz</span><br><span class="line">$ mkdir -p ./app/wwwroot</span><br><span class="line">$ tar -xzvf wordpress-4.7.4-zh_CN.tar.gz -C /app/wwwroot/</span><br><span class="line">http://IP:88/wordpress</span><br></pre></td></tr></table></figure></li></ul><h3 id="搭建私有镜像仓库"><a href="#搭建私有镜像仓库" class="headerlink" title="搭建私有镜像仓库:"></a>搭建私有镜像仓库:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull registry</span><br><span class="line">$ docker run -d -v /opt/registry:/var/lib/registry -p 5000:5000 --restart=always --name registry registry</span><br><span class="line"></span><br><span class="line">$ curl http://IP:5000/v2/_catalog<span class="comment"># 客户端</span></span><br><span class="line">$ vim /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;registry-mirrors&quot;</span>:[<span class="string">&quot;https://registry.docker-cn.com&quot;</span>],</span><br><span class="line"><span class="string">&quot;insecure-repository&quot;</span>:[<span class="string">&quot;IP:5000&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">$ docker tag centos:6 IP:5000/centos:6<span class="comment"># 客户端</span></span><br><span class="line">$ docker push IP:5000/centos:6</span><br><span class="line">$ docker pull IP:5000/centos:6</span><br></pre></td></tr></table></figure><h3 id="Docker-Hub-公共镜像仓库"><a href="#Docker-Hub-公共镜像仓库" class="headerlink" title="Docker Hub 公共镜像仓库:"></a>Docker Hub 公共镜像仓库:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker login</span><br><span class="line">$ docker tag image username/repository:tag</span><br><span class="line">$ docker push username/repository:tag</span><br></pre></td></tr></table></figure><h3 id="企业级Docker镜像仓库"><a href="#企业级Docker镜像仓库" class="headerlink" title="企业级Docker镜像仓库:"></a>企业级Docker镜像仓库:</h3><blockquote><p>Harbor是VMware开源的企业级Dockers Registry项目, <a href="https://github.com/vmware/harbor">项目地址</a>, 创建自签名证书, <code>yum install openssl</code>, 路径<code>/etc/pki/tls/certs/Makefile</code>利用make命令生成自签名证书</p></blockquote><ul><li>安装Docker</li></ul><ul><li><a href="https://docs.docker.com/install/linux/docker-ce/centos/">Docker安装</a></li></ul><ul><li>安装docker-compose</li></ul><ul><li><a href="https://docs.docker.com/compose/install/">Docker-compose安装</a></li></ul><ul><li><p>自签TLS证书</p><ul><li><a href="https://github.com/goharbor/harbor/blob/master/docs/configure_https.md">证书生成</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl req -newkey rsa:4096 -nodes -sha256 -keyout ca.key -x509 -days 365 -out ca.crt  <span class="comment"># 生成证书  </span></span><br><span class="line">openssl req -newkey rsa:4096 -nodes -sha256 -keyout yourdomain.com.key -out yourdomain.com.csr<span class="string">&quot;  # 生成证书请求</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>Harbor安装与配置</p><ul><li><a href="https://github.com/goharbor/harbor/releases">Harbor离线包地址</a></li><li>配置文件<code>vim harbor.cfg</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hostname = IP或者yourdomain.com</span><br><span class="line">ui_url_protocol = https/http</span><br><span class="line">harbor_admin_password = Harboe123456 <span class="comment"># 默认密码</span></span><br><span class="line">ssl_cert = /data/cert/server.crt</span><br><span class="line">ssl_cert = /data/cert/server.key</span><br></pre></td></tr></table></figure></li><li><code>./prepare &amp;&amp; ./install.sh</code>  # 安装ving启动Harbor</li><li><code>docker-compose ps</code>   # 查看运行状态, /var/log/harbor</li></ul></li><li><p>Docker主机访问Harbor</p></li></ul><h3 id="Docker-三剑客"><a href="#Docker-三剑客" class="headerlink" title="Docker 三剑客"></a>Docker 三剑客</h3><h4 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose:"></a>docker-compose:</h4><blockquote><p> Docker Compose 可以轻松、高效的<code>管理容器</code>，它是一个用于<code>定义和运行多容器</code> Docker 的应用程序工具  </p></blockquote><ul><li>安装:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.24.1/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">$ chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">$ ln -s /usr/<span class="built_in">local</span>/bin/docker-compose /usr/bin/docker-compose</span><br><span class="line">$ docker-compose -v</span><br><span class="line"></span><br><span class="line">$ curl -L https://raw.githubusercontent.com/docker/compose/1.8.0/contrib/completion/bash/docker-compose &gt; /etc/bash_completion.d/docker-compose<span class="comment"># bash 补全</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="使用Django"><a href="#使用Django" class="headerlink" title="使用Django:"></a>使用Django:</h5><ul><li><p>使用<strong>Docker Compose</strong> 配置运行<strong>Django/PostgreSQL</strong>应用  </p></li><li><p>应用运行在Docker容器里, 通过Dockerfile文件指定Docker容器要安装内容(<strong>构建镜像</strong>)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">FROM</span> <span class="string">python:3</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">PYTHONUNBUFFERD</span> <span class="number">1</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">mkdir</span> <span class="string">/code</span></span><br><span class="line"><span class="string">WORKDIR</span> <span class="string">/code</span></span><br><span class="line"><span class="string">ADD</span> <span class="string">requirements.txt</span> <span class="string">/code/</span></span><br><span class="line"><span class="string">RUN</span>  <span class="string">pip</span> <span class="string">install</span> <span class="string">-r</span> <span class="string">requirements.txt</span></span><br><span class="line"><span class="string">ADD</span> <span class="string">.</span> <span class="string">/code/</span></span><br></pre></td></tr></table></figure></li><li><p>requirements.txt 指明依赖包:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Django&gt;&#x3D;1.8,&lt;2.0</span><br><span class="line">psycopg2</span><br></pre></td></tr></table></figure></li><li><p>docker-compose.yml文件将所有相关文件关联:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"> <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">python3</span> <span class="string">manage.py</span> <span class="string">runserver</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:8000</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">.:/code</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8000:8000&quot;</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br></pre></td></tr></table></figure></li><li><p><code>$ docker-compose run web django-admin.py startproject django_example .</code></p><ul><li>替换django_example/settings.py的节点信息:<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">  &#x27;default&#x27;: &#123;    </span><br><span class="line">  &#x27;ENGINE&#x27;:     &#x27;django.db.backends.postgresql&#x27;,  </span><br><span class="line">  &#x27;NAME&#x27;: &#x27;postgres&#x27;,  </span><br><span class="line">  &#x27;USER&#x27;: &#x27;postgres&#x27;,  </span><br><span class="line">  &#x27;HOST&#x27;: &#x27;db&#x27;,  </span><br><span class="line">  &#x27;PORT&#x27;: 5432,  </span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br><span class="line">$ docker-compose up</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="构建WordPress"><a href="#构建WordPress" class="headerlink" title="构建WordPress:"></a>构建WordPress:</h5><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db_data:/var/lib/mysql</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">somewordpress</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">MYSQL_USER:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">MYSQL_PASSWORD:</span> <span class="string">wordpress</span></span><br><span class="line">  <span class="attr">wordpress:</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wordpress:latest</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8000:80&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_HOST:</span> <span class="string">db:3306</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_USER:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_PASSWORD:</span> <span class="string">wordpress</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">    <span class="attr">db_data:</span></span><br></pre></td></tr></table></figure><h4 id="构建ELK"><a href="#构建ELK" class="headerlink" title="构建ELK"></a>构建ELK</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2.2&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">cerebro:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">lmenezes/cerebro:0.8.3</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">cerebro</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9000:9000&quot;</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">-Dhosts.0.host=http://elasticsearch:9200</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">es7net</span></span><br><span class="line">  <span class="attr">kibana:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">kibana:7.8.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">kibana7</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">I18N_LOCALE=zh-CN</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">XPACK_GRAPH_ENABLED=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TIMELION_ENABLED=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">XPACK_MONITORING_COLLECTION_ENABLED=&quot;true&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;5601:5601&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">es7net</span></span><br><span class="line">  <span class="attr">elasticsearch:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">elasticsearch:7.8.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">es7_01</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cluster.name=geektime</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">node.name=es7_01</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">bootstrap.memory_lock=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">discovery.seed_hosts=es7_01,es7_02</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cluster.initial_master_nodes=es7_0,es7_02</span></span><br><span class="line">    <span class="attr">ulimits:</span></span><br><span class="line">      <span class="attr">memlock:</span></span><br><span class="line">        <span class="attr">soft:</span> <span class="number">-1</span></span><br><span class="line">        <span class="attr">hard:</span> <span class="number">-1</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">es7data1:/usr/share/elasticsearch/data</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9200</span><span class="string">:9200</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">es7net</span></span><br><span class="line">  <span class="attr">elasticsearch2:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">elasticsearch:7.8.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">es7_02</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cluster.name=geektime</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">node.name=es7_02</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">bootstrap.memory_lock=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">discovery.seed_hosts=es7_01,es7_02</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cluster.initial_master_nodes=es7_01,es7_02</span></span><br><span class="line">    <span class="attr">ulimits:</span></span><br><span class="line">      <span class="attr">memlock:</span></span><br><span class="line">        <span class="attr">soft:</span> <span class="number">-1</span></span><br><span class="line">        <span class="attr">hard:</span> <span class="number">-1</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">es7data2:/usr/share/elasticsearch/data</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">es7net</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">es7data1:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">es7data2:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">local</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">es7net:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure><h4 id="Docker-Machine"><a href="#Docker-Machine" class="headerlink" title="Docker Machine"></a>Docker Machine</h4><blockquote><p>负责在多种平台上快速安负责在多种平台上快速安装Docker环境, 驱动类型(<code>virtualbox--linux/Win</code>, <code>xhyve--MacOS</code>, <code>hyperv--Win</code>)<br>Win安装Docker for Windows后, <strong>不能安装virtualbox</strong>, 选择 hyperv</p></blockquote><ul><li><p>安装:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo curl -L https://github.com/docker/machine/releases/download/v0.13.0/docker-machine-`uname -s`-`uname -m` &gt; /usr/<span class="built_in">local</span>/bin/docker-machine</span><br><span class="line">$ sudo chmod +x /usr/<span class="built_in">local</span>/bin/docker-machine</span><br><span class="line">$ docker-machine -v</span><br></pre></td></tr></table></figure></li><li><p>使用:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ docker-machine create -d virtualbox <span class="built_in">test</span> \  <span class="comment"># 创建test Docker主机 -d --driver</span></span><br><span class="line">  --engine-opt dns=114.114.114.114 \  </span><br><span class="line">  --engine-registry-mirror https://registry.docker-cn.com \</span><br><span class="line">  --virtualbox-memory 2048 \</span><br><span class="line">  --virtualbox-cpu-count 2</span><br><span class="line">$ docker-machine ls</span><br><span class="line">$ docker-machine env <span class="built_in">test</span>   <span class="comment"># env 命令来让后续操作对象都是目标主机</span></span><br><span class="line">$ docker-machine ssh <span class="built_in">test</span>   <span class="comment"># 登录到主机</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="Docker-Swarm"><a href="#Docker-Swarm" class="headerlink" title="Docker Swarm:"></a>Docker Swarm:</h4><blockquote><p>提供 Docker 容器集群服务，是 Docker 官方对容器云生态进行支持的核心方案, 用户可以将多个 Docker 主机封装为单个大型的虚拟 Docker 主机，快速打造一套容器云平台<br>Docker 1.12 Swarm mode 已经内嵌入 Docker 引擎, 成为了 docker 子命令 <code>docker swarm</code><br>Swarm 是使用 SwarmKit 构建的 Docker 引擎内置（原生）的集群管理和编排工具.</p></blockquote><ul><li><p>节点:</p><ul><li>manager 节点: 用于 Swarm 集群的管理, <code>docker swarn</code>作用仅限于管理节点执行, Swarm集群可以有多个管理节点, 但仅只能有一个leader管理节点;</li><li>worker 节点: 是任务执行节点, 管理节点将服务 ( service ) 下发至工作节点执行;  <img src="/posts/5ae6092/docker-swarm.jpg" class title="[docker-swarm]"></li><li>服务(Services): 指一组任务的集合，服务定义了任务的属性<ul><li><code>replicated services</code>: 按照一定规则在各个工作节点上运行指定个数的任务</li><li><code>global services</code>: 每个工作节点上运行一个任务</li></ul></li><li>任务(Task): Swarm 中的最小的调度单位，目前来说就是一个单一的容器</li></ul><img src="/posts/5ae6092/docker-service.jpg" class title="[docker-service]"></li><li><p>创建<strong>Swarm集群</strong></p><ul><li><p>初始化Swarm集群(管理节点):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker swarm init --advertise-addr IP   <span class="comment"># --advertise-addr 指定IP</span></span><br><span class="line">Swarm initialized: current node (dxn1zf6l61qsb1josjja83ngz) is now a manager.</span><br><span class="line"></span><br><span class="line">To add a worker to this swarm, run the following <span class="built_in">command</span>:</span><br><span class="line">docker swarm join --token \ SWMTKN-1-49nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv-8vxv8rssmk743ojnwacrr2e7c \ 192.168.99.100:2377</span><br><span class="line">To add a manager to this swarm, run <span class="string">&#x27;docker swarm join-token manager&#x27;</span> and follow the instructions.</span><br></pre></td></tr></table></figure></li><li><p>增加工作节点:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ docker-machine create -d virtualbox worker1</span><br><span class="line">$ docker-machine ssh worker1</span><br><span class="line">docker@worker1:~$ docker swarm join --token\ SWMTKN-1-49nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv-8vxv8rssmk743ojnwacrr2e7c \ 192.168.99.100:2377</span><br><span class="line"></span><br><span class="line">This node joined a swarm as a worker.</span><br><span class="line"></span><br><span class="line">$ docker-machine create -d virtualbox worker2</span><br><span class="line">$ docker-machine ssh worker2</span><br><span class="line">docker@worker1:~$ docker swarm join --token\ SWMTKN-1-49nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv-8vxv8rssmk743ojnwacrr2e7c \ 192.168.99.100:2377</span><br><span class="line"></span><br><span class="line">This node joined a swarm as a worker.</span><br><span class="line"></span><br><span class="line">$ docker node ls  <span class="comment"># 查看集群</span></span><br><span class="line">ID                        HOSTNAME  STATUS    AVAILABILITY  MANAGER   STATUS</span><br><span class="line">03g1y59jwfg7cf99w4lt0f662 worker2   Ready     Active</span><br><span class="line">9j68exjopxe7wfl6yuxml7a7j worker1   Ready     Active</span><br><span class="line">dxn1zf6l61qsb1josjja83ngz *         manager1  Ready         Active    Leader</span><br></pre></td></tr></table></figure></li></ul></li><li><p>部署服务(<code>docker service</code>):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker service create --replicas 3 -p 80:80 --name nginx nginx:1.13.7-alpine  </span><br><span class="line">$ docker service ls     </span><br><span class="line">$ docker service ps           <span class="comment"># 查看某个服务的详情  </span></span><br><span class="line">$ docker service logs nginx   <span class="comment"># 查看某个服务的日志</span></span><br><span class="line">$ docker service rm nginx</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 容器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git命令总结及问题解决</title>
      <link href="/posts/4bf6bbf0.html"/>
      <url>/posts/4bf6bbf0.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-15-Git</p><a id="more"></a><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><ul><li><p>关于 <code>/etc/profile 、 /etc/bashrc 与 ~/.bashrc、~/.bash_profile</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/profile <span class="comment"># 用于系统变量</span></span><br><span class="line"><span class="comment"># 该文件为系统的每个用户设置环境变量信息, 当用户第一次登录时, 该文件被执行, 并从/etc/profile.d目录的配置文件中搜集shell的设置</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/bashrc  <span class="comment"># 用于保存bash信息</span></span><br><span class="line"><span class="comment"># 为每个运行bash shell的用户执行此文件, 当bash shell 被打开, 该文件被读取</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~/.bashrc</span><br><span class="line"><span class="comment"># 该文件包含专用于你的bash shell 的bash信息, 当登录时以及每次打开新的shell时, 该文件被读取</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~/.bash_profile</span><br><span class="line"><span class="comment"># 每个用户都可使用该文件输入专用于自己使用的shell信息, 当用户登录时, 该文件仅仅执行一次, 默认情况下, 设置一些环境变量, 执行用户的.bashrc文件</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="Git-简介"><a href="#Git-简介" class="headerlink" title="Git 简介"></a>Git 简介</h3><h4 id="1-1-Git的历史："><a href="#1-1-Git的历史：" class="headerlink" title="1.1 Git的历史："></a>1.1 Git的历史：</h4><ul><li><p><strong>Linus torvalds</strong> 在1991年时发布了Linux操作系统，从那以后Linux系统便不断发展壮大，但因为不断有无数的开源爱好者提供源码，而Linus torvalds每次都是手动合入相关代码。一直到2002年，Linux系统经过十余年的不断发展，代码库已经庞大到无法再通过手工的方式管理了，但是Linus真的很不喜欢类似于 <strong>CVS或者Subversion</strong> 的一些版本控制系统，于是商业公司BitMover决定将其公司的BitKeeper分布式版本控制系统授权给Linux开发社区来免费使用，当时的BitKeeper可以比较文件内容的不同，还能够将出错的文档还原到历史某个状态，Linus终于放下了心里的石头。就这样平静的度过了三年时间，但是Linux社区聚集着太多的黑客人物，2005年时，那位曾经开发<strong>Samba服务程序的Andrew</strong>因为试图破解BitKeeper软件协议而激怒了BitMover公司，当即决定不再向Linux社区提供免费的软件授权了，此时的Linus其实也早已有自己编写分布式版本控制系统的打算了，于是便用C语言创建了Git分布式版本控制系统，并上传了Linux系统的源代码。</p></li><li><p><strong>CVS/SVN</strong>：集中式的版本控制系统 – 版本库是集中存放在中央服务器，工作时用的都是自己的电脑，所以要先从中央服务器取得最新的版本，然后开始干活，干完活了，再把自己的活推送给中央服务器。中央服务器就好比是一个图书馆，你要改一本书，必须先从图书馆借出来，然后回到家自己改，改完了，再放回图书馆。集中式版本控制系统最大的毛病就是必须联网才能工作;</p></li></ul><img src="/posts/4bf6bbf0/%E9%9B%86%E4%B8%AD%E5%BC%8F.jpg" class title="[集中式版本控制系统]">  <ul><li><strong>Git</strong>：分布式的版本控制系统 – 布式版本控制系统根本没有“中央服务器”，每个人的电脑上都是一个完整的版本库，工作时不需要联网。  </li></ul><h3 id="Git的原理："><a href="#Git的原理：" class="headerlink" title="Git的原理："></a>Git的原理：</h3><ul><li><p>本地工作目录：在工作目录中修改数据文件。  </p></li><li><p>暂存区域(stage/index)：将文件的快照放入暂存区域, 一般存放在<code>.git</code>目录下的<code>index</code>(.git/index)文件中  </p></li><li><p>Git数据库：将暂存区域的文件快照提交到Git仓库中。  </p><img src="/posts/4bf6bbf0/Git%E7%9A%84%E4%B8%89%E7%A7%8D%E5%B7%A5%E4%BD%9C%E7%8A%B6%E6%80%81.jpg" class title="[Git的工作原理图示]"> </li><li><p>文件上传至Git暂存区  </p><img src="/posts/4bf6bbf0/%E5%B0%86%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B0Git%E6%9A%82%E5%AD%98%E5%8C%BA.jpg" class title="[文件上传至Git暂存区]">  </li><li><p>文件上传至Git版本仓库  </p><img src="/posts/4bf6bbf0/%E5%B0%86%E6%96%87%E4%BB%B6%E6%8F%90%E4%BA%A4%E5%88%B0Git%E7%89%88%E6%9C%AC%E4%BB%93%E5%BA%93.jpg" class title="[文件上传至Git版本仓库]"> </li></ul><h3 id="Git-基本使用操作"><a href="#Git-基本使用操作" class="headerlink" title="Git 基本使用操作"></a>Git 基本使用操作</h3><h4 id="Git-的安装与配置命令："><a href="#Git-的安装与配置命令：" class="headerlink" title="Git 的安装与配置命令："></a>Git 的安装与配置命令：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git config 命令：</span></span><br><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;email@example.com&quot;</span></span><br><span class="line">git config --global core.editor vim</span><br><span class="line">git config -e [--global]</span><br><span class="line">git config --list</span><br></pre></td></tr></table></figure><h4 id="Git-初始化仓库命令："><a href="#Git-初始化仓库命令：" class="headerlink" title="Git 初始化仓库命令："></a>Git 初始化仓库命令：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先建立本地版本库并初始化本地版本库：</span></span><br><span class="line">mkdir anyue</span><br><span class="line"><span class="built_in">cd</span> anyue</span><br><span class="line">git init [project-name]</span><br><span class="line">git <span class="built_in">clone</span> [url]    <span class="comment"># 支持ssh、https、git 协议</span></span><br></pre></td></tr></table></figure><h4 id="Git-代码提交命令："><a href="#Git-代码提交命令：" class="headerlink" title="Git 代码提交命令："></a>Git 代码提交命令：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">touch readme.txt</span><br><span class="line">git add redame.txt        <span class="comment"># 将该文件添加到暂存区，每次修改都要进行文件的add</span></span><br><span class="line">git add .                 <span class="comment"># . 代表全部文件</span></span><br><span class="line">git commit -m <span class="string">&quot;add readme.txt&quot;</span><span class="comment"># 将暂存区的文件提交到Git版本仓库</span></span><br></pre></td></tr></table></figure><h4 id="Git-查看信息命令："><a href="#Git-查看信息命令：" class="headerlink" title="Git 查看信息命令："></a>Git 查看信息命令：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">git status   <span class="comment"># 显示变更的文件</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span>  <span class="comment"># 显示当前分支的版本历史</span></span><br><span class="line">git <span class="built_in">log</span> --<span class="built_in">stat</span>    <span class="comment"># 显示commit历史, 以及每次commit发生变更的文件</span></span><br><span class="line">git <span class="built_in">log</span> -5 --pretty=oneline   <span class="comment"># --pretty=format:%s </span></span><br><span class="line"></span><br><span class="line">git diff readme.txt   <span class="comment"># 查看difference，显示的格式正是Unix通用的diff格式</span></span><br><span class="line">  </span><br><span class="line">git reflog   <span class="comment"># 查看所有的历史记录，可以回退到未来</span></span><br><span class="line"> </span><br><span class="line">git reset --hard HEAD^  <span class="comment"># 回退到上一次提交版本</span></span><br><span class="line">git reset --hard 1094a <span class="comment"># 回退到 1049a 为SHA-1值</span></span><br></pre></td></tr></table></figure><h4 id="Git-分支命令"><a href="#Git-分支命令" class="headerlink" title="Git 分支命令"></a>Git 分支命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git branch      <span class="comment"># 列出所有本地分支 </span></span><br><span class="line">git branch -r   <span class="comment"># 列出远程分支</span></span><br><span class="line">git branch -a   <span class="comment"># 列出所有本地+远程分支</span></span><br><span class="line">git branch --<span class="built_in">set</span>-upstream [branch] [remote-branch]   <span class="comment"># 建立追踪关系, 在现有分支与指定的远程分支之间</span></span><br><span class="line">git branch anyue <span class="comment"># 创建anyue分支</span></span><br><span class="line"></span><br><span class="line">git checkout anyue<span class="comment"># 切换anyue分支， </span></span><br><span class="line">git checkout -b anyue  <span class="comment"># 创建并切换</span></span><br><span class="line">git checkout -    <span class="comment"># 切换到上一个分支</span></span><br><span class="line"></span><br><span class="line">git merge [branch]  <span class="comment"># 合并指定分支到当前分支</span></span><br></pre></td></tr></table></figure><h4 id="Git-标签命令"><a href="#Git-标签命令" class="headerlink" title="Git 标签命令"></a>Git 标签命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git tag  <span class="comment"># 列出所有标签</span></span><br><span class="line">git tag [tagname] [commit]   <span class="comment"># 新增一个tag在当前commit, 也可指定</span></span><br><span class="line">git tag -d [tagname]   <span class="comment"># delete</span></span><br><span class="line">git show [tag]   <span class="comment"># 查看tag信息</span></span><br></pre></td></tr></table></figure><h4 id="Git-远程同步命令"><a href="#Git-远程同步命令" class="headerlink" title="Git 远程同步命令"></a>Git 远程同步命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin hexo     <span class="comment"># 下载远程仓库的所有变动</span></span><br><span class="line">git merge FETCH_HEAD</span><br><span class="line"></span><br><span class="line">git remote -v</span><br><span class="line">git remote remove [remote-name]</span><br><span class="line"></span><br><span class="line">git remote add [shortname] [url]</span><br><span class="line">git remote add origin git@server-name:path/repo-name.git<span class="comment"># 关联远程仓库</span></span><br><span class="line"></span><br><span class="line">git pull [remote] [branch]   <span class="comment"># 取回远程仓库的变化，并与本地分支合并</span></span><br><span class="line">git push [remote] [branch]</span><br><span class="line">git push [remote] --force</span><br><span class="line">git push [remote] --all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关联remote库地址并与本地库同步合并</span></span><br><span class="line">git remote add origin https://github.com/githubusername/demo.git</span><br><span class="line">git pull --rebase origin master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送本地库并查看状态</span></span><br><span class="line">git push -u origin master</span><br><span class="line">git status</span><br><span class="line">git remote -v  <span class="comment"># 查看远程库地址</span></span><br><span class="line"></span><br><span class="line">git checkout master</span><br><span class="line">git merge anyue    <span class="comment"># 切换到master主分支，并把anyue分支合入到当前分支</span></span><br><span class="line"></span><br><span class="line">git branch -d anyue <span class="comment"># 删除anyue分支</span></span><br><span class="line">git <span class="built_in">log</span> --graph --pretty=oneline --abbrev-commit <span class="comment"># 查看分支变化</span></span><br></pre></td></tr></table></figure><h4 id="Git-撤销命令"><a href="#Git-撤销命令" class="headerlink" title="Git 撤销命令"></a>Git 撤销命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git checkout .   <span class="comment"># 恢复暂存区的所有文件到工作区</span></span><br><span class="line">git checkout [file]</span><br><span class="line">git checkout [commit] [file]</span><br><span class="line"></span><br><span class="line">git reset --hard  <span class="comment"># 重置暂存区与工作区, 与上一次commit保持一致</span></span><br><span class="line">git reset [file]  <span class="comment"># 重置暂存区指定文件,与上一次commit保持一致, 但工作区不变</span></span><br><span class="line">git reset [commit] <span class="comment"># 重置当前分支的指针为指定commit, 同时重置暂存区, 但工作区不变  </span></span><br><span class="line">git archive</span><br></pre></td></tr></table></figure><h3 id="Git-进阶操作-平时使用遇到问题总结"><a href="#Git-进阶操作-平时使用遇到问题总结" class="headerlink" title="Git 进阶操作(平时使用遇到问题总结)"></a>Git 进阶操作(平时使用遇到问题总结)</h3><h4 id="1、2019-05-14-出现Failed-to-connect-to-github-com-port-443-Timed-out："><a href="#1、2019-05-14-出现Failed-to-connect-to-github-com-port-443-Timed-out：" class="headerlink" title="1、2019-05-14 出现Failed to connect to github.com port 443: Timed out："></a>1、<strong>2019-05-14 出现Failed to connect to github.com port 443: Timed out</strong>：</h4><ul><li><p>原因：</p><ul><li>本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，ssh 阻塞了22端口，需要配置验证信息;</li></ul></li><li><p>解决问题方法：</p><ul><li><p><code>ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code> 一路回车，生成公钥/私钥于当前用户的.ssh目录；</p></li><li><p>将此目录下的<code>id_rsa.pub</code>里的内容复制到远端的git配置中(ssh)，在.ssh目录中新建<strong>config文件</strong>，将如下复制其中：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host github.com  </span><br><span class="line">User git  </span><br><span class="line">Hostname ssh.github.com </span><br><span class="line">PreferredAuthentications publickey  </span><br><span class="line">IdentityFile ~/.ssh/id_rsa </span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure></li><li><p>测试连接是否通畅：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com  或者  ssh -V git@github.com</span><br><span class="line">Hi anyue-1993! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="2、2019-5-17-fork-后所要进行的操作"><a href="#2、2019-5-17-fork-后所要进行的操作" class="headerlink" title="2、2019-5-17 fork 后所要进行的操作"></a>2、<strong>2019-5-17 fork 后所要进行的操作</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/anyue967/docker_practice.git 　<span class="comment">#clone至本地库</span></span><br><span class="line">git remote add upstream 源仓库地址<span class="comment">#增加源仓库地址，以便为了同步</span></span><br><span class="line">git checkout -b newbranch<span class="comment"># 切换至创建好的新分支，一般不在主分支上进行操作</span></span><br><span class="line">  Pull requests New pull request，</span><br><span class="line">git pull upstream master<span class="comment">#同步源仓  </span></span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/southday/p/10010876.html">操作参考文档</a></p><h4 id="3-2019-5-18-git-设置别名的操作"><a href="#3-2019-5-18-git-设置别名的操作" class="headerlink" title="3. 2019-5-18 git 设置别名的操作"></a>3. <strong>2019-5-18 git 设置别名的操作</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global alias.lol </span><br><span class="line"><span class="string">&quot;log --graph --decorate --pretty=oneline --all --abbrev-commit&quot;</span> <span class="comment"># 实现查看项目提交、合并等记录</span></span><br></pre></td></tr></table></figure><h4 id="4-git-出现-fatal-refusing-to-merge-unrelated-histories-错误"><a href="#4-git-出现-fatal-refusing-to-merge-unrelated-histories-错误" class="headerlink" title="4. git 出现 fatal: refusing to merge unrelated histories 错误"></a>4. <strong>git 出现 fatal: refusing to merge unrelated histories 错误</strong></h4><ul><li>原因:<ul><li>其实这个问题是因为 两个 根本不相干的 git 库, 一个是本地库, 一个是远端库, 然后本地要去推送到远端, 远端觉得这个本地库跟自己不相干, 所以告知无法合并.</li></ul></li><li>解决方法:  <ul><li><code>git pull origin master --allow-unrelated-histories</code></li></ul></li></ul><h4 id="5-2019-8-14-已存在的项目如何git"><a href="#5-2019-8-14-已存在的项目如何git" class="headerlink" title="5. 2019-8-14 已存在的项目如何git"></a>5. <strong>2019-8-14 已存在的项目如何git</strong></h4><ul><li><p>到github创建新仓库</p></li><li><p>cd到已存在项目的目录, </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;Initial commit&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>如下操作:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin Your<span class="string">&#x27;s Repo  # 若fatal: remote origin already exits</span></span><br><span class="line"><span class="string">git remote rm origin</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">git push -u origin master  # 失败执行</span></span><br><span class="line"><span class="string">git pull --rebase origin master  # 执行 push, 若不能pull代码, 执行</span></span><br><span class="line"><span class="string">git branch --set-upstream master origin/master</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="6-关于-git-checkout"><a href="#6-关于-git-checkout" class="headerlink" title="6. 关于 git checkout"></a>6. <strong>关于 git checkout</strong></h4><ul><li>作用:<ul><li>切换分支或恢复工作树文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git branch newbranch  <span class="comment"># 创建</span></span><br><span class="line"></span><br><span class="line">git checkout newbranch   <span class="comment"># 切换</span></span><br><span class="line">git checkout -b newbranch  <span class="comment"># 综合</span></span><br><span class="line"></span><br><span class="line">$ cat .git/HEAD   <span class="comment"># HEAD永远指向当前分支名</span></span><br><span class="line">ref: refs/heads/hexo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复暂存区的指定文件到工作区</span></span><br><span class="line">git checkout [file]</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="7-关于git-create-mode-100644"><a href="#7-关于git-create-mode-100644" class="headerlink" title="7. 关于git create mode 100644"></a>7. <strong>关于git create mode 100644</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/HikoQiu/kubeadm-install-k8s.git</span><br><span class="line"></span><br><span class="line">git remote -v</span><br><span class="line">  origin  https://github.com/HikoQiu/kubeadm-install-k8s.git (fetch)</span><br><span class="line">  origin  https://github.com/HikoQiu/kubeadm-install-k8s.git (push)</span><br><span class="line">git submodule init</span><br><span class="line">git submodule update</span><br><span class="line"></span><br><span class="line">git remote remove origin</span><br><span class="line">git remote add  origin https://github.com/anyue967/Linux.git</span><br><span class="line">git remote -v</span><br><span class="line">  origin  https://github.com/anyue967/Linux.git (fetch)</span><br><span class="line">  origin  https://github.com/anyue967/Linux.git (push)</span><br><span class="line"></span><br><span class="line">git remote add upstream https://github.com/HikoQiu/kubeadm-install-k8s</span><br><span class="line">git remote -v</span><br><span class="line">  origin  https://github.com/anyue967/Linux.git (fetch)</span><br><span class="line">  origin  https://github.com/anyue967/Linux.git (push)</span><br><span class="line">  upstream  https://github.com/HikoQiu/kubeadm-install-k8s.git (fetch)</span><br><span class="line">  upstream  https://github.com/HikoQiu/kubeadm-install-k8s.git (push)</span><br><span class="line"></span><br><span class="line">git add kubeadm-install-k8s/</span><br><span class="line">git commit -m <span class="string">&quot;add kubeadm-install-k8s&quot;</span></span><br><span class="line">  [master 7b23b5d] add kubeadm-install-k8s</span><br><span class="line">  57 files changed, 5369 insertions(+)</span><br><span class="line">  create mode 100644 docker/k8s/kubeadm-install-k8s/README.md</span><br><span class="line">  create mode 100644 docker/k8s/kubeadm-install-k8s/applications/Monocular</span><br><span class="line">  create mode 100644 docker/k8s/kubeadm-install-k8s/applications/Monocular</span><br><span class="line"></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h4 id="8-SVN"><a href="#8-SVN" class="headerlink" title="8. SVN"></a>8. SVN</h4><ul><li><p>初始化repo: <code>svnadmin create E:\SVN</code></p></li><li><p>修改配置文件(conf): <code>E:\SVN\conf</code> </p><ul><li><p><code>svnserve.conf</code>: </p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">anon-access = <span class="built_in">read</span> </span><br><span class="line">auth-access = write</span><br><span class="line">password-db = passwd </span><br><span class="line">authz-db = authz</span><br></pre></td></tr></table></figure><ul><li><p><code>authz</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[/]</span><br><span class="line">anyu967 = rw</span><br><span class="line"><span class="comment"># [/foo/bar]</span></span><br><span class="line">anyu967 =rw</span><br><span class="line">* =</span><br><span class="line"><span class="comment"># [repository:/baz/fuz]</span></span><br><span class="line">* =</span><br></pre></td></tr></table></figure></li><li><p><code>passwd</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[users]</span><br><span class="line"><span class="comment"># harry = harryssecret</span></span><br><span class="line"><span class="comment"># sally = sallyssecret</span></span><br><span class="line">anyu967 = 123456</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>启动SVN 服务: <code>svnserve -d -r E:/SVN</code></p></li><li><p>流程: <code>checkout(初次) update--&gt; lock--&gt; modified--&gt; commit</code></p></li></ul><h4 id="9-关于push后文件夹显示灰色"><a href="#9-关于push后文件夹显示灰色" class="headerlink" title="9. 关于push后文件夹显示灰色"></a>9. <strong>关于push后文件夹显示灰色</strong></h4><ul><li>删除clone后文件的<code>.git</code>,<code>.gitignore</code>,然后重新add-commit-push</li><li><code>git rm -r --cached FILENAME</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于grep、sed和awk的基础用法</title>
      <link href="/posts/a796df41.html"/>
      <url>/posts/a796df41.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-13-grep/sed/awk</p><a id="more"></a><h4 id="Linux报“-‘-usr-bin’-is-not-included-in-the-PATH-environment-variable-”的解决方法"><a href="#Linux报“-‘-usr-bin’-is-not-included-in-the-PATH-environment-variable-”的解决方法" class="headerlink" title="Linux报“ ‘/usr/bin’ is not included in the PATH environment variable ”的解决方法:"></a>Linux报“ ‘/usr/bin’ is not included in the PATH environment variable ”的解决方法:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">利用/usr/bin vi 编辑之前改过环境变量:</span><br><span class="line">/usr/bin vi ~/.bashrc</span><br></pre></td></tr></table></figure><h4 id="find-文件目录的查找"><a href="#find-文件目录的查找" class="headerlink" title="find(文件目录的查找)"></a>find(文件目录的查找)</h4><blockquote><p>+n(n天以前), -n(n天以内)   </p></blockquote><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-name</td><td>根据文件名匹配</td></tr><tr><td>-iname</td><td>忽略大小写</td></tr><tr><td>-regex pattern</td><td>基于正则进行文件名匹配</td></tr><tr><td>-user</td><td>根据属主匹配</td></tr><tr><td>-group</td><td>根据属组匹配</td></tr><tr><td>-uid</td><td>根据UID匹配</td></tr><tr><td>-gid</td><td>根据GID匹配</td></tr><tr><td>-nouser</td><td>匹配没有属主文件</td></tr><tr><td>-nogroup</td><td>匹配没有属组文件</td></tr><tr><td>-type f d c b l p s</td><td>匹配文件类型</td></tr><tr><td>-size k M G</td><td>根据文件大小</td></tr><tr><td>-atime -mtime -ctime</td><td>访问 修改 改变</td></tr><tr><td>-perm -mode /mode</td><td>根据权限匹配</td></tr><tr><td>-print -ls, ls -l</td><td>–</td></tr><tr><td>-exec/-ok command {} ;</td><td>–</td></tr><tr><td>-a -o -not</td><td>逻辑上的与 或 非</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find /data/ -name <span class="string">&quot;*.log&quot;</span> -<span class="built_in">type</span> f -size +10k -<span class="built_in">exec</span> cp &#123;&#125; /tmp \;   <span class="comment"># 区分大小写</span></span><br><span class="line">find /data/ -iname <span class="string">&quot;*.log&quot;</span> -<span class="built_in">type</span> f -size +10k -m perm 644 -<span class="built_in">exec</span> rm -rf &#123;&#125; \;  </span><br><span class="line">find /data/ -name <span class="string">&quot;*.log&quot;</span> -<span class="built_in">type</span> f -mtime +30 -size +10M -<span class="built_in">exec</span> mv &#123;&#125; /tmp/ \; <span class="comment"># +30 30天以前，-30 30天之内   </span></span><br><span class="line">find /data -not \( -user user1 -a -not -<span class="built_in">type</span> d \)</span><br></pre></td></tr></table></figure><h4 id="grep-文本搜索工具-行"><a href="#grep-文本搜索工具-行" class="headerlink" title="grep(文本搜索工具,行)"></a>grep(文本搜索工具,行)</h4><ul><li>grep [OPTION] PATTERN [FILE]</li><li>Search for PATTERN in each FILE.</li><li>Example: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -i <span class="string">&#x27;hello world&#x27;</span> menu.h main.c</span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td><code>--color=auto</code></td><td>对匹配到的文本着色显示</td></tr><tr><td>-v</td><td>反选</td></tr><tr><td>-i</td><td>忽略大小写</td></tr><tr><td>-n</td><td>显示行号</td></tr><tr><td>-c</td><td>统计匹配的行数</td></tr><tr><td>-f</td><td>根据模式文件处理</td></tr><tr><td>-E</td><td>使用ERE</td></tr><tr><td>-w</td><td>匹配整个单词</td></tr><tr><td>-e</td><td>实现多个选项</td></tr><tr><td>-o</td><td>仅显示匹配到的字符串</td></tr><tr><td>-A #</td><td>after, 后#行(tail -n)</td></tr><tr><td>-B #</td><td>before, 前#行(head -n)</td></tr><tr><td>-C #</td><td>前后各#行</td></tr></tbody></table><h5 id="示例"><a href="#示例" class="headerlink" title="示例:"></a>示例:</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -f, --file=FILE    # 从文件每一行获取匹配模式</span></span><br><span class="line">grep -f a.txt b.txt  <span class="comment"># 输出b文件在a文件相同的行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -v, --invert-match # 打印不匹配的行</span></span><br><span class="line">grep -v -f a.txt b.txt <span class="comment"># 输出b文件中在a文件不同的行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -e, --regexp=PATTERN # 使用模式匹配，可指定多个模式匹配</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;a bc de&quot;</span> |xargs -n1 |grep -e <span class="string">&#x27;a&#x27;</span> -e <span class="string">&#x27;bc&#x27;</span></span><br><span class="line">grep -E -v <span class="string">&quot;^$|^#&quot;</span> /etc/httpd/conf/httpd.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># -o, --only-matching  # 只打印匹配的内容</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;this is a test&quot;</span> |grep -o <span class="string">&#x27;is&#x27;</span>   <span class="comment"># is</span></span><br><span class="line">ifconfig eno16777736 |grep -o <span class="string">&quot;\&lt;\([0-9]\&#123;1,3\&#125;\.\)\&#123;3\&#125;[0-9]\&#123;1,3\&#125;\&gt;&quot;</span></span><br><span class="line">grep -Eo <span class="string">&quot;(([1-9]?[0-9]|1[0-9]&#123;2&#125;|2[0-4][0-9]|25[0-5])\.)&#123;3&#125;([1-9]?[0-9]|1[0-9]&#123;2&#125;|2[0-4][0-9]|25[0-5])&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -m, --max-count=NUM # 输出匹配的结果num数</span></span><br><span class="line">seq 1 20 |grep -m 5 -E <span class="string">&#x27;[0-9]&#123;2&#125;&#x27;</span>   <span class="comment"># 10 11 12 13 14 15</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -w, --word-regexp # 模式匹配整个单词</span></span><br><span class="line"><span class="comment"># xargs 能够捕获一个命令的输出，然后传递给另外一个命令</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;a ab abc abcd abcde&quot;</span> |xargs -n1 |grep -E -w -o <span class="string">&#x27;[a-z]&#123;2,3&#125;&#x27;</span> <span class="comment"># ab abc</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -c, --count </span></span><br><span class="line">seq 1 20 |grep -c -E <span class="string">&#x27;[0-9]&#123;2&#125;&#x27;</span>   <span class="comment"># 11</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -n, --line-number</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;a ab abc abcd abcde&quot;</span> |xargs -n1 |grep -n <span class="string">&#x27;de$&#x27;</span>  <span class="comment"># 5:abcde</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -B, --before-context=NUM</span></span><br><span class="line">seq 1 10 |grep 5 -B 3  <span class="comment"># 2 3 4 5  </span></span><br></pre></td></tr></table></figure><h4 id="sed-处理行-一次读取一行内容"><a href="#sed-处理行-一次读取一行内容" class="headerlink" title="sed(处理行,一次读取一行内容)"></a>sed(处理行,一次读取一行内容)</h4><blockquote><p>流编辑器, 过滤和替换文本.<br><code>sed [选项] &#39;模式1动作1; 模式2动作2; ...&#39; 待处理File</code>  </p></blockquote><blockquote><p>工作原理: sed命令将当前处理的行存储在临时缓冲区–<strong>模式空间(临时缓冲区)**进行处理, 处理完把结果输出, 并清空模式空间. 然后再将下一行读入模式空间进行处理输出, 以此类推, 直到最后一行；<br>还有一个空间叫</strong>保持空间, 又称暂存空间**, 可以暂时存放一些处理的数据,但不能直接输出, 只能放到模式空间输出；这两个空间其实就是在内存中初始化的一个内存区域, 存放正在处理的数据和临时存放的数据；<br>默认工作模式输出模式空间内容  </p></blockquote><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-n</td><td>只输出命令匹配的内容(不显示模式空间内容)</td></tr><tr><td>-r, –reg</td><td>开启支持扩展正则</td></tr><tr><td>-i</td><td>sed的修改结果直接应用于文件</td></tr><tr><td>-e</td><td>多个命令组合 或者用<code>;</code>分割</td></tr><tr><td>-f 脚本文件名</td><td>从sed脚本读入sed操作</td></tr></tbody></table><table><thead><tr><th>动作(定位)</th><th>说明</th></tr></thead><tbody><tr><td>x,y</td><td>x~y之间的行</td></tr><tr><td>x,+N</td><td>从x行开始向后的N的行</td></tr><tr><td>x,y!</td><td>查询不包括x和y行之间的行</td></tr><tr><td>$</td><td>最后一行</td></tr><tr><td>/pattern1/,/pattern2/</td><td>查询从匹配模式1~模式2之间的行</td></tr><tr><td>/pattern/pattern/</td><td>查询包含两个模式的行</td></tr><tr><td>x,/pattern/</td><td>从与x行~与pattern匹配行之间的行</td></tr></tbody></table><table><thead><tr><th>动作(编辑命令)</th><th>说明</th></tr></thead><tbody><tr><td>p</td><td>打印,输出指定行</td></tr><tr><td>d</td><td>删除指定行</td></tr><tr><td>a \string</td><td>在指定行后追加</td></tr><tr><td>i \string</td><td>在指定行前插入</td></tr><tr><td>c \string</td><td>行替换,用c后边的字符串替换原数据</td></tr><tr><td>r FILE</td><td>指定行后添加文件内容</td></tr><tr><td>w FILE</td><td>指定范围的内容另存至指定文件中</td></tr><tr><td>s/pattern/string/</td><td>查找并替换字串</td></tr><tr><td>n</td><td>读取下一个输入行, 用下一个命令处理新行</td></tr><tr><td>N</td><td>将当前读入行的下一行读取到当前的模式空间</td></tr><tr><td>g</td><td>将保持缓冲区的内容复制到模式缓冲区</td></tr><tr><td>G</td><td>将保持缓冲区的内容追加到模式缓冲区</td></tr></tbody></table><h5 id="示例-1"><a href="#示例-1" class="headerlink" title="示例:"></a>示例:</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -n, --quiet, --silent # 只输出匹配的字串到屏幕</span></span><br><span class="line">sed -n <span class="string">&#x27;/^blp5/p&#x27;</span> /etc/services     <span class="comment"># 打印匹配blp5开头的行</span></span><br><span class="line">tail /etc/services |sed -n <span class="string">&#x27;1,3p&#x27;</span>   <span class="comment"># 打印1-3行</span></span><br><span class="line">sed -n <span class="string">&#x27;1p;$p&#x27;</span> test.txt`            <span class="comment"># 打印第一行与最后一行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a i c r w命令</span></span><br><span class="line">tail /etc/services |sed <span class="string">&#x27;/blp5/i \test&#x27;</span>   </span><br><span class="line">tail /etc/services |sed <span class="string">&#x27;/blp5/a \test&#x27;</span>   </span><br><span class="line">tail /etc/services |sed <span class="string">&#x27;/blp5/c \test&#x27;</span>   <span class="comment"># 在blp5替换新行</span></span><br><span class="line">tail /etc/services |sed <span class="string">&#x27;2a \test&#x27;</span>        <span class="comment"># 在指定行下一行添加</span></span><br><span class="line">sed <span class="string">&#x27;1,2r /etc/issue&#x27;</span> /etc/fstab </span><br><span class="line">sed <span class="string">&#x27;/oot/w /tmp/oot/txt&#x27;</span> /etc/fstab  </span><br><span class="line"></span><br><span class="line"><span class="comment"># d 命令</span></span><br><span class="line">tail /etc/services |sed <span class="string">&#x27;/blp5/,$d&#x27;</span>   <span class="comment"># 删除匹配行直到最后一行 </span></span><br><span class="line">sed <span class="string">&#x27;/^#/d;/^$/d&#x27;</span> /etc/httpd/conf/httpd.conf</span><br><span class="line">sed <span class="string">&#x27;1,3d&#x27;</span> test.txt                   <span class="comment"># 删除1-3行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># s 命令</span></span><br><span class="line"><span class="comment"># 默认只替换每行中第一次被模式匹配的字串，g-全局替换，i-忽略大小写， </span></span><br><span class="line">tail /etc/services |sed <span class="string">&#x27;s/blp5/test/&#x27;</span>  <span class="comment"># 替换blp5字符串为test s/old/new/g</span></span><br><span class="line">tail /etc/services |sed <span class="string">&#x27;1,4s#blp5#test#&#x27;</span></span><br><span class="line">sed -i <span class="string">&#x27;/SELINUX/s/enforceing/disabled/g&#x27;</span> /etc/selinux/config  </span><br><span class="line">sed <span class="string">&#x27;s/l..e/&amp;r/g&#x27;</span></span><br><span class="line">sed <span class="string">&#x27;s#\(l..e\)#\1r#g&#x27;</span>  </span><br><span class="line">sed <span class="string">&#x27;s#l\(..e\)#L\1#g&#x27;</span>    <span class="comment"># like love</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># N,D,P--处理多行模式空间; H,h,G,g,x--将模式空间内容放入存储空间以便编辑</span></span><br><span class="line">  <span class="comment"># N: 不会清空模式空间内容，并从输入文件中读取下一行数据，追加到模式空间中，两行数据以换行符\n连接；</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 例子:  </span></span><br><span class="line">seq 6 |sed <span class="string">&#x27;/^$/d; 1,3G&#x27;</span>      <span class="comment"># 前3行每行后加入空行 ^$(空行)</span></span><br><span class="line">seq 6 |sed <span class="string">&#x27;n; d&#x27;</span>             <span class="comment"># 偶数行删除 1 3 5</span></span><br><span class="line">seq 6 |sed <span class="string">&#x27;/5/&#123;x; p; x&#125;&#x27;</span>     <span class="comment"># 匹配内容的前一行插入空行</span></span><br><span class="line">seq 6 |sed <span class="string">&#x27;N; s/\n/ /&#x27;</span>       <span class="comment"># 1 2   3 4    5 6</span></span><br><span class="line">sed <span class="string">&#x27;N;s#\n#=#g&#x27;</span>       </span><br><span class="line">seq 6 |sed <span class="string">&#x27;$!N; $!D&#x27;</span>         <span class="comment"># 5 6</span></span><br><span class="line">seq 6 |sed -n <span class="string">&#x27;/3/,/6/&#x27;</span>p      <span class="comment"># 3 4 5 6</span></span><br></pre></td></tr></table></figure><h4 id="awk-先读取行-再提取列"><a href="#awk-先读取行-再提取列" class="headerlink" title="awk (先读取行, 再提取列)"></a>awk (先读取行, 再提取列)</h4><blockquote><p>awk是一个处理文本的编程语言工具, 能用简短的程序处理标准输入或文件、数据排序、计算以及生成报表等等  </p></blockquote><blockquote><p>awk 引用shell变量使用 <code>-v</code> 或者 <code>双引号+单引号</code>即可  </p></blockquote>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk -v STR=hello <span class="string">&#x27;&#123;print STR, $NF&#125;&#x27;</span> test.txt`  </span><br><span class="line">STR=<span class="string">&#x27;Hello&#x27;</span>; <span class="built_in">echo</span> |awk <span class="string">&#x27;&#123;print &quot;&#x27;</span><span class="variable">$&#123;STR&#125;</span><span class="string">&#x27;&quot;&#125;&#x27;</span>`  </span><br></pre></td></tr></table></figure><img src="/posts/a796df41/awk.jpg" class title="[awk原理说明]"><h4 id="Usage"><a href="#Usage" class="headerlink" title="Usage:"></a>Usage:</h4><ul><li><code>awk 选项 &#39;条件1&#123;动作1&#125; 条件2&#123;动作2&#125; ...&#39; file</code>    </li><li><code>awk -F: &#39;&#123;print $1 &gt;&gt;&quot;/tmp/awk.log&quot;&#125;&#39; test.txt</code> # -F ‘[ :\t;]’</li><li>条件/模式: 条件也即模式: <code>BEGIN, 空模式, END模式</code></li><li>动作: <ul><li>{ print 动作1,动作2, … }       # 打印后则默认空格隔开; 若没有逗号隔开, 则会连在一起</li><li>{ print 动作1; print 动作2 }     # 多个动作用分号隔开<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F <span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123; if($3&lt;500) &#123; print $1,&quot;系统用户&quot; &#125; else&#123; print $1,&quot;普通用户&quot; &#125;&#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure></li></ul></li></ul><table><thead><tr><th>变量名</th><th>描述</th></tr></thead><tbody><tr><td>FS, Field Separator</td><td>输入字段(列)分隔符，默认是空格或制表符  BEGIN{FS=”:”}</td></tr><tr><td>OFS</td><td>输出字段(列)分隔符，默认是空格</td></tr><tr><td>RS, Record Separator</td><td>输入记录(行)分隔符，默认是换行符\n</td></tr><tr><td>ORS</td><td>输出记录(行分隔符，默认是换行符\n</td></tr><tr><td>–</td><td>–</td></tr><tr><td>NF, Number Field</td><td>统计当前记录中字段(列)个数，列号</td></tr><tr><td>NR, Number Record</td><td>行号，当前处理的文本行的行号</td></tr><tr><td>FNR</td><td>同NR，各文件分别计数的行号</td></tr><tr><td>$0</td><td>当前读入整行数据</td></tr><tr><td>$n</td><td>当前读入行的第n个字段，第n列</td></tr><tr><td>FILENAME</td><td>显示文件名</td></tr></tbody></table><h5 id="示例-2"><a href="#示例-2" class="headerlink" title="示例:"></a>示例:</h5><ul><li>FS OFS(输入输出字段分割符)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;print $1,$2&#125;&#x27;</span> /etc/passwd |head -n5        <span class="comment"># root x</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;;OFS=&quot;:&quot;&#125;&#123;print $1,$2&#125;&#x27;</span> /etc/passwd |head -n5<span class="comment"># root:x</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;print $1&quot;#&quot;$2&#125;&#x27;</span> /etc/passwd |head -n5        <span class="comment"># root#x</span></span><br></pre></td></tr></table></figure></li><li>RS ORS(输入输出记录分隔符)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;www.baidu.com/user/test.html&quot;</span> |awk <span class="string">&#x27;BEGIN&#123;RS=&quot;/&quot;&#125;&#123;print $0&#125;&#x27;</span>   <span class="comment"># user test.html</span></span><br></pre></td></tr></table></figure></li><li>NF(列号,统计当前字段个数) <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;a b c d e f&quot;</span>|awk <span class="string">&#x27;&#123;print NF&#125;&#x27;</span>    <span class="comment"># 6</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;a b c d e f&quot;</span>|awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span>   <span class="comment"># f</span></span><br></pre></td></tr></table></figure></li><li>NR FNR(行号,统计记录编号)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tail -n5 /etc/services |awk <span class="string">&#x27;&#123;print NR,$0&#125;&#x27;</span>  </span><br><span class="line">tail -n5 /etc/services |awk <span class="string">&#x27;END&#123;print NR&#125;&#x27;</span>   <span class="comment"># 5</span></span><br><span class="line">cat /etc/passwd |grep <span class="string">&quot;/bin/bash&quot;</span> |awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125; &#123;printf $1 &quot;\t&quot; $3 &quot;\t 行号:&quot;NR &quot;\t 字段数:&quot;NF &quot;\n&quot;&#125;&#x27;</span></span><br></pre></td></tr></table></figure></li><li>格式化输出<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk -F: <span class="string">&#x27;&#123;print &quot;%-12s %-6s %-8s\n&quot;, $1, $2, $NF&#125;&#x27;</span> /etc/passwd</span><br><span class="line">netstat -an |awk <span class="string">&#x27;$6 ~ /LISTEN/&amp;&amp;NR&gt;=1&amp;&amp;NR&lt;=10 &#123;print NR, $4, $5,$6&#125;&#x27;</span> OFS=<span class="string">&quot;\t&quot;</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>须知: 在awk中, 有3种情况表达式为假: 数字是0, 空字符串和未定义的值. 数值运算, 未定义变量初始值为0; 字符运算; 未定义变量初始值为空.</p></blockquote><ul><li><p>awk是按行处理的，每次读取一行，并遍历打印每个字段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;i=1;while(i&lt;=NF)&#123;print $1;i++&#125;&#125;&#x27;</span> file</span><br><span class="line">awk <span class="string">&#x27;&#123;for(i=NF;i&gt;=1;i--)&#123;print $i&quot; &quot;&#125;;print&quot;&quot;&#125;&#x27;</span> file</span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;for(i=1;i&lt;=5;i++)&#123;if(i==3)&#123;break&#125;;print i&#125;&#125;&#x27;</span>file    <span class="comment"># 1 2</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;for(i=1;i&lt;=5;i++)&#123;if(i==3)&#123;continue&#125;;print i&#125;&#125;&#x27;</span> file <span class="comment"># 1 2 4 5</span></span><br></pre></td></tr></table></figure></li><li><p>统计passwd文件用户数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F<span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;BEGIN&#123;count=0;&#125; &#123;name[count]=$1; count++;&#125; END&#123;for(i=0; i&lt;NR; i++) print i, name[i]&#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure></li></ul><h4 id="Nginx-日志分析"><a href="#Nginx-日志分析" class="headerlink" title="Nginx 日志分析:"></a>Nginx 日志分析:</h4><blockquote><p>114.242.26.65 - - [22/Mar/2017:08:41:08 +0800] “GET /css/20151103Style.css HTTP/1.1” 200 9041 “<a href="http://sz.cdn-my.mobiletrain.org/&quot;">http://sz.cdn-my.mobiletrain.org/&quot;</a> “Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) ApplwWebKit/537.36 (HTML, like Gecko) Chrome/50.02661.102 Safari/537.36”  </p></blockquote><ul><li><p>1.统计2017年9月5日 PV量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&#x27;05/Sep/2017&#x27;</span> cd.mobiletrain.org.log |wc -l  </span><br><span class="line">awk <span class="string">&#x27;$4&gt;=&quot;[05/sep/2017:08:00:00&quot; &amp;&amp; &quot;[05/sep/2017:09:00:00&quot; &#123;print $0&#125;&#x27;</span> sz.mobiletrain.log |wc -l</span><br></pre></td></tr></table></figure></li><li><p>2.统计2017年9月5日 一天访问最多的10个IP(top 10)  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&#x27;05/Sep/2017&#x27;</span> sz.mobiletrain.org.log |awk <span class="string">&#x27;&#123;ips[$1]++&#125; END&#123;for(i in ips)&#123;print i,ips[i]&#125;&#125;&#x27;</span> |sort -k2 -nr |head -n10    </span><br><span class="line">awk <span class="string">&#x27;05\/Sep\/2017&#x27;</span> sz.mobiletrain.org.log |awk <span class="string">&#x27;&#123;ips[$1]++&#125; END&#123;for(i in ips)&#123;print i,ips[i]&#125;&#125;&#x27;</span> |sort -k2 -nr |head -n10</span><br></pre></td></tr></table></figure></li><li><p>3.统计2017年9月5日 访问&gt;100次的IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&#x27;05/Sep/2017&#x27;</span> sz.mobiletrain.org.log |awk <span class="string">&#x27;&#123;ips[$1]++&#125; END&#123;for(i in ips)&#123;if(ips[i]&gt;100)&#123;print i,ips[i]&#125;&#125;&#125;&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>4.统计2017年9月5日 访问最多的10个页面($request top 10)  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;/05\/Sep\/2017/ &#123;urls[$7]++&#125; END&#123;for(i in urls)&#123;print i,urls[i]&#125;&#125;&#x27;</span> sz.mobiletrain.org.log |sort -k1 -rn |head -n10</span><br></pre></td></tr></table></figure></li><li><p>5.统计2017年9月5日 每个url访问内容总大小($body_bytes_sent)  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;/05\/Sep\/2017/ &#123;urls[$7]++; size[$7]+=$10&#125; END&#123;for(i in urls)&#123;print urls[i],size[i],i&#125;&#125;&#x27;</span> sz.mobiletrain.org.log |sort -k1 -rn |head -n10</span><br></pre></td></tr></table></figure></li><li><p>6.统计2017年9月5日 每个IP访问状态码数量($status)  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;/05\/Sep/\2017/ &#123;ip_code[$1&quot; &quot;$9]++&#125; END&#123;for(i in ip_code)&#123;print i,ip_code[i]&#125;&#125;&#x27;</span> sz.mobiletrain.org |sort -k1 -rn |head -n10</span><br></pre></td></tr></table></figure></li><li><p>7.统计2017年9月5日 访问状态码为404及出现次数($status)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;/05\/Sep\/2017/ &#123;if($9==&quot;404&quot;)&#123;ip_code[$1&quot; &quot;$9]++&#125; END&#123;for(i in ip_code)&#123;print i,ip_code[i]&#125;&#125;&#125;&#x27;</span> sz.mobiletrain.org.log</span><br></pre></td></tr></table></figure></li><li><p>8.统计前一分钟的PV量(带入外部变量)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date=$(date -d <span class="string">&#x27;-1 minute&#x27;</span> +%d/%b/%Y:%H:%M); awk -v date=<span class="variable">$date</span> <span class="string">&#x27;$0 ~ date &#123;i++&#125; END&#123;print i&#125;&#x27;</span> sz.mobiletrain.org.log</span><br></pre></td></tr></table></figure></li><li><p>9.统计2017年9月5日 8:30-9:00, 访问状态码是404  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;$4&gt;=&quot;[05/Sep/2017:08:30:00 &amp;&amp; [05/Sep/2017:09:00:00&quot; &#123;if($9==&quot;404&quot;)&#123;ip_code[$1&quot; &quot;$9]++&#125; for(i in ip_code)&#123;print i,ip_code[i]&#125;&#125;&#x27;</span> sz.mobiletrain.org.log</span><br></pre></td></tr></table></figure></li><li><p>10.统计2017年9月5日各种状态码数量  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;/05\/09\/2017/ &#123;code[$9]++;total++&#125; END&#123;for(i in code)&#123;printf i&quot;\t&quot;; printf code[i]&quot;\t&quot;; printf &quot;%.2f&quot;,code[i]/total*100; print &quot;%&quot;&#125;&#125;&#x27;</span> sz.mobiletrain.org.log</span><br></pre></td></tr></table></figure></li><li><p>11.统计独立IP数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> access.log |sort -r |uniq -c |wc -l</span><br></pre></td></tr></table></figure></li><li><p>12.统计总PV量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $7&#125;&#x27;</span> access.log |wc -l</span><br></pre></td></tr></table></figure></li><li><p>13.UV统计</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $11&#125;&#x27;</span> access.log |sort -r |uniq -c |wc -l</span><br></pre></td></tr></table></figure></li><li><p>14.截至目前为止访问量前20的IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> access.log |sort |uniq -c |sort -nr |head -n20</span><br></pre></td></tr></table></figure></li><li><p>15.早上9-12总请求量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">&quot;/2019:09:00&quot;</span>/,/2019:12:00/<span class="string">&quot;p access.log</span></span><br><span class="line"><span class="string">`awk &#x27;/2019:09:00/,/2019:12:00&#x27; access.log |wc -l</span></span><br></pre></td></tr></table></figure></li><li><p>16.状态码404、502、503、500、499等错误信息页面，打错误出现次数大于20的IP地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;if($9~/502|499|500|503|404/) print $1, $9&#125;&#x27;</span> access.log |sort |uniq -c |sort -nr |awk <span class="string">&#x27;&#123;if($1&gt;20) print $2&#125;&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>17.访问最多的页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $7&#125;&#x27;</span> access.log |sort |uniq -c |sort -nr |head -n20</span><br></pre></td></tr></table></figure></li><li><p>18.请求处理时间大于5s的URL，打印出时间、URL、访客、IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;if($NF&gt;5) print $NF, $7, $1&#125;&#x27;</span> access.log |sort -nr |more</span><br></pre></td></tr></table></figure></li><li><p>continue: 在循环中不执行continue下面的代码，转而进入下一轮循环</p></li><li><p>break: 结束并退出整个循环</p></li><li><p>exit: 退出脚本，常带一个整数给系统，如 exit 0</p></li><li><p>return: 在函数中将数据返回或返回一个结果给调用函数的脚本</p></li><li><p>break: 是立马跳出循环, continue: 是跳出当前条件循环, 继续下一轮条件循环, exit: 是直接退出整个脚本</p></li></ul><h4 id="琐碎知识点"><a href="#琐碎知识点" class="headerlink" title="琐碎知识点:"></a>琐碎知识点:</h4><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td>$0</td><td>脚本自身名字</td></tr><tr><td>$?</td><td>返回上条命令是否执行成功, 0执行成功, 非零失败</td></tr><tr><td>S#</td><td>参数总数</td></tr><tr><td>$*</td><td>参数都被看作一个字符串</td></tr><tr><td>$@</td><td>每个参数被看作独立字符串</td></tr><tr><td>$$</td><td>当前进程PID</td></tr><tr><td>$!</td><td>上一条运行后台进程PID</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于正则表达式</title>
      <link href="/posts/a6e6cc3d.html"/>
      <url>/posts/a6e6cc3d.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-13-正则表达式</p><a id="more"></a><h2 id="关于正则-规则"><a href="#关于正则-规则" class="headerlink" title="关于正则(规则)"></a>关于正则(规则)</h2><blockquote><p>字符:<code>\</code><br>意义：对于字符, 通常表示按字面意义, 指出接着的字符为特殊字符<br>例如：<code>/b</code>, 通过在 b 前面加一个反斜杠\，也就是 <code>/\b/</code>, 则该字符变成特殊字符, 表示匹配一个单词的分界线。</p></blockquote><h3 id="基本正则表达式元字符"><a href="#基本正则表达式元字符" class="headerlink" title="基本正则表达式元字符"></a>基本正则表达式元字符</h3><table><thead><tr><th align="left">基本正则元字符1</th><th align="left">说明  <strong>次数匹配(贪婪模式)</strong></th></tr></thead><tbody><tr><td align="left">.</td><td align="left">匹配除换行符外的任意单个的字符</td></tr><tr><td align="left">*</td><td align="left">匹配前面字符<code>任意次</code>, 包括0次{0,}</td></tr><tr><td align="left">.*</td><td align="left">任意长度的任意字符</td></tr><tr><td align="left"><code>\?</code></td><td align="left">匹配其前面字符0或1次</td></tr><tr><td align="left"><code>\+</code></td><td align="left">匹配其前面字符至少1次</td></tr><tr><td align="left"><code>\&#123;n\&#125;</code></td><td align="left">匹配其前面字符n次</td></tr><tr><td align="left"><code>\&#123;m,n\&#125;</code></td><td align="left">匹配其前面字符至少m次, 至多n次</td></tr><tr><td align="left"><code>\&#123;,n\&#125;</code></td><td align="left">匹配其前面字符至多n次</td></tr><tr><td align="left"><code>\&#123;n,\&#125;</code></td><td align="left">匹配其前面字符至少n次</td></tr></tbody></table><table><thead><tr><th align="left">基本正则元字符2</th><th align="left">说明  <strong>位置锚定</strong></th></tr></thead><tbody><tr><td align="left">^</td><td align="left">行首定位</td></tr><tr><td align="left">$</td><td align="left">行尾定位</td></tr><tr><td align="left">^$</td><td align="left">匹配空白行</td></tr><tr><td align="left"><code>^PATTERN$</code></td><td align="left">用于匹配整行, 空白行:^[[:space:]]*$</td></tr><tr><td align="left">&lt;或者\b</td><td align="left">词首, 用于单词模式左侧</td></tr><tr><td align="left"><code>\&gt;</code>或者\b</td><td align="left">词尾, 用于单词模式右侧</td></tr><tr><td align="left"><code>\&lt;PATTERN&gt;\</code></td><td align="left">匹配整个单词(数字、字母与下划线都算单词)</td></tr><tr><td align="left"><code>\(\)</code></td><td align="left">当作一个整体处理,E:<code>\(root\)</code></td></tr></tbody></table><table><thead><tr><th align="left">基本正则元字符3</th><th align="left">说明  <strong>字符匹配</strong></th></tr></thead><tbody><tr><td align="left">[]</td><td align="left">匹配指定范围内的任意单个字符</td></tr><tr><td align="left">[^]</td><td align="left">匹配指定范围外的任意单个字符</td></tr><tr><td align="left">[:alnum:]</td><td align="left">匹配任何英文大小写字母, [a-zA-Z]</td></tr><tr><td align="left">[:alpha:]</td><td align="left">字母与数字[a-zA-Z0-9]</td></tr><tr><td align="left">[:lower:]</td><td align="left">小写字母[a-z] [:upper:]</td></tr><tr><td align="left">[:blank:]</td><td align="left">空白字符(空格和制表符)</td></tr><tr><td align="left">[:space:]</td><td align="left">水平和垂直的空白字符</td></tr><tr><td align="left">[:cntrl:]</td><td align="left">不可打印的控制字符(退格, 删除…)</td></tr><tr><td align="left">[:digit:]</td><td align="left">[0-9] [:xdigit:]十六进制</td></tr><tr><td align="left">[:graph:]</td><td align="left">可打印的非空白字符</td></tr><tr><td align="left">[:print:]</td><td align="left">可打印字符</td></tr><tr><td align="left">[:punct:]</td><td align="left">标点符号</td></tr></tbody></table><ul><li><p><code>*</code> – {0,}, 匹配前导符任意次</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. &#x2F;a*&#x2F;意味匹配0个或多个a</span><br><span class="line">2. 为了匹配字面上的*，在a前面加一个反斜杠；例如：&#x2F;a\*&#x2F;匹配&#39;a*&#39;</span><br><span class="line">3. &#x2F;bo*&#x2F;匹配&quot;A ghost booooed&quot;中的&#39;boooo&#39;或&quot;A bird warbled&quot;中的&#39;b&#39;，但不匹配&quot;A goat grunted&quot;中的任何字符。</span><br></pre></td></tr></table></figure></li><li><p><code>.</code> （点）– 匹配除换行符外的所有单个的字符 Shell(?)  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. &#x2F;&lt;[^&lt;&gt;]+&gt;&#x2F;g</span><br><span class="line">2. &#x2F;.n&#x2F;匹配&quot;nay, an apple is on the tree&quot;中的&#39;an&#39;和&#39;on&#39;，但不匹配&#39;nay&#39; </span><br><span class="line">3. 匹配123：echo -e &quot;123\n456&quot; |grep 1.3  </span><br><span class="line">4. &#x2F;&lt;.*&gt;&#x2F;     </span><br></pre></td></tr></table></figure></li><li><p><code>.*</code> – 任意多个字符</p></li><li><p><code>[xyz]</code> 匹配任意字符, 指定范围的一个字符   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. &#x2F;1[abc]2&#x2F;&#96;</span><br><span class="line">2. [abcd]跟[a-c]一样,匹配&quot;brisket&quot;中的&#39;b&#39;和&quot;ache&quot;中的&#39;c</span><br><span class="line">3. [a-z]、[0-9]、[^a]</span><br></pre></td></tr></table></figure></li><li><p><code>[^xyz]</code> – 匹配除了列出的字符外的所有东西</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. [^abc]和[^a-c]等价，它们最早匹配&quot;brisket&quot;中的&#39;r&#39;和&quot;chop.&quot;中的&#39;h&#39;</span><br></pre></td></tr></table></figure></li><li><p><code>^ --行首，$ --行尾</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 匹配以abc开头的行：echo -e &quot;abc\nxyz&quot; |grep ^abc</span><br><span class="line">2. 匹配以xyz结尾的行：echo -e &quot;abc\nxyz&quot; |grep xyz$</span><br><span class="line">3. &#x2F;^\w+@[a-z0-9]+\.[a-z]&#123;2,4&#125;$&#x2F; -- 邮箱验证</span><br><span class="line">4. &#x2F;^\s*|\s*$&#x2F; -- 去掉首尾Space</span><br><span class="line">5. &#x2F;[\u4e00-\u9fa5]&#x2F; -- 匹配中文 </span><br></pre></td></tr></table></figure></li><li><p><code>\&lt;</code> – 词首定位符: &lt;love  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">匹配开始是123和1234：echo -e &quot;1\n12\n123\n1234&quot; |grep &#39;\&lt;123&#39;</span><br></pre></td></tr></table></figure></li><li><p><code>\&gt;</code> – 词尾定位符: love&gt;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">匹配结束是1234：echo -e &quot;1\n12\n123\n1234&quot; |grep &#39;4\&gt;&#39;</span><br></pre></td></tr></table></figure></li><li><p><code>\(\)</code>  – 匹配稍后使用的字符标签 \1, \2, \3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:% s&#x2F;172.16.130.1&#x2F;172.16.130.5&#x2F;</span><br><span class="line">:% s&#x2F;\(172.16.130.\)1\15&#x2F;</span><br><span class="line">:% s&#x2F;\(172.\)\(16.\)\(130.\)1&#x2F;\1\2\35&#x2F;</span><br><span class="line">:3,9 s&#x2F;\(.*\)&#x2F;#\1&#x2F; -- 添加注释</span><br></pre></td></tr></table></figure></li></ul><h3 id="扩展正则表达式元字符"><a href="#扩展正则表达式元字符" class="headerlink" title="扩展正则表达式元字符"></a>扩展正则表达式元字符</h3><ul><li><p><code>+</code> – {1,}, 匹配一个或多个前导字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. &#x2F;a+&#x2F;匹配&quot;candy&quot;中的&#39;a&#39;和&quot;caaaaaaandy.&quot;中的所有&#39;a&#39;</span><br></pre></td></tr></table></figure></li><li><p><code>?</code> – {0,1}, 匹配零个或一个前导字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. &#x2F;e?le?&#x2F;匹配&quot;angel&quot;中的&#39;el&#39;和&quot;angle.&quot;中的&#39;le&#39;</span><br></pre></td></tr></table></figure></li><li><p><code>字符x|y</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. &#x2F;green|red&#x2F;匹配&quot;green apple&quot;中的&#39;green&#39;和&quot;red apple.&quot;中的&#39;red&#39;</span><br></pre></td></tr></table></figure></li><li><p><code>(expr1) (expr2) \1 \2</code>  – 标签匹配字符</p></li><li><p><code>&#123;n,m&#125;</code> – 字符重复出现m到n次</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. &#x2F;a&#123;1,3&#125;&#x2F;不匹配&quot;cndy&quot;中的任何字符，但匹配 &quot;candy,&quot;中的&#39;a&#39;，&quot;caandy,&quot; 中的前面两个&#39;a&#39;和&quot;caaaaaaandy&quot;中前面的三个&#39;a&#39;，</span><br><span class="line">2. 注意：即使&quot;caaaaaaandy&quot; 中有很多个&#39;a&#39;，但只匹配前面的三个&#39;a&#39;即&quot;aaa&quot;</span><br></pre></td></tr></table></figure></li><li><p><code>&#123;n,&#125;</code> – 字符重复出现n次以上, 匹配至少n个前面的字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. &#x2F;a&#123;2,&#125;不匹配&quot;candy&quot;中的&#39;a&#39;，但匹配&quot;caandy&quot;中的所有&#39;a&#39;和&quot;caaaaaaandy.&quot;中的所有&#39;a&#39;</span><br></pre></td></tr></table></figure></li><li><p><code>&#123;,m&#125;</code> – 至少不限， 至多m次</p></li><li><p><code>&#123;n&#125;</code> – 正好n次,匹配前面的n个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. &#x2F;a&#123;2&#125;&#x2F;不匹配&quot;candy,&quot;中的&#39;a&#39;,但匹配&quot;caandy&quot;中的所有&#39;a&#39;和&quot;caaandy.&quot;中前面的两个&#39;a&#39;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p><code>\D 等价于 [^0-9]、\W 等价于 [^a-z0-9_]、\S</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. &#x2F;\D&#x2F;或&#x2F;[^0-9]&#x2F;匹配&quot;B2 is the suite number.&quot;中的&#39;B&#39;</span><br><span class="line">2. &#x2F;\W&#x2F;或者&#x2F;[^$A-Za-z0-9_]&#x2F;匹配&quot;50%.&quot;中的&#39;%&#39;</span><br><span class="line">3. \S --匹配除white空格符以外的一个单个的字符，等价于[^ \f\n\r\t\v]&#x2F;\S&#x2F;\w*匹配&quot;foo bar.&quot;中的&#39;foo&#39;</span><br></pre></td></tr></table></figure></li><li><p><code>\d、\d\d、\d+、g</code> – 获取匹配 / 替换的项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. 匹配一个数字，等价于[0-9]，&#x2F;\d&#x2F;或&#x2F;[0-9]&#x2F;匹配&quot;B2 is the suite number.&quot;中的&#39;2&#39;</span><br></pre></td></tr></table></figure></li><li><p><code>\b</code> –匹配一个单词的分界线，比如一个空格(不要与[\b]混淆)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. &#x2F;\bn\w&#x2F;匹配&quot;noonday&quot;中的&#39;no&#39;，&#x2F;\wy\b&#x2F;匹配&quot;possibly yesterday.&quot;中的&#39;ly&#39;</span><br></pre></td></tr></table></figure></li><li><p><code>\B</code> –匹配一个单词的非分界线 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. &#x2F;\w\Bn&#x2F;匹配&quot;noonday&quot;中的&#39;on&#39;，&#x2F;y\B\w&#x2F;匹配&quot;possibly yesterday.&quot;中的&#39;ye&#39;</span><br></pre></td></tr></table></figure></li><li><p><code>\cX</code> –X是一个控制字符。匹配一个字符串的控制字符</p></li><li><p><code>字符[\b]</code> –匹配一个空格</p></li></ul><h2 id="常用正则表达式"><a href="#常用正则表达式" class="headerlink" title="常用正则表达式:"></a>常用正则表达式:</h2><h3 id="一、校验数字的表达式"><a href="#一、校验数字的表达式" class="headerlink" title="一、校验数字的表达式"></a>一、校验数字的表达式</h3><p>数字：<code>^[0-9]*$</code><br>n位的数字：<code>^\d&#123;n&#125;$</code><br>至少n位的数字：<code>^\d&#123;n,&#125;$</code><br>m-n位的数字：<code>^\d&#123;m,n&#125;$</code><br>零和非零开头的数字：<code>^(0|[1-9][0-9]*)$</code><br>非零开头的最多带两位小数的数字：<code>^([1-9][0-9]*)+(\.[0-9]&#123;1,2&#125;)?$</code><br>带1-2位小数的正数或负数：<code>^(\-)?\d+(\.\d&#123;1,2&#125;)$</code><br>正数、负数、和小数：<code>^(\-|\+)?\d+(\.\d+)?$</code><br>有两位小数的正实数：<code>^[0-9]+(\.[0-9]&#123;2&#125;)?$</code><br>有1~3位小数的正实数：<code>^[0-9]+(\.[0-9]&#123;1,3&#125;)?$</code><br>非零的正整数：<code>^[1-9]\d*$ 或 ^([1-9][0-9]*)&#123;1,3&#125;$</code> 或 <code>^\+?[1-9][0-9]*$</code><br>非零的负整数：<code>^\-[1-9][]0-9&quot;*$</code> 或 <code>^-[1-9]\d*$</code><br>非负整数：<code>^\d+$</code> 或 <code>^[1-9]\d*|0$</code><br>非正整数：<code>^-[1-9]\d*|0$</code> 或 <code>^((-\d+)|(0+))$</code><br>非负浮点数：<code>^\d+(\.\d+)?$</code> 或 <code>^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$</code><br>非正浮点数：<code>^((-\d+(\.\d+)?)|(0+(\.0+)?))$</code> 或 <code>^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$</code><br>正浮点数：<code>^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$</code> 或 <code>^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$</code><br>负浮点数：<code>^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$</code> 或 <code>^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$</code><br>浮点数：<code>^(-?\d+)(\.\d+)?$</code> 或 <code>^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$</code>  </p><h3 id="二、校验字符的表达式"><a href="#二、校验字符的表达式" class="headerlink" title="二、校验字符的表达式"></a>二、校验字符的表达式</h3><p>汉字：<code>^[\u4e00-\u9fa5]&#123;0,&#125;$</code><br>英文和数字：<code>^[A-Za-z0-9]+$</code> 或 <code>^[A-Za-z0-9]&#123;4,40&#125;$</code><br>长度为3-20的所有字符：<code>^.&#123;3,20&#125;$</code><br>由26个英文字母组成的字符串：<code>^[A-Za-z]+$</code><br>由26个大写英文字母组成的字符串：<code>^[A-Z]+$</code><br>由26个小写英文字母组成的字符串：<code>^[a-z]+$</code><br>由数字和26个英文字母组成的字符串：<code>^[A-Za-z0-9]+$</code><br>由数字、26个英文字母或者下划线组成的字符串：<code>^\w+$</code> 或 <code>^\w&#123;3,20&#125;$</code><br>中文、英文、数字包括下划线：<code>^[\u4E00-\u9FA5A-Za-z0-9_]+$</code><br>中文、英文、数字但不包括下划线等符号：<code>^[\u4E00-\u9FA5A-Za-z0-9]+$</code> 或 <code>^[\u4E00-\u9FA5A-Za-z0-9]&#123;2,20&#125;$</code><br>可以输入含有<code>^%&amp;&#39;,;=?$\&quot;</code>等字符：<code>[^%&amp;&#39;,;=?$\x22]+</code><br>禁止输入含有<del>的字符：`[^</del>\x22]+`  </p><h3 id="三、特殊需求表达式"><a href="#三、特殊需求表达式" class="headerlink" title="三、特殊需求表达式"></a>三、特殊需求表达式</h3><p>Email地址：<code>^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$</code><br>域名：<code>[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;(/.[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;)+/.?</code><br>InternetURL：<code>[a-zA-z]+://[^\s]*</code> 或 <code>^http://([\w-]+\.)+[\w-]+(/[\w-./?%&amp;=]*)?$</code><br>手机号码：<code>^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d&#123;8&#125;$</code><br>电话号码(“XXX-XXXXXXX”、”XXXX-XXXXXXXX”、”XXX-XXXXXXX”、”XXX-XXXXXXXX”、”XXXXXXX”和”XXXXXXXX)：<code>^(\(\d&#123;3,4&#125;-)|\d&#123;3.4&#125;-)?\d&#123;7,8&#125;$</code><br>国内电话号码(0511-4405222、021-87888822)：<code>\d&#123;3&#125;-\d&#123;8&#125;|\d&#123;4&#125;-\d&#123;7&#125;</code><br>电话号码正则表达式（支持手机号码，3-4位区号，7-8位直播号码，1－4位分机号）: <code>((\d&#123;11&#125;)|^((\d&#123;7,8&#125;)|(\d&#123;4&#125;|\d&#123;3&#125;)-(\d&#123;7,8&#125;)|(\d&#123;4&#125;|\d&#123;3&#125;)-(\d&#123;7,8&#125;)-(\d&#123;4&#125;|\d&#123;3&#125;|\d&#123;2&#125;|\d&#123;1&#125;)|(\d&#123;7,8&#125;)-(\d&#123;4&#125;|\d&#123;3&#125;|\d&#123;2&#125;|\d&#123;1&#125;))$)</code><br>身份证号(15位、18位数字), 最后一位是校验位, 可能为数字或字符X: <code>(^\d&#123;15&#125;$)|(^\d&#123;18&#125;$)|(^\d&#123;17&#125;(\d|X|x)$)</code><br>帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：<code>^[a-zA-Z][a-zA-Z0-9_]&#123;4,15&#125;$</code><br>密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：<code>^[a-zA-Z]\w&#123;5,17&#125;$</code><br>强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在 8-10 之间)：<code>^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]&#123;8,10&#125;$</code><br>强密码(必须包含大小写字母和数字的组合，可以使用特殊字符，长度在8-10之间)：<code>^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).&#123;8,10&#125;$</code><br>日期格式：<code>^\d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;</code><br>一年的12个月(01～09和1～12)：<code>^(0?[1-9]|1[0-2])$</code><br>一个月的31天(01～09和1～31)：<code>^((0?[1-9])|((1|2)[0-9])|30|31)$</code><br>钱的输入格式：<br>有四种钱的表示形式我们可以接受:”10000.00” 和 “10,000.00”, 和没有 “分” 的 “10000” 和 “10,000”：<code>^[1-9][0-9]*$</code><br>这表示任意一个不以0开头的数字,但是,这也意味着一个字符”0”不通过,所以我们采用下面的形式：<code>^(0|[1-9][0-9]*)$</code><br>一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：<code>^(0|-?[1-9][0-9]*)$</code><br>这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧。下面我们要加的是说明可能的小数部分：<code>^[0-9]+(.[0-9]+)?$</code><br>必须说明的是,小数点后面至少应该有1位数,所以”10.”是不通过的,但是 “10” 和 “10.2” 是通过的：<code>^[0-9]+(.[0-9]&#123;2&#125;)?$</code><br>这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：<code>^[0-9]+(.[0-9]&#123;1,2&#125;)?$</code><br>这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：<code>^[0-9]&#123;1,3&#125;(,[0-9]&#123;3&#125;)*(.[0-9]&#123;1,2&#125;)?$</code><br>1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：<code>^([0-9]+|[0-9]&#123;1,3&#125;(,[0-9]&#123;3&#125;)*)(.[0-9]&#123;1,2&#125;)?$</code><br>备注：这就是最终结果了,别忘了”+”可以用”*”替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里  </p><p>xml文件：<code>^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$</code><br>中文字符的正则表达式：<code>[\u4e00-\u9fa5]</code><br>双字节字符：<code>[^\x00-\xff]</code> (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))<br>空白行的正则表达式：<code>\n\s*\r</code>(可以用来删除空白行)<br>HTML标记的正则表达式：<code>&lt;(\S*?)[^&gt;]*&gt;.*?|&lt;.*? /&gt;</code> ( 首尾空白字符的正则表达式：^\s*|\s*$或(^\s*)|(\s*$) (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)<br>腾讯QQ号：<code>[1-9][0-9]&#123;4,&#125;</code> (腾讯QQ号从10000开始)<br>中国邮政编码：<code>[1-9]\d&#123;5&#125;(?!\d)</code> (中国邮政编码为6位数字)<br>IP地址：<code>((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.)&#123;3&#125;(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))</code>   </p>]]></content>
      
      
      <categories>
          
          <category> Regular </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 集群</title>
      <link href="/posts/f8c8020d.html"/>
      <url>/posts/f8c8020d.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-12-集群</p><a id="more"></a><h2 id="Linux-集群"><a href="#Linux-集群" class="headerlink" title="Linux 集群"></a>Linux 集群</h2><h3 id="1-liunx-集群概述："><a href="#1-liunx-集群概述：" class="headerlink" title="1.liunx 集群概述："></a>1.liunx 集群概述：</h3><h4 id="1-1-集群概念："><a href="#1-1-集群概念：" class="headerlink" title="1.1 集群概念："></a>1.1 集群概念：</h4><blockquote><p>一组协同工作的服务器，对外表现为一个整体，更好的利用现有资源实现服务的高度可用 </p></blockquote><h4 id="1-2-集群-Cluster-的分类："><a href="#1-2-集群-Cluster-的分类：" class="headerlink" title="1.2 集群(Cluster)的分类："></a>1.2 集群(Cluster)的分类：</h4><ul><li>LBC(Load Balancing)：负载均衡集群<ul><li>减轻单台服务器的压力，将用户请求分担给多台主机一起处理</li><li>实现方法：<ul><li>软件：LVS、RAC、Ngnix、</li><li><a href="https://www.cnblogs.com/lipengxiang2009/p/7353373.html">LVS(Linux Virtual Server)</a></li><li>硬件：F5、BIG-IP</li></ul></li></ul></li><li>HAC(High Availiablity)：高可用集群<ul><li>最大限度的保证用户的应用持久，不间断的提供服务</li><li>实现原理：心跳检测</li><li>实现方法：<ul><li>软件：heartbeat linux-HA、RHCS、ROSE、keepalived</li><li>硬件：F5</li></ul></li></ul></li><li>HPC(High-performance computing)：高性能运算集群 </li></ul><img src="/posts/f8c8020d/ARP-Level.png" class title="[ARP-Level]">  <img src="/posts/f8c8020d/closearp.png" class title="[closearp]">  <h3 id="2-负载均衡集群-LBC"><a href="#2-负载均衡集群-LBC" class="headerlink" title="2.负载均衡集群(LBC)"></a>2.负载均衡集群(LBC)</h3><h4 id="2-1LVS-相关原理："><a href="#2-1LVS-相关原理：" class="headerlink" title="2.1LVS 相关原理："></a>2.1LVS 相关原理：</h4><blockquote><p>LVS 运行在系统内核空间<code>netfilter</code>的<code>INPUT</code>钩子上的框架，用户空间无法直接管理，用<strong>IPVSADM命令行工具</strong>管理集群服务；根据用户请求的套接字判断，分流至真实服务器的工作模块  </p></blockquote><ul><li>管理集群服务: 增、改、删<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ipvsadm -A|E -t|u|f service-address [-s,scheduler] [-p [timeout]]  </span><br><span class="line">ipvsadm -D -t|u|f service-address  </span><br><span class="line">service-address: -t|u|f</span><br><span class="line">-s,scheduler: <span class="comment"># 指定集群调度算法, 默认：WLC</span></span><br></pre></td></tr></table></figure></li><li>管理集群的RS: 增、改、删<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ipvsadm -a|e -t|u|f service-address -r service-address [-g|i|m] [-w,weight]  </span><br><span class="line">ipvsadm -d -t|u|f service-address -r service-address</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-2LVS工作模式："><a href="#2-2LVS工作模式：" class="headerlink" title="2.2LVS工作模式："></a>2.2LVS工作模式：</h4><img src="/posts/f8c8020d/LVS.png" class title="[LVS工作模式]"> <ul><li>NAT(多目标的DNAT) ✔<ul><li>模式特点：<ul><li><strong>网络层</strong>，替换目标地址；</li><li>集群节点，必须在一个网络中；</li><li>真实服务器网关必须指向负载调度器；</li><li>RIP通常都是私有IP，仅用于各个集群节点通信；</li><li>负载调度器必须位于客户端和真实服务器之间，充当网关；</li><li>支持端口映射，负载调度器操作系统必须是Linux ，真实服务器可以使用任意系统;　</li></ul></li></ul></li></ul><img src="/posts/f8c8020d/LVS-NAT.png" class title="[LVS-NAT]"> <ul><li>DR(Direct Routing) ✔<ul><li>模式特点：<ul><li><strong>数据链路层</strong>，更改MAC地址，关闭ARP广播；</li><li>集群节点，必须在一个网络中；</li><li>真实服务器网关指向路由器；</li><li>RIP既可以是私网地址，又可以是公网地址;</li><li>不支持端口映射;</li></ul></li></ul></li></ul><img src="/posts/f8c8020d/LVS-DR.png" class title="[LVS-DR]"> <ul><li>TUN<ul><li>模式特点：<ul><li>集群节点不必位于同一个物理网络但必须都拥有公网IP（或都可以被路由）</li><li>真实服务器不能将网管指向负载调度器</li><li>RIP必须是公网地址</li><li>负载调度器只负责入站请求</li><li>不支持端口映射功能</li><li>发送方和接收方必须支持隧道功能 </li></ul></li></ul></li></ul><h3 id="3-集群通用算法"><a href="#3-集群通用算法" class="headerlink" title="3.集群通用算法"></a>3.集群通用算法</h3><h4 id="3-1静态调度算法："><a href="#3-1静态调度算法：" class="headerlink" title="3.1静态调度算法："></a>3.1静态调度算法：</h4><ul><li><strong>RR</strong> 轮询算法：第一台服务器开始到N台结束，然后循环        :laughing:   </li><li><strong>WRR</strong> 加权算法：按权重比例实现多台主机之间进行调度        :smile:</li><li><strong>SH</strong> 源地址散列：将同一个IP用户请求，发送给同一个服务器  </li><li><strong>DH</strong> 目标地址散列：将同一个目标地址的用户请求发送给通一个真实服务器(提高缓存服务率)</li></ul><h4 id="3-2动态调度算法："><a href="#3-2动态调度算法：" class="headerlink" title="3.2动态调度算法："></a>3.2动态调度算法：</h4><ul><li><strong>LC</strong>：Lest-connection，最少连接，将新的连接请求，分配给连接数最少的服务器 :smile:<ul><li>活动连接*256 + 非活动连接  </li></ul></li><li><strong>WLC</strong>：加权最少连接，特殊的LC算法，权重越大承担请求越多  :smile:<ul><li>（活动连接*256 + 非活动连接）/ 权重  </li></ul></li><li><strong>SED</strong>：最短期望延迟，特殊的WLC算法<ul><li>（活动连接 + 1）*256 / 权重</li></ul></li><li><strong>NQ</strong>：无需等待，特殊的SED算法，若有正是服务器的连接数等于0就直接分配不需要运算  </li><li><strong>LBLC</strong>：特殊的DH算法，即提高缓存命中率，有考虑了服务器性能</li><li><strong>LBLCR</strong>：LBLCR缓存，尽可能提高负载均衡和缓存命中率折中方案</li></ul><h4 id="3-3持久化连接-类似于SH优先级最高"><a href="#3-3持久化连接-类似于SH优先级最高" class="headerlink" title="3.3持久化连接(类似于SH优先级最高)"></a>3.3持久化连接(类似于SH优先级最高)</h4><ul><li><strong>PCC</strong>：持久客户端连接<ul><li>将来自于同一个客户端的所有请求统统定向此前选定的RS，只要IP相同，分配的服务器始终相同</li></ul></li><li><strong>PPC</strong>：持久端口连接<ul><li>将来自于同一个客户端对同一个服务(端口)的请求，始终定向此前选定的RS</li></ul></li><li><strong>PMFC</strong>：持久防火墙标记连接<ul><li>将来自同一个客户端指定服务(端口)的请求，始终定向至此选定的RS，不过它可以将2个不相关的端口定义为一个集群服务</li></ul></li></ul><h4 id="3-4ipvsadm编译安装"><a href="#3-4ipvsadm编译安装" class="headerlink" title="3.4ipvsadm编译安装"></a>3.4ipvsadm编译安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget -c http://www.linuxvirtualserver.org/software/kernel-2.6/ipvsadm-1.24.tar.gz</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/kernels/2.6.* /usr/<span class="built_in">local</span>/linux</span><br><span class="line">tar -xzvf ipvsadm-1.24.tar.gz</span><br><span class="line"><span class="built_in">cd</span> ipvsadm-1.24</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><table><thead><tr><th>ipvsadm 命令选项</th><th>说明</th></tr></thead><tbody><tr><td>-A</td><td>添加虚拟服务器IP</td></tr><tr><td>-s</td><td>设置调度算法</td></tr><tr><td>-a</td><td>添加真实主机</td></tr><tr><td>-t</td><td>TCP_PORT</td></tr><tr><td>-u</td><td>UDP_PORT</td></tr><tr><td>-f</td><td>标记</td></tr><tr><td>-g</td><td>DR模式(直接路由)</td></tr><tr><td>-m</td><td>NAT模式</td></tr><tr><td>-i</td><td>TUN模式</td></tr><tr><td>-w</td><td>权重</td></tr><tr><td>-Ln</td><td>以数字形式输出地址和端口</td></tr><tr><td>-nS</td><td>重定向保存文件</td></tr><tr><td>-restore</td><td>恢复</td></tr><tr><td>-C</td><td>清空定义所有内容</td></tr><tr><td>-Z</td><td>清空计数器</td></tr></tbody></table><h3 id="4-LVS工作模式构建："><a href="#4-LVS工作模式构建：" class="headerlink" title="4.LVS工作模式构建："></a>4.LVS工作模式构建：</h3><h4 id="4-1-NAT-模式构建："><a href="#4-1-NAT-模式构建：" class="headerlink" title="4.1 NAT 模式构建："></a>4.1 NAT 模式构建：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Client: 172.20.0.123/16  </span></span><br><span class="line"><span class="comment"># LVS: eth1:VIP:172.20.0.200   eth0:DIP:192.168.30.200  </span></span><br><span class="line"><span class="comment"># RS: 192.168.30.27/24  192.168.30.17/24   GW: 192.168.30.200  </span></span><br><span class="line"><span class="comment"># /etc/pki/tls/certs</span></span><br></pre></td></tr></table></figure><h4 id="4-2负载调度器配置-VIP-DIP"><a href="#4-2负载调度器配置-VIP-DIP" class="headerlink" title="4.2负载调度器配置(VIP,DIP):"></a>4.2负载调度器配置(VIP,DIP):</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/sysctl.conf  # 开启负载调度器路由转发   </span></span><br><span class="line">  net.ipv4.ip_forward=1  </span><br><span class="line">[root@xy ~]<span class="comment"># sysctl -p                # 刷新内核参数  </span></span><br><span class="line">[root@xy ~]<span class="comment"># service iptables start   # 开启防火墙  </span></span><br><span class="line">[root@xy ~]<span class="comment"># chkconfig iptables on    </span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -F              # 清空防火墙默认规则  </span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -t nat -A POSTROUTING -s 192.168.30.27 -o eth0 -j SNAT -to-source 172.20.0.100</span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -t nat -L</span></span><br><span class="line">[root@xy ~]<span class="comment"># ipvsadm -A -t 172.20.0.200:80 -s rr    # 添加 ipvsadm TCP集群    </span></span><br><span class="line">[root@xy ~]<span class="comment"># ipvsadm -a -t 172.20.0.200:80 -r 192.168.30.17:8080 -m </span></span><br><span class="line"><span class="comment"># 添加ipvsadm节点  -m NAT 模式  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ipvsadm -a -t 172.20.0.200:80 -r 192.168.30.27:80 -m </span></span><br><span class="line">[root@xy ~]<span class="comment"># ipvsadm -Ln</span></span><br><span class="line">[root@xy ~]<span class="comment"># service ipvsadm save  </span></span><br><span class="line">[root@xy ~]<span class="comment"># chkconfig ipvsadm on  </span></span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># ipvsadm -Ln --status # 查看集群状态  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ipvsadm -D -t 外网卡地址:80  # 删除集群  </span></span><br></pre></td></tr></table></figure><h4 id="4-3真实服务器配置"><a href="#4-3真实服务器配置" class="headerlink" title="4.3真实服务器配置:"></a>4.3真实服务器配置:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># route add default gw IP  # 指定真实服务器网关至负载调度器  </span></span><br><span class="line">[root@xy ~]<span class="comment"># route -n</span></span><br><span class="line">[root@xy ~]<span class="comment"># service httpd start  </span></span><br><span class="line">[root@xy ~]<span class="comment"># chkconfig httpd on</span></span><br></pre></td></tr></table></figure><h4 id="4-4DR-模式构建："><a href="#4-4DR-模式构建：" class="headerlink" title="4.4DR 模式构建："></a>4.4DR 模式构建：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Client: 172.20.0.222/16      GW: 172.20.0.200  </span></span><br><span class="line"><span class="comment"># Route: 172.20.0.200  192.168.30.200</span></span><br><span class="line"><span class="comment"># LVS: eth0:VIP:192.168.30.7   GW: 192.168.30.200    </span></span><br><span class="line"><span class="comment"># RS: eth0:192.168.30.17/24  eth0:192.168.30.27/24  VIP:192.168.30.7  GW: 192.168.30.200   </span></span><br></pre></td></tr></table></figure><h4 id="4-5负载调度器配置"><a href="#4-5负载调度器配置" class="headerlink" title="4.5负载调度器配置"></a>4.5负载调度器配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># service NetworkManager stop  </span></span><br><span class="line">[root@xy ~]<span class="comment"># chkconfig NetworkManager off  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/sysconfig/network-scripts/  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/sysctl.conf  # 开启负载调度器路由转发   </span></span><br><span class="line">  net.ipv4.ip_forward=1  </span><br><span class="line">[root@xy ~]<span class="comment"># sysctl -p # 刷新内核参数 </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/sysctl.conf  # 关闭网卡重定向  </span></span><br><span class="line">  net.ipv4.conf.all.send_redirects = 0  </span><br><span class="line">  net.ipv4.conf.default.send_redirects = 0  </span><br><span class="line">  net.ipv4.conf.eth0.send_redirects = 0  </span><br><span class="line">[root@xy ~]<span class="comment"># sysctl -p</span></span><br><span class="line">[root@xy ~]<span class="comment"># modprobe ip_vs # 重新加载 ipvs 模块  </span></span><br><span class="line">[root@xy ~]<span class="comment"># rpm -ivh ipvsadm   # 安装ipvsadm工具  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ipvsadm -v         # 查看当前集群内容  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ipvsadm -A -t 192.168.30.7:80 -s rr  # 添加TCP集群  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ipvsadm -a -t  192.168.30.7:80:80 -r 192.168.30.17:80 -g # 添加ipvsadm集群子节点  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ipvsadm -a -t  192.168.30.7:80:80 -r 192.168.30.27:80 -g # -g DR模式</span></span><br><span class="line">[root@xy ~]<span class="comment"># ipvsadm -Ln</span></span><br><span class="line">[root@xy ~]<span class="comment"># service ipvsadm save  </span></span><br><span class="line">[root@xy ~]<span class="comment"># chkconfig ipvsadm on  </span></span><br></pre></td></tr></table></figure><h4 id="4-6真实服务器"><a href="#4-6真实服务器" class="headerlink" title="4.6真实服务器"></a>4.6真实服务器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># service NetworkManager stop  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/sysctl.conf    # 关闭对应ARP 响应及公告功能  </span></span><br><span class="line">  net.ipv4.conf.all.arp_ignore = 1  </span><br><span class="line">  net.ipv4.conf.all.arp_announce = 2  </span><br><span class="line">  net.ipv4.conf.default.arp_ignore = 1  </span><br><span class="line">  net.ipv4.conf.default.arp_announce = 2  </span><br><span class="line">  net.ipv4.conf.lo.arp_ignore = 1  </span><br><span class="line">  net.ipv4.conf.lo.arp_announce = 2  </span><br><span class="line">[root@xy ~]<span class="comment"># sysctl -p</span></span><br><span class="line">[root@xy ~]<span class="comment"># cd /etc/sysconfig/network-scripts/  </span></span><br><span class="line">[root@xy ~]<span class="comment"># cp ifcfg-lo ifcfg-lo:0  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim ifcfg-lo:0     # 拷贝回环网卡子接口  </span></span><br><span class="line">  DEVICE=lo:0  </span><br><span class="line">  IPADDR=192.168.30.7 <span class="comment"># VIP </span></span><br><span class="line">  NETMASK=255.255.255.255  </span><br><span class="line">[root@xy ~]<span class="comment"># ifup lo:0  </span></span><br><span class="line">[root@xy ~]<span class="comment"># route add -host 192.168.30.200 dev lo:0 # 添加路由记录，网关，当访问 VIP 交给lo:0 网卡接收  </span></span><br><span class="line">[root@xy ~]<span class="comment"># echo &quot;route add -host 192.168.30.200 dev lo:0&quot; &gt;&gt; /etc/rc.local  # 加入到开机自启中  </span></span><br><span class="line">[root@xy ~]<span class="comment"># service httpd start</span></span><br></pre></td></tr></table></figure><h3 id="5-高可用集群-HAC"><a href="#5-高可用集群-HAC" class="headerlink" title="5.高可用集群(HAC)"></a>5.高可用集群(HAC)</h3><h4 id="5-1Keeplived原理："><a href="#5-1Keeplived原理：" class="headerlink" title="5.1Keeplived原理："></a>5.1Keeplived原理：</h4><ul><li>热备方式：VRRP 虚拟路由冗余协议<ul><li>一主+多备，共用同一个IP，但优先级不同</li><li>支持故障自动切换</li><li>支持节点健康状态检查  <h4 id="5-2LVS-DR-Keeplived："><a href="#5-2LVS-DR-Keeplived：" class="headerlink" title="5.2LVS-DR+Keeplived："></a>5.2LVS-DR+Keeplived：</h4><img src="/posts/f8c8020d/LVS-DR-Keepalived.png" class title="[LVS-DR-Keepalived]">    </li></ul></li></ul><h4 id="5-3负载调度器-1"><a href="#5-3负载调度器-1" class="headerlink" title="5.3负载调度器 1"></a>5.3负载调度器 1</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># service NetworkManager stop  </span></span><br><span class="line">[root@xy ~]<span class="comment"># chkconfig NetworkManager off    </span></span><br><span class="line">[root@xy ~]<span class="comment"># cd /etc/sysconfig/network-scripts/    </span></span><br><span class="line">[root@xy ~]<span class="comment"># cp -a ifcfg-eth0 ifcfg-eth0:0</span></span><br><span class="line">[root@xy ~]<span class="comment"># vim !$</span></span><br><span class="line">  DEVICE=eth0:0    </span><br><span class="line">  IPADDR=10.10.10.100 <span class="comment">#虚拟IP    </span></span><br><span class="line">  NETMASK=255.255.255.0   </span><br><span class="line">[root@xy ~]<span class="comment"># ifup eth0:0  </span></span><br><span class="line">[root@xy ~]<span class="comment"># yum install -y ipvsadm  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/sysctl.conf  # 关闭网卡的广播功能，防止冲突  </span></span><br><span class="line">  net.ipv4.conf.all.send_redirects = 0  </span><br><span class="line">  net.ipv4.conf.default.send_redirects = 0  </span><br><span class="line">  net.ipv4.conf.eth0.send_redirects = 0  </span><br><span class="line">[root@xy ~]<span class="comment"># sysctl -p</span></span><br><span class="line">[root@xy ~]<span class="comment"># ipvsadm -A -t 10.10.10.100:80 -s rr  添加集群  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ipvsadm -a -t 10.10.10.100:80 -r 10.10.10.13:80 -g # 添加集群子节点，-g DR模式    </span></span><br><span class="line">[root@xy ~]<span class="comment"># ipvsadm -a -t 10.10.10.100:80 -r 10.10.10.114:80 -g    </span></span><br><span class="line">[root@xy ~]<span class="comment"># service ipvsadm save    </span></span><br><span class="line">[root@xy ~]<span class="comment"># ipvsadm -Ln   </span></span><br><span class="line">  IP Virtual Server version 1.2.1 (siza=4096)  </span><br><span class="line">  Port LocalAddress:Port Scheduler Flags </span><br><span class="line">      -&gt; RemoteAddress:Port       Forward     Weight      ActiveConn      InActConn  </span><br><span class="line">  TCP 10.10.10.100:80 rr</span><br><span class="line">      -&gt;10.10.10.13:80            Route       1           0           0</span><br><span class="line">      -&gt;10.10.10.14:80            Route       1           0           0  </span><br><span class="line">[root@xy ~]<span class="comment"># mkdir /mnt/keepalived    # 配置 keepalived 文件  10.10.10.11   </span></span><br><span class="line">[root@xy ~]<span class="comment"># mount -o loop Keepalived.iso  </span></span><br><span class="line">[root@xy ~]<span class="comment"># cp -a /mnt/leepalived/* .  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/keepalived/keepalived.conf</span></span><br><span class="line">  global_defs &#123;</span><br><span class="line">      router_id R1    <span class="comment">#命名主机名</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  vrrp_instance VI--1 &#123;</span><br><span class="line">      state MASTER        <span class="comment"># 设置服务类型主/从（MASTER/SLAVE）</span></span><br><span class="line">      interface eth0      <span class="comment"># 指定那块网卡用来监听</span></span><br><span class="line">      virtual_router_id 66 <span class="comment"># 设置组号， 如果是一组就是相同的ID号， 一个主里面只能有一个主服务器和多个从服务器</span></span><br><span class="line">      priority 80          <span class="comment"># 服务器优先级， 主服务器优先级高</span></span><br><span class="line">      advert_int 1         <span class="comment"># 心跳时间， 检测对方存活</span></span><br><span class="line">      authenticetion &#123;     <span class="comment"># 存活验证密码</span></span><br><span class="line">          auth_type PASS</span><br><span class="line">          auth_pass 1111</span><br><span class="line">      &#125;</span><br><span class="line">  virtual_ipaddress &#123;</span><br><span class="line">      10.10.10.100       <span class="comment">#设置集群地址</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  virtual_server 10.10.10.100 80 &#123;   <span class="comment"># 设置集群地址以及端口号</span></span><br><span class="line">      delay_loop 2                   <span class="comment"># 健康检查间隔</span></span><br><span class="line">      lb_algo rr                     <span class="comment"># 使用轮询调度算法</span></span><br><span class="line">      lb_kind DR                     <span class="comment"># DR模式的群集</span></span><br><span class="line">      protocol TCP                   <span class="comment"># 使用的协议</span></span><br><span class="line">  real_server 10.10.10.13 80 &#123;       <span class="comment"># 管理的网站节点以及使用端口</span></span><br><span class="line">          weight 1                   <span class="comment"># 权重， 优先级在原文件基础上删除修改</span></span><br><span class="line">          TCP_CHECK &#123;                <span class="comment"># 状态检查方式</span></span><br><span class="line">              connect_port 80        <span class="comment"># 检查的目标端口</span></span><br><span class="line">              connect_timeout 3      <span class="comment"># 连接超时（秒）</span></span><br><span class="line">              nb_get_retry 3         <span class="comment"># 重试次数</span></span><br><span class="line">              delay_before_retry 4   <span class="comment"># 重试间隔（秒）</span></span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  real_server 10.10.10.14 80 &#123;    <span class="comment"># 管理的第二个网站节点以及使用端口</span></span><br><span class="line">          weight 1                <span class="comment"># 权重， 优先级在原文件基础上删除修改</span></span><br><span class="line">          TCP_CHECK &#123;             <span class="comment"># 状态检查方式</span></span><br><span class="line">              connect_port 80     <span class="comment"># 检查的目标端口</span></span><br><span class="line">              connect_timeout 3   <span class="comment"># 连接超时（秒）</span></span><br><span class="line">              nb_get_retry 3           <span class="comment"># 重试次数</span></span><br><span class="line">              delay_before_retry 4     <span class="comment"># 重试间隔（秒）</span></span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">[root@xy ~]<span class="comment"># service keepalived start  </span></span><br><span class="line">[root@xy ~]<span class="comment"># tail -f  /var/log/message  </span></span><br></pre></td></tr></table></figure><h4 id="5-4负载调度器-2"><a href="#5-4负载调度器-2" class="headerlink" title="5.4负载调度器 2"></a>5.4负载调度器 2</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@xy network-scripts]<span class="comment"># cp -a ifcfg-eth0 ifcfg-eth0:0   10.10.10.12  </span></span><br><span class="line">  DEVICE=eth0:0  </span><br><span class="line">  IPADDR=10.10.10.100  </span><br><span class="line">  NETMASK=255.255.255.0  </span><br><span class="line">[root@xy network-scripts]<span class="comment"># vim ifup-eth # 256行左右，注释arp命令  </span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># ifup eth0:0</span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># vim /etc/keepalived/keepalived.conf</span></span><br><span class="line">  <span class="comment"># 修改1：state MASTER 修改至state SLAVE </span></span><br><span class="line">  <span class="comment"># 修改2：priority 100 修改至priority 47 一般建议与主服务器差值为50</span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># service NetworkManager stop  # 启动虚拟借口，必须关闭此服务  </span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># vim /etc/sysctl.conf  # 修改内核参数。防止相同网络地址广播冲突， 如果有多快网卡需要设置多行  </span></span><br><span class="line">  net.ipv4.conf.eth0.send_redirects = 0  </span><br><span class="line">  net.ipv4.conf.all.send_redirects = 0  </span><br><span class="line">  net.ipv4.conf.default.send_redirects = 0   </span><br><span class="line">  net.ipv4.conf.eth0.send_redirects = 0   </span><br><span class="line">[root@xy network-scripts]<span class="comment"># sysctl -p # 刷新内核参数  </span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># modprobe ip_vs      # 查看内核是否加载， 无法应则以加载  </span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># cat /proc/net/ip_vs # 参看版本， 确认知否正确加载  </span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># cd /mnt/cdrom/Packages/  # 进入光盘挂载目录  </span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># rpm -ivh ipvsadm-1.26l......... # 安装ipvsadm管理工具  </span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># ipvsadm -v</span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># ipvsadm -A -t 10.10.10.100:80 -s rr  </span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># ipvsadm -Ln   # 查看设置的ipvsadm如果没有子项， 那么手动添加  </span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># ipvsadm -a -t 10.10.10.100:80 -r 10.10.10.13:80 -g </span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># ipvsadm -a -t 10.10.10.100:80 -r 10.10.10.14:80 -g  </span></span><br></pre></td></tr></table></figure><h4 id="5-5真实服务器"><a href="#5-5真实服务器" class="headerlink" title="5.5真实服务器"></a>5.5真实服务器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># service httpd start  # 真实服务器开启Web服务    </span></span><br><span class="line">[root@xy ~]<span class="comment"># chkconfig httpd on </span></span><br><span class="line">[root@xy ~]<span class="comment"># echo &quot;this is Server 1&quot; &gt;&gt; /var/www/index.html  # 10.10.10.13   </span></span><br><span class="line">[root@xy ~]<span class="comment"># curl localhost</span></span><br><span class="line">[root@xy ~]<span class="comment"># cd /etc/sysconfig/network-scripts/</span></span><br><span class="line">[root@xy ~]<span class="comment"># cp ifcfg-lo ifcfg-lo:0    </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim ifcfg-lo:0  拷贝回环网卡子接口    </span></span><br><span class="line">  DEVICE=lo:0   </span><br><span class="line">  IPADDR=10.10.10.100     </span><br><span class="line">  NETMASK=255.255.255.255   </span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/sysctl.conf   # 关闭对应ARP 响应及公告功能   </span></span><br><span class="line">  net.ipv4.conf.all.arp_ignore = 1    </span><br><span class="line">  net.ipv4.conf.all.arp_announce = 2    </span><br><span class="line">  net.ipv4.conf.default.arp_ignore = 1  </span><br><span class="line">  net.ipv4.conf.default.arp_announce = 2   </span><br><span class="line">  net.ipv4.conf.lo.arp_ignore = 1   </span><br><span class="line">  net.ipv4.conf.lo.arp_announce = 2   </span><br><span class="line">[root@xy ~]<span class="comment"># sysctl -p </span></span><br><span class="line">[root@xy ~]<span class="comment"># ifup lo: 0  </span></span><br><span class="line">[root@xy ~]<span class="comment"># route add -host 10.10.10.100 dev lo:0 # 添加路由记录，当访问VIP 交给lo:0 网卡接受  </span></span><br><span class="line">[root@xy ~]<span class="comment"># echo &quot;route add -host 10.10.10.100 dev lo:0&quot; &gt;&gt; /etc/rc.local # 加入到开机自启中  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ipvsadm -Ln --stats    </span></span><br><span class="line">  IP Virtual Server version 1.2.1 (siza=4096)  </span><br><span class="line">  Port LocalAddress:Port   </span><br><span class="line">      -&gt; RemoteAddress:Port       Conns       InPkts      OutPkts     InBytes     OutBytes       </span><br><span class="line">  TCP 10.10.10.100:80             16          79          0           11036          0</span><br><span class="line">      -&gt;10.10.10.13:80            8           39          0           5481           0</span><br><span class="line">      -&gt;10.10.10.14:80            8           40          0           5555           0</span><br></pre></td></tr></table></figure><h4 id="5-6Heartbeat-Nginx："><a href="#5-6Heartbeat-Nginx：" class="headerlink" title="5.6Heartbeat+Nginx："></a>5.6Heartbeat+Nginx：</h4><img src="/posts/f8c8020d/Heartbeat-Nginx.png" class title="[Heartbeat-Nginx]">  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum -y install pcre pcre-devel zlib zlib-devel  # 10.10.10.11  </span></span><br><span class="line">[root@xy nginx-1.2.6]<span class="comment"># useradd -s /sbin/no-login -M nginx  -M 家目录  </span></span><br><span class="line">[root@xy nginx-1.2.6]<span class="comment"># ./configure --prefix=/usr/local/nginx --user=nginx --group=nginx  </span></span><br><span class="line">[root@xy nginx-1.2.6]<span class="comment"># make &amp;&amp; make install    </span></span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># tar -xzvf heartbeat.tar.gz  </span></span><br><span class="line">[root@xy heartbeat]<span class="comment"># yum -y install ntp  # 安装时间同步服务程序  </span></span><br><span class="line">[root@xy heartbeat]<span class="comment"># vim /ect/ntp.conf </span></span><br><span class="line">  restrict 10.10.10.0 mask 255.255.255.0 nomodify notrap  </span><br><span class="line">  server 127.127.1.0   </span><br><span class="line">  fudge 127.127.1.0 stratum 10   </span><br><span class="line">[root@xy heartbeat]<span class="comment"># service ntpd start  </span></span><br><span class="line">[root@xy heartbeat]<span class="comment"># chkconfig ntpd on </span></span><br><span class="line">[root@xy ~] <span class="comment"># yum install -y ntpdate    # 10.10.10.12  </span></span><br><span class="line">[root@xy ~] <span class="comment"># ntpdate -u 10.10.10.11 </span></span><br><span class="line">[root@xy heartbeat]<span class="comment"># vim /etc/sysconfig/network  # 更改主机名  uname -n</span></span><br><span class="line">[root@xy heartbeat]<span class="comment"># cd /usr/share/doc/heartbeat-3.0.4</span></span><br><span class="line">[root@xy heartbeat]<span class="comment"># cp -a authkeys ha.cf haresources /etc/ha.d </span></span><br><span class="line">[root@xy heartbeat]<span class="comment"># cd !$ </span></span><br><span class="line">[root@xy ha.d]<span class="comment"># dd if=/dev/random bs=512 count=1 | openssl md5 </span></span><br><span class="line">  记录了 0+1 的读入  </span><br><span class="line">  记录了 0+1 的写入  </span><br><span class="line">  16字节(16 B)已复制, 6.5455e-05 秒, 244 kb/秒    </span><br><span class="line">  (stdin)=53a0ba829e8a55f7faea1891c850dde8  </span><br><span class="line">[root@xy ha.d]<span class="comment">#  vim authkeys </span></span><br><span class="line">  auth 3</span><br><span class="line">  1 crc   </span><br><span class="line">  2 sha1 HI!  </span><br><span class="line">  3 md5 53a0ba829e8a55f7faea1891c850dde8     </span><br><span class="line">[root@xy ha.d]<span class="comment"># chmod 600 authkeys  </span></span><br><span class="line">[root@xy ha.d]<span class="comment"># vim ha.cf  # /bcast  /node  </span></span><br><span class="line">  bcast   eth0    <span class="comment">#Linux   </span></span><br><span class="line">  node    www.centos1.com  </span><br><span class="line">  node    www.centos2.com     </span><br><span class="line">[root@xy ha.d]<span class="comment"># haresoures</span></span><br><span class="line">  www.centos1.com IPaddr::10.10.10.100/24/eth0:0  <span class="comment"># 切换 IP 地址</span></span><br><span class="line">[root@xy ~]<span class="comment"># scp ha.cf authkeys haresoures root@10.10.10.12:/etc/ha.d/ # 10.10.10.12  </span></span><br><span class="line">[root@xy ha.d]<span class="comment">#  /etc/init.d/ha.d</span></span><br><span class="line">  <span class="comment">#!/bin/bash         # 检测脚本</span></span><br><span class="line">  PWD=/usr/<span class="built_in">local</span>/script/</span><br><span class="line">  URL=<span class="string">&quot;http://10.10.10.11/index.html&quot;</span></span><br><span class="line">  HTTP_CODE=`curl -o /dev/null -s -w <span class="string">&quot;%&#123;http_code&#125;&quot;</span> <span class="string">&quot;<span class="variable">$&#123;URL&#125;</span>&quot;</span>` </span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$HTTP_CODE</span> != 200 ]</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">     service heartbeat stop</span><br><span class="line">  <span class="keyword">fi</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Devops, linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> Devops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 监控</title>
      <link href="/posts/48810125.html"/>
      <url>/posts/48810125.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-12-Zabbix</p><a id="more"></a><h2 id="监控服务"><a href="#监控服务" class="headerlink" title="监控服务"></a>监控服务</h2><h3 id="1-常见的监控平台"><a href="#1-常见的监控平台" class="headerlink" title="1. 常见的监控平台"></a>1. 常见的监控平台</h3><h4 id="1-1-Cacti-流量与性能监测为主-Cacti"><a href="#1-1-Cacti-流量与性能监测为主-Cacti" class="headerlink" title="1.1 Cacti 流量与性能监测为主 Cacti"></a>1.1 Cacti 流量与性能监测为主 <a href="http://www.cacti.net/">Cacti</a></h4><ul><li><strong>展示平台 Apache</strong>：B/S</li><li><strong>收集数据</strong>：SNMP(Simple Network Management Protocol)</li><li><strong>RRD Tool</strong> 绘图软件  </li></ul><h4 id="1-2-Nagios-服务与性能检测为主-Nagios"><a href="#1-2-Nagios-服务与性能检测为主-Nagios" class="headerlink" title="1.2 Nagios 服务与性能检测为主 Nagios"></a>1.2 Nagios 服务与性能检测为主 <a href="http://www.nagios.org/">Nagios</a></h4><ul><li><strong>展示平台</strong>：B/S</li><li><strong>收集数据</strong>：C/S (脚本)</li><li>ntop</li></ul><h4 id="1-3-Zabbix-新型全功能监控软件-Zabbix"><a href="#1-3-Zabbix-新型全功能监控软件-Zabbix" class="headerlink" title="1.3 Zabbix 新型全功能监控软件 Zabbix"></a>1.3 Zabbix 新型全功能监控软件 <a href="http://www.zabbix.com/">Zabbix</a></h4><ul><li><strong>展示平台</strong>：B/S</li><li><strong>收集数据</strong>：C/S (脚本)、SNMP</li></ul><h3 id="2-Cacti-监控平台"><a href="#2-Cacti-监控平台" class="headerlink" title="2. Cacti 监控平台"></a>2. Cacti 监控平台</h3><img src="/posts/48810125/Cacti.png" class title="[Cacti]">  <h4 id="2-1-Cacti-原理"><a href="#2-1-Cacti-原理" class="headerlink" title="2.1 Cacti 原理"></a>2.1 Cacti 原理</h4><blockquote><p><strong>SNMP(收集数据)</strong> –&gt;<strong>RRD Tool(绘图)</strong> –&gt;<strong>Apache(平台展示)</strong>  </p></blockquote><h4 id="2-2-Cacti-监控构建-服务器端-10-10-10-11"><a href="#2-2-Cacti-监控构建-服务器端-10-10-10-11" class="headerlink" title="2.2 Cacti 监控构建 服务器端(10.10.10.11)"></a>2.2 Cacti 监控构建 服务器端(10.10.10.11)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum -y install httpd mysql \</span></span><br><span class="line">    mysql-server mysql-devel libxml2-devel \</span><br><span class="line">    mysql-connector-odbc perl-DBD-MySQL \</span><br><span class="line">    unixODBC php php-mysql php-pdo  </span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># mysqladmin -uroot password anyu</span></span><br><span class="line">[root@xy ~]<span class="comment"># yum -y install \</span></span><br><span class="line">    net-snmp net-snmp-utils \</span><br><span class="line">    net-snmp-libs lm_sensors       <span class="comment"># 安装 snmp</span></span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># yum -y install libart_lgpl-devel \</span></span><br><span class="line">    pango-devel* cairo-devel*  </span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># mount -o loop cacti.iso /mnt/iso  </span></span><br><span class="line">[root@xy ~]<span class="comment"># cp -a /mnt/iso/* .    </span></span><br><span class="line">[root@xy ~]<span class="comment"># tar -xzvf rrdtool-1.4.5.tar.gz     # 安装 rrdtool  </span></span><br><span class="line">[root@xy rrdtool-1.4.5]<span class="comment"># ./configure --prefix=/usr/local  </span></span><br><span class="line">[root@xy rrdtool-1.4.5]<span class="comment"># make &amp;&amp; make install  </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 报错解决方法: </span></span><br><span class="line">  tar -xzvf cgilib-0.5.tar.gz</span><br><span class="line">  <span class="built_in">cd</span> cgilib-0.5/</span><br><span class="line">  make  </span><br><span class="line">  cp libcgi.a /usr/<span class="built_in">local</span>/lib</span><br><span class="line">  cp cgi.h /usr/<span class="built_in">local</span>/include</span><br><span class="line"></span><br><span class="line">[root@xy cacti]<span class="comment"># tar -xzvf cacti-0.8.7g.tar.gz  </span></span><br><span class="line">[root@xy cacti]<span class="comment"># mv cacti-0.8.7g/ /var/www/html/  </span></span><br><span class="line">[root@xy www html]<span class="comment"># ln -s cacti-0.8.7g/ cacti  </span></span><br><span class="line">[root@xy www cacti]<span class="comment"># patch -p1 -N &lt; /root/cacti/data_source_deactivate.patch  # 打补丁  </span></span><br><span class="line">[root@xy www cacti]<span class="comment"># useradd cacti </span></span><br><span class="line">[root@xy www cacti]<span class="comment"># chown -R root:root ./  </span></span><br><span class="line">[root@anyue html]<span class="comment"># chmod -R 777 cacti/  </span></span><br><span class="line">[root@xy www cacti]<span class="comment"># chown -R cacti:cacti rra/ log/    </span></span><br><span class="line">[root@xy www cacti]<span class="comment"># mysql -uroot -p    # 授权数据库用户，导入初始化数据  </span></span><br><span class="line">  mysql&gt; create database cactidb default character <span class="built_in">set</span> utf8;</span><br><span class="line">  mysql&gt; grant all privileges on cactidb.* to cactiuser@localhost identified by <span class="string">&#x27;cacti&#x27;</span>;</span><br><span class="line">  mysql&gt; <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">[root@xy www cacti]<span class="comment"># mysql -uroot -p cactidb &lt; cacti.sql </span></span><br><span class="line">[root@xy www cacti]<span class="comment"># vim /include/config.php    # 设置数据连接参数   </span></span><br><span class="line">29 <span class="variable">$database_type</span>     = <span class="string">&#x27;mysql&#x27;</span>;</span><br><span class="line">30 <span class="variable">$database_default</span>  = <span class="string">&#x27;cactidb&#x27;</span>;</span><br><span class="line">31 <span class="variable">$database_hostname</span> = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">32 <span class="variable">$database_username</span> = <span class="string">&#x27;cactiuser&#x27;</span>;</span><br><span class="line">33 <span class="variable">$database_password</span> = <span class="string">&#x27;cacti&#x27;</span>;</span><br><span class="line"></span><br><span class="line">[root@xy www cacti]<span class="comment"># vim /etc/httpd/conf/httpd.conf  </span></span><br><span class="line"></span><br><span class="line">DocumentRoot <span class="string">&quot;/var/www/html/cacti&quot;</span>  </span><br><span class="line">&lt;Directory <span class="string">&quot;/var/www/html/cacti&quot;</span>&gt;  </span><br><span class="line">DirectoryIndex index.php index.html index.htm.var  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 10.10.10.11 进行安装 </span></span><br></pre></td></tr></table></figure><h4 id="2-3-Cacti-插件添加-10-10-10-12-客户端"><a href="#2-3-Cacti-插件添加-10-10-10-12-客户端" class="headerlink" title="2.3 Cacti 插件添加 10.10.10.12  (客户端)"></a>2.3 Cacti 插件添加 10.10.10.12  (客户端)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum -y install net-snmp net-snmp-utils net-snmp-libs lm_sensors    </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/snmpd.conf  </span></span><br><span class="line">  com2sec notConfigUser   default public123</span><br><span class="line">  view all include .1  </span><br><span class="line">  <span class="comment">#       group   context sec.model   sec.level   prefix  read        write   notif   </span></span><br><span class="line">  access  notConfigGroup  <span class="string">&quot;&quot;</span>  any noauth          exact   all  none    none  </span><br><span class="line">[root@xy ~]<span class="comment"># service snmpd start  </span></span><br><span class="line">[root@xy ~]<span class="comment"># snmpwalk -v 2c -c public123 10.10.10.12 tcp  # -c 共同体名称(组号)</span></span><br><span class="line">  <span class="comment"># V1 版 简单，高效，不支持加密及身份认证  </span></span><br><span class="line">  <span class="comment"># V2 版 身份认证  </span></span><br><span class="line">  <span class="comment"># V3 版 加密</span></span><br><span class="line">[runct@www html]<span class="comment"># php /var/www/html/cacti/poller.php</span></span><br><span class="line">[root@www html]<span class="comment"># su -cacti </span></span><br><span class="line">[runct@xy ~]<span class="comment"># crontab -e </span></span><br><span class="line">  */5   *   *   *   *   /usr/bin/php    /var/www/html/cacti/poller.php &amp;&gt;/dev/null   </span><br><span class="line">[runct@xy ~]<span class="comment"># service crond restart  </span></span><br><span class="line">[root@xy cacti-plugin]<span class="comment"># tar -xzvf cacti-plugin-0.8.7-PA-v2.8.tar.gz  </span></span><br><span class="line">[root@xy cacti-plugin-arch]<span class="comment"># mysql -uroot -p cactidb &lt; pa.aql  </span></span><br><span class="line">[root@xy www cacti]<span class="comment"># patch -p1 -N &lt; /root/cacti-plugin/cacti-plugin-arch/cacti-plugin-0.8.7g-PA-v2.8.diff </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用插件管理器, 下载插件复制到 /var/www/html/cacti/plugins并还原数据库, 用于0.8.7，8  </span></span><br><span class="line"><span class="comment"># 1.2.6版本集成了插件管理器  </span></span><br></pre></td></tr></table></figure><h3 id="2-Nagios-监控平台"><a href="#2-Nagios-监控平台" class="headerlink" title="2. Nagios 监控平台"></a>2. Nagios 监控平台</h3><h4 id="2-1-Nagios-原理"><a href="#2-1-Nagios-原理" class="headerlink" title="2.1 Nagios 原理"></a>2.1 Nagios 原理</h4><img src="/posts/48810125/Nagios.png" class title="[Nagios原理]">  <h4 id="2-2-Nagios-构建"><a href="#2-2-Nagios-构建" class="headerlink" title="2.2 Nagios 构建"></a>2.2 Nagios 构建</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum -y install httpd php php-cli php-mysql gcc glibc glibc-common gd gd-devel net-snmp openssl-devel wget unzip    </span></span><br><span class="line">[root@xy mnt cdrom]<span class="comment"># yum -y insatall *gd*   # 在光盘Package里找 *gd* 安装    </span></span><br><span class="line">[root@xy ~]<span class="comment"># groupadd nagcmd                # 必须  </span></span><br><span class="line">[root@xy ~]<span class="comment"># useradd -m nagios              # 必须  </span></span><br><span class="line">[root@xy ~]<span class="comment"># usermod -a -G nagcmd nagios  </span></span><br><span class="line">[root@xy ~]<span class="comment"># usermod -a -G nagcmd apache   # 把Apache添加到 nagcmd 组  </span></span><br><span class="line">[root@xy ~]<span class="comment"># mount -o loop nagios.iso /mnt/iso </span></span><br><span class="line">[root@xy ~]<span class="comment"># cp -a /mnt/iso/* . </span></span><br><span class="line">[root@xy ~]<span class="comment"># tar -xzvf nagios-3.1.2.tar.gz  </span></span><br><span class="line">[root@xy nagios-3.1.2]<span class="comment"># ./configure --with-command-group=nagcmd --enable-event-broker  # 开启数据库选项  </span></span><br><span class="line">[root@xy nagios-3.1.2]<span class="comment"># make all  </span></span><br><span class="line">[root@xy nagios-3.1.2]<span class="comment"># make install  </span></span><br><span class="line">[root@xy nagios-3.1.2]<span class="comment"># make install-init    # - This installs the init script in /etc/rc.d/init.d  </span></span><br><span class="line">[root@xy nagios-3.1.2]<span class="comment"># make install-config  # - This installs and configures permissions on the</span></span><br><span class="line">  directory <span class="keyword">for</span> holding the external <span class="built_in">command</span> file  </span><br><span class="line">[root@xy nagios-3.1.2]<span class="comment"># make install-commandmode  # - This installs sample config files in /usr/local/nagios/etc  </span></span><br><span class="line">[root@xy nagios-3.1.2]<span class="comment"># vim /usr/local/nagios/etc/objects/contacts.cfg </span></span><br><span class="line">  email   nagios@localhost    <span class="comment"># 邮件地址</span></span><br><span class="line">[root@xy nagios-3.1.2]<span class="comment"># make install-webconf  </span></span><br><span class="line">[root@xy nagios-3.1.2]<span class="comment"># vim /etc/httpd/conf.d/nagios.conf </span></span><br><span class="line">[root@xy nagios-3.1.2]<span class="comment"># htpasswd -c /usr/local/nagios/etc/htpasswd.users nagiosadmin  </span></span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># tar -xzvf nagios-plugins-1.4.15.tar.gz </span></span><br><span class="line">[root@xy nagios-plugins-1.4.15]<span class="comment"># ./configure --with-nagios-user=nagios \</span></span><br><span class="line">  --with-nagios-group=nagios --with-mysql \</span><br><span class="line">  --<span class="built_in">enable</span>-perl-modules  </span><br><span class="line">[root@xy nagios-plugins-1.4.15]<span class="comment"># make all &amp;&amp;  make install  </span></span><br><span class="line">[root@xy nagios-plugins-1.4.15]<span class="comment"># chkconfig --add nagios  </span></span><br><span class="line">[root@xy nagios-plugins-1.4.15]<span class="comment"># chkconfig nagios on </span></span><br><span class="line">[root@xy nagios-plugins-1.4.15]<span class="comment"># /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg  # 检测   </span></span><br><span class="line">[root@xy nagios-plugins-1.4.15]<span class="comment"># service nagios start  </span></span><br><span class="line">[root@xy nagios-3.1.2]<span class="comment"># systemctl restart httpd  </span></span><br></pre></td></tr></table></figure><h4 id="2-3-Nagios-添加监控主机"><a href="#2-3-Nagios-添加监控主机" class="headerlink" title="2.3 Nagios 添加监控主机"></a>2.3 Nagios 添加监控主机</h4><p><strong>windows 监控插件(MSClient++.msi), windows端</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@anyue objects]<span class="comment"># cd /usr/local/nagios/etc/objects  </span></span><br><span class="line">[root@anyue objects]<span class="comment"># vim windows.cfg   # 填写主机、IP</span></span><br><span class="line">[root@anyue objects]<span class="comment"># cd /usr/local/nagios/etc  </span></span><br><span class="line">[root@anyue objects]<span class="comment"># vim nagios.cfg    # 添加模板</span></span><br><span class="line">  28 <span class="comment"># You can specify individual object config files as shown below:</span></span><br><span class="line">  29 cfg_file=/usr/<span class="built_in">local</span>/nagios/etc/objects/commands.cfg</span><br><span class="line">  30 cfg_file=/usr/<span class="built_in">local</span>/nagios/etc/objects/contacts.cfg</span><br><span class="line">  31 cfg_file=/usr/<span class="built_in">local</span>/nagios/etc/objects/timeperiods.cfg</span><br><span class="line">  32 cfg_file=/usr/<span class="built_in">local</span>/nagios/etc/objects/templates.cfg</span><br><span class="line">  33 32 cfg_file=/usr/<span class="built_in">local</span>/nagios/etc/objects/windows.cfg</span><br></pre></td></tr></table></figure><p><strong>linux 监控插件(nrpe), linux端</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@anyue ~]<span class="comment"># useradd nagios </span></span><br><span class="line">[root@xy ~]<span class="comment"># tar -xzvf nagios-plugins-1.4.15.tar.gz </span></span><br><span class="line">[root@xy nagios-plugins-1.4.15]<span class="comment"># ./configure --with-nagios-user=nagios --with-nagios-group=nagios   </span></span><br><span class="line">[root@xy nagios-plugins-1.4.15]<span class="comment"># make all &amp;&amp;  make install </span></span><br><span class="line">[root@anyue nagios]<span class="comment"># tar -xzf nrpe-3.2.1.tar.gz</span></span><br><span class="line">[root@anyue nrpe-3.2.1]<span class="comment"># ./configure --enable-ssl --with-ssl-lib=/usr/lib64/  </span></span><br><span class="line">[root@anyue nrpe-3.2.1]<span class="comment"># make all </span></span><br><span class="line">[root@anyue nrpe-3.2.1]<span class="comment"># make install-plugin</span></span><br><span class="line">[root@anyue nrpe-3.2.1]<span class="comment"># make install-daemon</span></span><br><span class="line">[root@anyue nrpe-3.2.1]<span class="comment"># make install-daemon-config</span></span><br><span class="line">[root@anyue nrpe-3.2.1]<span class="comment"># cd /usr/local/nagios/etc/nrpe.cfg </span></span><br><span class="line">  allowed_hosts=serverIP 127.0.0.1</span><br><span class="line">[root@anyue etc]<span class="comment"># /usr/local/nagios/bin/nrpe -c /usr/local/nagios/etc/nrpe.cfg -d  # tcp/5666</span></span><br></pre></td></tr></table></figure><h3 id="3-Zabbix-监控构建"><a href="#3-Zabbix-监控构建" class="headerlink" title="3. Zabbix 监控构建"></a>3. Zabbix 监控构建</h3><h4 id="3-1-初始化系统"><a href="#3-1-初始化系统" class="headerlink" title="3.1 初始化系统"></a>3.1 初始化系统</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># systemctl stop firewalld  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl disable firewalld  </span></span><br><span class="line">[root@xy ~]<span class="comment"># setenforce 0</span></span><br><span class="line">[root@xy ~]<span class="comment"># sed -i &quot;s/SELINUX=enforcing/SELINUX=disabled/g&quot; /etc/selinux/config </span></span><br></pre></td></tr></table></figure><h4 id="3-2-构建-LAMP-环境"><a href="#3-2-构建-LAMP-环境" class="headerlink" title="3.2 构建 LAMP 环境"></a>3.2 构建 LAMP 环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># wget http://mirros.163.com/.help/CentOS7-Base-163.repo </span></span><br><span class="line">[root@xy ~]<span class="comment"># yum clean all  </span></span><br><span class="line">[root@xy ~]<span class="comment"># yum makecache fast   </span></span><br><span class="line">[root@xy ~]<span class="comment"># yum -y install mariadb mariadb-server httpd php php-mysql php-mbstring php-gd php-bcmatch php-ldap php=xml   </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable httpd </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart httpd </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable mariadb  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart mariadb  </span></span><br><span class="line">[root@xy ~]<span class="comment"># mysql_secure_installation </span></span><br></pre></td></tr></table></figure><h4 id="3-3-安装配置zabbix-server"><a href="#3-3-安装配置zabbix-server" class="headerlink" title="3.3 安装配置zabbix-server"></a>3.3 安装配置zabbix-server</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># rpm -ivh http://repo.zabbix.com/zabbix/3.2/rhel/7/x86_64/zabbix-release-3.2-1.el7.noarch.rpm  # 官方源: repo.zabbix.com  </span></span><br><span class="line">[root@xy ~]<span class="comment"># rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX</span></span><br><span class="line">[root@xy ~]<span class="comment"># yum -y install zabbix-server-mysql zabbix-web zabbix-web-mysql zabbix-agent  # 连接数据库方案 Web可视化方案  </span></span><br><span class="line">[root@xy ~]<span class="comment"># mysql -uroot -p  # 还原官方数据库  </span></span><br><span class="line">  MariaDB [(none)]&gt; create database zabbix default character <span class="built_in">set</span> utf8 collate utf8_bin;  </span><br><span class="line">  MariaDB [(none)]&gt; grant all privileges on zabbix.* to zabbix@localhost identified by <span class="string">&#x27;zabbix&#x27;</span>;</span><br><span class="line">[root@xy ~]<span class="comment"># cd /usr/share/doc/zabbix-server-mysql-3.2.11/  </span></span><br><span class="line">[root@xy zabbix-server-mysql-3.2.11]<span class="comment"># zcat create.sql.gz | mysql -uroot -p -Dzabbix  # zcat 解压并查看  </span></span><br><span class="line">[root@xy zabbix-server-mysql-3.2.11]<span class="comment"># vim /etc/zabbix/zabbix_server.conf  ✔</span></span><br><span class="line">  LogFile=/tmp/zabbix_server.log</span><br><span class="line">  DBHost=localhost  <span class="comment"># 82 </span></span><br><span class="line">  DBName=zabbix  </span><br><span class="line">  DBUser=zabbix  </span><br><span class="line">  DBPassword=zabbix  <span class="comment"># 115</span></span><br><span class="line">[root@xy zabbix-server-mysql-3.2.11]<span class="comment"># systemctl start zabbix-server  </span></span><br><span class="line">[root@xy zabbix-server-mysql-3.2.11]<span class="comment"># systemctl enable zabbix-server</span></span><br></pre></td></tr></table></figure><h4 id="3-4-安装配置zabbix-web"><a href="#3-4-安装配置zabbix-web" class="headerlink" title="3.4 安装配置zabbix-web"></a>3.4 安装配置zabbix-web</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@xy zabbix-server-mysql-3.2.11]<span class="comment"># vim /etc/httpd/conf.d/zabbix.conf </span></span><br><span class="line">  &lt;virtualHost IP:80&gt;     <span class="comment"># 采用虚拟主机访问方式</span></span><br><span class="line">  servername zabbix.anyu967.com</span><br><span class="line">  documentroot /usr/share/zabbix    </span><br><span class="line">  ...</span><br><span class="line">  php_value date.timezone Asia/Shanghai   <span class="comment"># 更改时区: 19</span></span><br><span class="line">  &lt;/VirtualHost&gt;</span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart httpd  </span></span><br><span class="line">[root@xy ~]<span class="comment"># yum -y install ntpdate  </span></span><br><span class="line">[root@xy ~]<span class="comment"># netstat -anpt | grep :10050  # Listenport: 10050  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /usr/share/zabbix/include/locales.inc.php   # 中文选项</span></span><br><span class="line">  zh_CN =&gt; [<span class="string">&#x27;name&#x27;</span> =&gt; _(<span class="string">&#x27;Chinese (zh_CN)&#x27;</span>, <span class="string">&#x27;display&#x27;</span> =&gt; <span class="literal">true</span>)],</span><br><span class="line">[root@xy ~]<span class="comment"># mv simsun.ttc /usr/share/zabbix/fonts    # win+r fonts  </span></span><br><span class="line">[root@anyue zabbix]<span class="comment"># cd !$</span></span><br><span class="line">[root@xy fonts]<span class="comment"># chomod a+x song.ttf  </span></span><br><span class="line">[root@xy fonts]<span class="comment"># vim /usr/share/zabbix/include/defines.inc.php  # /fonts  </span></span><br><span class="line">  define(<span class="string">&#x27;ZBX_GRAPH_FONT_NAME&#x27;</span>,       <span class="string">&#x27;song&#x27;</span>);  <span class="comment"># font file name</span></span><br></pre></td></tr></table></figure><h4 id="3-5-Zabbix-添加监控主机-自动发现-10-10-10-12"><a href="#3-5-Zabbix-添加监控主机-自动发现-10-10-10-12" class="headerlink" title="3.5 Zabbix 添加监控主机 / 自动发现  10.10.10.12"></a>3.5 Zabbix 添加监控主机 / 自动发现  10.10.10.12</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install zabbix-sender zabbix-agent-3.2.11-1.el7.x86_64.rpm  # 被监控服务器</span></span><br><span class="line">[root@xy ~]<span class="comment"># service httpd start</span></span><br><span class="line">[root@xy ~]<span class="comment"># echo &quot;Hello,HTML~&quot; &gt;&gt; /var/www/html/index.html  </span></span><br><span class="line">[root@xy ~]<span class="comment"># curl localhost</span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/zabbix/zabbix_agentd.conf  </span></span><br><span class="line">  <span class="comment">####### GENRAL PARAMETERS</span></span><br><span class="line">  PidFile=/var/run/zabbix/zabbix_agent.pid</span><br><span class="line">  <span class="comment"># LogType=file</span></span><br><span class="line">  LogFile=/tmp/zabbix_agentd.log</span><br><span class="line">  <span class="comment">####### Passive checks related</span></span><br><span class="line">  <span class="comment">####### Active checks related </span></span><br><span class="line">  Server=10.10.10.11     <span class="comment"># zabbix-server IP</span></span><br><span class="line">  ServerActive=10.10.10.11  </span><br><span class="line">  Hostname=10.10.10.12  </span><br><span class="line">[root@xy ~]<span class="comment"># service zabbix-agent start  </span></span><br><span class="line">[root@xy ~]<span class="comment"># chkconfig zabbix-agent on   </span></span><br><span class="line">[root@xy ~]<span class="comment"># netstat -anptl | grep :10050   </span></span><br><span class="line">[root@xy ~]<span class="comment"># yum -y install zabbix-sender zabbix-agent-3.2.1-1.el6.x86_64.rpm  # 10.10.10.13 </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/zabbix/zabbix_agentd.conf</span></span><br><span class="line">  Server=10.10.10.11  </span><br><span class="line">  ServerActive=10.10.10.11  </span><br><span class="line">  Hostname=10.10.10.13</span><br></pre></td></tr></table></figure><p><strong>先创建动作–&gt; 自动发现</strong>  </p><img src="/posts/48810125/zabbix-autofind.png" class title="[zabbix-autofind]">  <img src="/posts/48810125/zabbix-autofind1.png" class title="[zabbix-autofind1]">  <img src="/posts/48810125/zabbix-autofind2.png" class title="[zabbix-autofind2]">  <img src="/posts/48810125/zabbix-autofind3.png" class title="[zabbix-autofind3]">  <h4 id="3-6-Zabbix-Nginx-并发监控-自定义脚本功能-10-10-10-12"><a href="#3-6-Zabbix-Nginx-并发监控-自定义脚本功能-10-10-10-12" class="headerlink" title="3.6 Zabbix Nginx 并发监控(自定义脚本功能)  10.10.10.12"></a>3.6 Zabbix Nginx 并发监控(自定义脚本功能)  10.10.10.12</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[root@xy nginx-1.2.6]<span class="comment"># yum -y install pcre pcre-devel zlib zlib-devel  </span></span><br><span class="line">[root@xy nginx-1.2.6]<span class="comment"># ./configure --help | grep status  # 查询模块  </span></span><br><span class="line">[root@xy nginx-1.2.6]<span class="comment"># useradd -s /sbin/nologin -M nginx  </span></span><br><span class="line">[root@xy nginx-1.2.6]<span class="comment"># ./configure --prefix=/usr/local/nginx --user=nginx --group=nginx --with-htttp_stub_status_module</span></span><br><span class="line">[root@xy nginx-1.2.6]<span class="comment"># make &amp;&amp; make install  </span></span><br><span class="line">[root@xy nginx-1.2.6]<span class="comment"># echo &quot;123&quot; &gt;&gt; /usr/local/nginx/html/index.html </span></span><br><span class="line">[root@xy nginx-1.2.6]<span class="comment"># /usr/local/nginx/sbin/nginx</span></span><br><span class="line">[root@xy nginx-1.2.6]<span class="comment"># vim /usr/local/nginx/conf/nginx.conf  </span></span><br><span class="line">  location    /nginx-status &#123;</span><br><span class="line">      stub_status on;</span><br><span class="line">  &#125;</span><br><span class="line">[root@xy nginx-1.2.6]<span class="comment"># /usr/local/nginx/sbin/nginx -t  </span></span><br><span class="line">[root@xy nginx-1.2.6]<span class="comment"># kill -HUP $(cat /usr/local/nginx/logs/nginx.pid)</span></span><br><span class="line">  <span class="comment">#!/bin/bash</span></span><br><span class="line">  <span class="comment"># nginx_status.sh</span></span><br><span class="line">  <span class="comment"># Active connections: 3</span></span><br><span class="line">  <span class="comment"># server accepts handle requests</span></span><br><span class="line">  <span class="comment">#   4   4   5</span></span><br><span class="line">  <span class="comment"># Reading: 1  Writing: 1  Waiting: 1  </span></span><br><span class="line"></span><br><span class="line">  HOST=<span class="string">&quot;10.10.10.12&quot;</span></span><br><span class="line">  PORT=<span class="string">&quot;80&quot;</span></span><br><span class="line">  <span class="comment"># 检测 nginx 进程是否存在  </span></span><br><span class="line">  <span class="keyword">function</span> ping &#123;</span><br><span class="line">      /sbin/pidof nginx | wc -l</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment"># 检测 nginx 性能</span></span><br><span class="line">  <span class="keyword">function</span> active &#123;</span><br><span class="line">      /usr/bin/curl <span class="string">&quot;http://<span class="variable">$HOST</span>:<span class="variable">$PORT</span>/ngx_status&quot;</span> 2&gt;/dev/null | grep <span class="string">&#x27;Active&#x27;</span> | awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> reading &#123;</span><br><span class="line">      /usr/bin/curl <span class="string">&quot;http://<span class="variable">$HOST</span>:<span class="variable">$PORT</span>/ngx_status&quot;</span> 2&gt;/dev/null | grep <span class="string">&#x27;Reading&#x27;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> writing &#123;</span><br><span class="line">      /usr/<span class="built_in">local</span>/curl <span class="string">&quot;http://<span class="variable">$HOST</span>:<span class="variable">$PORT</span>/ngx_status&quot;</span> 2&gt;/dev/null | grep <span class="string">&#x27;Writing&#x27;</span> | awk <span class="string">&#x27;&#123;print $4&#125;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> waiting &#123;</span><br><span class="line">      /usr/<span class="built_in">local</span>/curl <span class="string">&quot;http://<span class="variable">$HOST</span>:<span class="variable">$PORT</span>/ngx_status&quot;</span> 2&gt;/dev/null | grep <span class="string">&#x27;waiting&#x27;</span> | awk <span class="string">&#x27;&#123;print $6&#125;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> accepts &#123;</span><br><span class="line">      /usr/<span class="built_in">local</span>/curl <span class="string">&quot;http://<span class="variable">$HOST</span>:<span class="variable">$PORT</span>/ngx_status&quot;</span> 2&gt;/dev/null | awk NR==3 | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> handle &#123;</span><br><span class="line">      /usr/<span class="built_in">local</span>/curl <span class="string">&quot;http://<span class="variable">$HOST</span>:<span class="variable">$PORT</span>/ngx_status&quot;</span> 2&gt;/dev/null | awk NR==3 | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> requests &#123;</span><br><span class="line">      /usr/<span class="built_in">local</span>/curl <span class="string">&quot;http://<span class="variable">$HOST</span>:<span class="variable">$PORT</span>/ngx_status&quot;</span> 2&gt;/dev/null | awk NR==3 | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span></span><br><span class="line">  &#125;    </span><br><span class="line">  <span class="comment"># 执行 function </span></span><br><span class="line">  <span class="variable">$1</span></span><br><span class="line">  %s/ngx_status/nginx_status/g</span><br><span class="line">[root@xy nginx-1.2.6]<span class="comment"># chmod a+x nginx-status.sh  </span></span><br><span class="line">[root@xy nginx-1.2.6]<span class="comment"># mv nginx-status.sh /etc/zabbix/zabbix_agentd.d/ </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/zabbix/zabbix_agentd.conf  ✔</span></span><br><span class="line">  UnsafeUserParameter=1  </span><br><span class="line">  UserParameter=nginx.status[*],/etc/zabbix/zabbix_agentd.d/nginx-status.sh <span class="variable">$1</span>  </span><br><span class="line">[root@xy ~]<span class="comment"># service zabbix-agent restart</span></span><br><span class="line">[root@xy ~]<span class="comment"># yum -y install zabbix-get      # 10.10.10.11 </span></span><br><span class="line">[root@xy ~]<span class="comment"># zabbix_get -s 10.10.10.12 -k &#x27;nginx.status[requests]&#x27;  </span></span><br></pre></td></tr></table></figure><p><a href="https://monitoringartist.github.io/zabbix-searcher/">Zabbix-templete下载</a></p><h4 id="3-7-Zabbix-Web场景、组合图"><a href="#3-7-Zabbix-Web场景、组合图" class="headerlink" title="3.7 Zabbix Web场景、组合图"></a>3.7 Zabbix Web场景、组合图</h4><p><strong>监控主机–&gt; 创建应用集–&gt; 创建web场景–&gt; 创建触发器</strong>    </p><img src="/posts/48810125/zabbix-web%E5%9C%BA%E6%99%AF.png" class title="[zabbix-web场景]">  <img src="/posts/48810125/zabbix-web%E5%9C%BA%E6%99%AF1.png" class title="[zabbix-web场景1]">  <p><strong>创建聚合图形–&gt; 编辑聚合图形–&gt; 添加组件</strong>  </p><img src="/posts/48810125/zabbix-%E8%81%9A%E5%90%88%E5%9B%BE%E5%BD%A2.png" class title="[zabbix-聚合图形]">  <img src="/posts/48810125/zabbix-%E8%81%9A%E5%90%88%E5%9B%BE%E5%BD%A21.png" class title="[zabbix-聚合图形1]">  <h4 id="3-8-Zabbix-报警设置-管理–-gt-报警媒介类型–-gt-创建媒体类型"><a href="#3-8-Zabbix-报警设置-管理–-gt-报警媒介类型–-gt-创建媒体类型" class="headerlink" title="3.8 Zabbix 报警设置(管理–&gt; 报警媒介类型–&gt; 创建媒体类型)"></a>3.8 Zabbix 报警设置(管理–&gt; 报警媒介类型–&gt; 创建媒体类型)</h4><img src="/posts/48810125/%E9%A1%B5%E9%9D%A2%E8%AD%A6%E5%91%8A.png" class title="[页面警告]">  <h5 id="3-8-1-邮件报警功能（脚本指定路径查看-etc-zabbix-zabbix-server-conf）"><a href="#3-8-1-邮件报警功能（脚本指定路径查看-etc-zabbix-zabbix-server-conf）" class="headerlink" title="3.8.1 邮件报警功能（脚本指定路径查看: /etc/zabbix/zabbix_server.conf）"></a>3.8.1 邮件报警功能（脚本指定路径查看: /etc/zabbix/zabbix_server.conf）</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">to=<span class="variable">$1</span></span><br><span class="line">subject=<span class="variable">$2</span></span><br><span class="line">context=<span class="variable">$3</span></span><br><span class="line"><span class="comment">#url=$4</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$context</span>&quot;</span> |mail -s <span class="string">&quot;<span class="variable">$subject</span>&quot;</span> <span class="string">&quot;<span class="variable">$to</span>&quot;</span></span><br><span class="line"></span><br><span class="line">vim /etc/mail.rc</span><br><span class="line"><span class="built_in">set</span> from=发件邮箱</span><br><span class="line"><span class="built_in">set</span> smtp=smtp服务器</span><br><span class="line"><span class="built_in">set</span> smtp-auth-user=发件人邮箱账户</span><br><span class="line"><span class="built_in">set</span> smtp-auth-password=发件人邮箱账户密码</span><br><span class="line"><span class="built_in">set</span> smtp-auth=login</span><br></pre></td></tr></table></figure><img src="/posts/48810125/mail.png" class title="[zabbix_mail]">  <blockquote><p>注意: 若某个zabbix 用户也想使用邮箱媒介报警，则需要在<code>管理--&gt; 用户--&gt; 报警媒介</code>中添加</p></blockquote><h4 id="3-9-创建动作-触发器"><a href="#3-9-创建动作-触发器" class="headerlink" title="3.9 创建动作(触发器)"></a>3.9 创建动作(触发器)</h4><ul><li><p>脚本参数:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">ALERT.SENDTO</span>&#125;</span><br><span class="line">&#123;<span class="string">ALERT.SUBJECT</span>&#125;</span><br><span class="line">&#123;<span class="string">ALERT.MESSAGE</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>报警参数</p><ul><li><p>标题改为:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">故障&#123;TRIGGER.STATUS&#125;,服务器:&#123;HOSTNAME1&#125;发生:&#123;TRIGGER.NAME&#125;故障!</span></span><br></pre></td></tr></table></figure></li><li><p>信息改为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">告警主机:&#123;HOSTNAME1&#125;</span><br><span class="line">告警时间:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">告警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">告警信息:&#123;TRIGGER.NAME&#125;</span><br><span class="line">告警项目:&#123;TRIGGER.KEY1&#125;</span><br><span class="line">问题详情:&#123;TIME.NAME&#125;:&#123;TIME.VALUE&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;:&#123;TIME.VALUE1&#125;</span><br><span class="line">事件 ID:&#123;EVENT.ID&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>恢复参数</p><ul><li><p>标题改为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恢复&#123;TRIGGER.STATUS&#125;,服务器:&#123;HOSTNAME1&#125;: &#123;TRIGGER.NAME&#125;已恢复!</span><br></pre></td></tr></table></figure></li><li><p>信息改为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">告警主机:&#123;HOSTNAME1&#125;</span><br><span class="line">告警时间:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">告警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">告警信息:&#123;TRIGGER.NAME&#125;</span><br><span class="line">告警项目:&#123;TRIGGER.KEY1&#125;</span><br><span class="line">问题详情:&#123;TIME.NAME&#125;:&#123;TIME.VALUE&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;:&#123;TIME.VALUE1&#125;</span><br><span class="line">事件 ID:&#123;EVENT.ID&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><img src="/posts/48810125/%E9%92%89%E9%92%89%E8%AD%A6%E5%91%8A.png" class title="[钉钉警告]">  <img src="/posts/48810125/%E9%92%89%E9%92%89%E8%AD%A6%E5%91%8A1.png" class title="[钉钉警告1]"> ]]></content>
      
      
      <categories>
          
          <category> Devops, linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> Devops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown</title>
      <link href="/posts/6fc8eab5.html"/>
      <url>/posts/6fc8eab5.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-11-Markdown</p><a id="more"></a><h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容 "></a>主要内容 <a id="back-to-top"></a></h2><blockquote><h4 id="Markdown是什么？"><a href="#Markdown是什么？" class="headerlink" title="Markdown是什么？"></a>Markdown<em>是什么</em>？</h4><h4 id="谁创造了它？"><a href="#谁创造了它？" class="headerlink" title="谁创造了它？"></a><em>谁</em>创造了它？</h4><h4 id="为什么要使用它？"><a href="#为什么要使用它？" class="headerlink" title="为什么要使用它？"></a><em>为什么</em>要使用它？</h4><h4 id="怎么使用？"><a href="#怎么使用？" class="headerlink" title="怎么使用？"></a><em>怎么</em>使用？</h4><h4 id="谁在用？"><a href="#谁在用？" class="headerlink" title="谁在用？"></a><em>谁</em>在用？</h4><h4 id="尝试一下"><a href="#尝试一下" class="headerlink" title="尝试一下"></a>尝试一下</h4></blockquote><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="1-Markdown是什么？"><a href="#1-Markdown是什么？" class="headerlink" title="1. Markdown是什么？"></a>1. Markdown<em>是什么</em>？</h3><p><strong>Markdown</strong>是一种轻量级<strong>标记语言</strong>，它以纯文本形式(<em>易读、易写、易更改</em>)编写文档，并最终以<a href="#%E5%9F%BA%E4%BA%8EHTML">HTML格式发布</a>。<br><strong>Markdown</strong>也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。    </p><h3 id="2-谁创造了它？"><a href="#2-谁创造了它？" class="headerlink" title="2. 谁创造了它？"></a>2. <em>谁</em>创造了它？</h3><p>它由<a href="http://www.aaronsw.com/"><strong>Aaron Swartz</strong></a>和<strong>John Gruber</strong>共同设计，<strong>Aaron Swartz</strong>就是那位于去年（<em>2013年1月11日</em>）自杀,有着<strong>开挂</strong>一般人生经历的程序员。维基百科对他的<a href="http://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%A6%C2%B7%E6%96%AF%E6%B2%83%E8%8C%A8">介绍</a>是：<strong>软件工程师、作家、政治组织者、互联网活动家、维基百科人</strong>。    </p><p>他有着足以让你跪拜的人生经历：    </p><ul><li><strong>14岁</strong>参与RSS 1.0规格标准的制订。     </li><li><strong>2004</strong>年入读<strong>斯坦福</strong>，之后退学。   </li><li><strong>2005</strong>年创建<a href="http://infogami.org/">Infogami</a>，之后与<a href="http://www.reddit.com/">Reddit</a>合并成为其合伙人。   </li><li><strong>2010</strong>年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。   </li><li><strong>2011</strong>年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。     </li><li><strong>2013</strong>年1月自杀身亡, 天才都有早逝的归途。 <img src="/posts/6fc8eab5/Aaron_Swartz.jpg" class title="[Aaron Swartz]"></li></ul><h3 id="3-为什么要使用它？"><a href="#3-为什么要使用它？" class="headerlink" title="3. 为什么要使用它？"></a>3. <em>为什么</em>要使用它？</h3><ul><li>它是易读（看起来舒服）、易写（语法简单）、易更改<strong>纯文本</strong>。处处体现着<strong>极简主义</strong>的影子。</li><li>兼容HTML，可以转换为HTML格式发布。</li><li>跨平台使用。</li><li>越来越多的网站支持Markdown。</li><li>更方便清晰地组织你的电子邮件。（Markdown-here, Airmail）</li><li>摆脱Word（我不是认真的）。</li></ul><h3 id="4-怎么使用？"><a href="#4-怎么使用？" class="headerlink" title="4. 怎么使用？"></a>4. <em>怎么</em>使用？</h3><p>如果不算<strong>扩展</strong>，Markdown的语法绝对<strong>简单</strong>到让你爱不释手。</p><p>Markdown语法主要分为如下几大部分：<br><strong>标题</strong>，<strong>段落</strong>，<strong>区块引用</strong>，<strong>代码区块</strong>，<strong>强调</strong>，<strong>列表</strong>，<strong>分割线</strong>，<strong>链接</strong>，<strong>图片</strong>，<strong>反斜杠 <code>\</code>**，</strong>符号’`’**。</p><h4 id="4-1-标题"><a href="#4-1-标题" class="headerlink" title="4.1 标题"></a>4.1 标题</h4><p>两种形式：<br>1）使用<code>=</code>和<code>-</code>标记一级和二级标题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">一级标题: &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;   </span><br><span class="line">二级标题: ---------</span><br></pre></td></tr></table></figure><p>效果：</p><blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题   "></a>一级标题   </h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2></blockquote><p>2）使用<code>#</code>，可表示1-6级标题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题   </span><br><span class="line">## 二级标题   </span><br><span class="line">### 三级标题   </span><br><span class="line">#### 四级标题   </span><br><span class="line">##### 五级标题   </span><br><span class="line">###### 六级标题   </span><br></pre></td></tr></table></figure><p>效果：</p><blockquote><h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6></blockquote><h4 id="4-2-段落"><a href="#4-2-段落" class="headerlink" title="4.2 段落"></a>4.2 段落</h4><p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用<strong>两个以上</strong>空格加上回车（引用中换行省略回车）。</p><h4 id="4-3-区块引用"><a href="#4-3-区块引用" class="headerlink" title="4.3 区块引用"></a>4.3 区块引用</h4><p>在段落的每行或者只在第一行使用符号<code>&gt;</code>,还可使用多个嵌套引用，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 区块引用  </span><br><span class="line">&gt;&gt; 嵌套引用  </span><br></pre></td></tr></table></figure><p>效果：</p><blockquote><p>区块引用  </p><blockquote><p>嵌套引用</p></blockquote></blockquote><h4 id="4-4-代码区块"><a href="#4-4-代码区块" class="headerlink" title="4.4 代码区块"></a>4.4 代码区块</h4><p>代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如<br>普通段落：</p><p>void main()<br>{<br>    printf(“Hello, Markdown.”);<br>}    </p><p>代码区块：</p><pre><code>void main()&#123;    printf(&quot;Hello, Markdown.&quot;);&#125;</code></pre><p><strong>注意</strong>:需要和普通段落之间存在空行。</p><h4 id="4-5-强调"><a href="#4-5-强调" class="headerlink" title="4.5 强调"></a>4.5 强调</h4><p>在强调内容两侧分别加上<code>*</code>或者<code>_</code>，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*斜体*，_斜体_    </span><br><span class="line">**粗体**，__粗体__</span><br></pre></td></tr></table></figure><p>效果：</p><blockquote><p><em>斜体</em>，<em>斜体</em><br><strong>粗体</strong>，<strong>粗体</strong><br><del>删除线</del> <s>删除线（开启识别HTML标签时）</s></p></blockquote><h4 id="4-6-列表"><a href="#4-6-列表" class="headerlink" title="4.6 列表"></a>4.6 列表</h4><p>使用<code>·</code>、<code>+</code>、或<code>-</code>标记无序列表，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-（+\*） 第一项</span><br><span class="line">-（+\*） 第二项</span><br><span class="line">- （+\*）第三项</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：标记后面最少有一个_空格_或_制表符_。若不在引用区块中，必须和前方段落之间存在空行。</p><p>效果：</p><blockquote><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><p>有序列表的标记方式是将上述的符号换成数字,并辅以<code>.</code>，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 1 . 第一项   </span><br><span class="line">&gt; 2 . 第二项    </span><br><span class="line">&gt; 3 . 第三项    </span><br></pre></td></tr></table></figure><p>效果：</p><blockquote><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol></blockquote><h4 id="4-7-分割线"><a href="#4-7-分割线" class="headerlink" title="4.7 分割线"></a>4.7 分割线</h4><p>分割线最常使用就是三个或以上<code>*</code>，还可以使用<code>-</code>和<code>_</code>。</p><h4 id="4-8-链接"><a href="#4-8-链接" class="headerlink" title="4.8 链接"></a>4.8 链接</h4><p>链接可以形式   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[anyue967Blog](https:&#x2F;&#x2F;anyue967.github.io&#x2F; &quot;Markdown&quot;)</span><br></pre></td></tr></table></figure><p>效果：</p><blockquote><p><a href="https://anyue967.github.io/" title="Markdown">anyue967Blog</a></p></blockquote><h4 id="4-9-图片"><a href="#4-9-图片" class="headerlink" title="4.9 图片"></a>4.9 图片</h4><p>添加图片的形式和链接相似，只需在链接的基础上前方加一个<code>！</code>。<br>图片加链接 (Image + Link)<br><a href="https://www.mdeditor.com/images/logos/markdown.png" title="markdown"><img src="https://www.mdeditor.com/images/logos/markdown.png"></a> </p><h4 id="4-10-反斜杠"><a href="#4-10-反斜杠" class="headerlink" title="4.10 反斜杠\"></a>4.10 反斜杠<code>\</code></h4><p>相当于<strong>反转义</strong>作用。使符号成为普通符号。</p><h4 id="4-11-符号’-’"><a href="#4-11-符号’-’" class="headerlink" title="4.11 符号’`’"></a>4.11 符号’`’</h4><p>起到标记作用。如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#96;ctrl+a&#96;</span><br></pre></td></tr></table></figure><p>效果：</p><blockquote><p><code>ctrl+a</code>    </p></blockquote><h4 id="4-12-GFM-task-list"><a href="#4-12-GFM-task-list" class="headerlink" title="4.12 GFM task list"></a>4.12 GFM task list</h4><ul><li><input checked disabled type="checkbox"> GFM task list 1</li><li><input checked disabled type="checkbox"> GFM task list 2</li><li><input disabled type="checkbox"> GFM task list 3<ul><li><input disabled type="checkbox"> GFM task list 3-1</li><li><input disabled type="checkbox"> GFM task list 3-2</li><li><input disabled type="checkbox"> GFM task list 3-3</li></ul></li><li><input disabled type="checkbox"> GFM task list 4<ul><li><input disabled type="checkbox"> GFM task list 4-1</li><li><input disabled type="checkbox"> GFM task list 4-2</li></ul></li></ul><h4 id="5-谁在用？"><a href="#5-谁在用？" class="headerlink" title="5. 谁在用？"></a>5. <em>谁</em>在用？</h4><p>Markdown的使用者：</p><ul><li>GitHub</li><li>简书</li><li>Stack Overflow</li><li>Apollo</li><li>Moodle</li><li>Reddit</li><li>等等</li></ul><h4 id="6-尝试一下"><a href="#6-尝试一下" class="headerlink" title="6. 尝试一下"></a>6. 尝试一下</h4><ul><li><strong>Chrome</strong>下的插件诸如<code>stackedit</code>与<code>markdown-here</code>等非常方便，也不用担心平台受限。</li><li><strong>在线</strong>的dillinger.io评价也不错   </li><li><strong>Windowns</strong>下的MarkdownPad也用过，不过免费版的体验不是很好。    </li><li><strong>Mac</strong>下的Mou是国人贡献的，口碑很好。</li><li><strong>Linux</strong>下的ReText不错。    </li></ul><p><strong>当然，最终境界永远都是笔下是语法，心中格式化 :)。</strong></p><hr><p><strong>注意</strong>：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。<br>虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber]<br>(<a href="http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/">http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/</a> )。</p><hr><p>以上基本是所有traditonal markdown的语法。</p><h3 id="7-表格："><a href="#7-表格：" class="headerlink" title="7.表格："></a>7.表格：</h3><p>可以使用<code>|</code>创建表格和连字符<code>-</code>用于创建每个列的标题，而<code>|</code>用于分隔每个列。必须在表格前面加一个空行才能正确呈现。<code>:</code>居中、居左与居右对齐  </p><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content Cell</td><td>Content Cell</td></tr><tr><td>Content Cell</td><td>Content Cell</td></tr></tbody></table><table><thead><tr><th align="left">Left-aligned</th><th align="center">Center-aligned</th><th align="right">Right-aligned</th></tr></thead><tbody><tr><td align="left">git status</td><td align="center">git status</td><td align="right">git status</td></tr><tr><td align="left">git diff</td><td align="center">git diff</td><td align="right">git diff</td></tr></tbody></table><p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p><h3 id="8-锚点"><a href="#8-锚点" class="headerlink" title="8.锚点"></a>8.锚点</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[这是一个锚点](#锚点在这里)  </span><br></pre></td></tr></table></figure><h1 id="锚点在这里"><a href="#锚点在这里" class="headerlink" title="锚点在这里:  "></a>锚点在这里: <a id="锚点id"></a> </h1><h3 id="8-锚点的使用"><a href="#8-锚点的使用" class="headerlink" title="8.锚点的使用"></a>8.锚点的使用</h3><p><a href="#%E6%AD%A3%E6%96%87">回到顶部1</a><br><a href="#back-to-top">回到顶部2</a><br><a href="#back-to-top" target="_self">回到顶部</a></p>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> story </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wordpress部署</title>
      <link href="/posts/137599dc.html"/>
      <url>/posts/137599dc.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-11-WordPress</p><a id="more"></a><h2 id="redhat系统"><a href="#redhat系统" class="headerlink" title="redhat系统"></a>redhat系统</h2><h2 id="软件版本"><a href="#软件版本" class="headerlink" title="软件版本:"></a>软件版本:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://wordpress.org/latest.tar.gz </span><br><span class="line">$ wget https://cdn.mysql.com//Downloads/MySQL-5.7/ mysql-5.7.27-1.el7.x86_64.rpm-bundle.tar <span class="comment"># rpm</span></span><br><span class="line">$ wget https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.27-el7-x86_64.tar.gz <span class="comment"># 二进制包 </span></span><br><span class="line">$ wget http://mirrors.tuna.tsinghua.edu.cn/apache//httpd/httpd-2.4.39.tar.gz`  </span><br><span class="line">$ wget https://www.php.net/distributions/php-7.3.7.tar.bz2  </span><br></pre></td></tr></table></figure><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖:"></a>安装依赖:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y apr* \ </span><br><span class="line">  autoconf automake bison bzip2 bzip2* \</span><br><span class="line">  compat* cpp curl curl-devel fontconfig fontconfig-devel \</span><br><span class="line">  freetype freetype* freetype-devel gcc gcc-c++ gd \ </span><br><span class="line">  gettext gettext-devel glibc kernel kernel-headers \</span><br><span class="line">  keyutils keyutils-libs-devel krb5-devel libcom_err-devel \ </span><br><span class="line">  libpng libpng-devel libjpeg* libsepol-devel libselinux-devel \ </span><br><span class="line">  libstdc++-devel libtool* libgomp libxml2 libxml2-devel libXpm* \ </span><br><span class="line">  libtiff libtiff* make mpfr ncurses* ntp openssl openssl-devel \</span><br><span class="line">  patch pcre-devel perl php-common php-gd policycoreutils telnet \</span><br><span class="line">  t1lib t1lib* nasm nasm* wget zlib-devel</span><br><span class="line">  </span><br><span class="line">$ tar -xzvf cmake-3.15.1.tar.gz   </span><br><span class="line">$ .&#x2F;configure</span><br><span class="line">$ make &amp;&amp; make install  </span><br></pre></td></tr></table></figure><h3 id="1-部署软件"><a href="#1-部署软件" class="headerlink" title="1. 部署软件:"></a>1. 部署软件:</h3><ul><li><strong><a href="https://www.cnblogs.com/ftl1012/p/9302206.html">参考文档1</a></strong>  </li><li><strong><a href="https://www.cnblogs.com/apollo1616/p/10205216.html">参考文档2</a></strong>  </li><li><strong><a href="https://www.cnblogs.com/wujuntian/p/8183952.html">参考文档3</a></strong>  </li><li><strong><a href="https://www.cnblogs.com/inana/p/7545103.html">参考文档4</a></strong>  </li></ul><h4 id="1-1-RPM安装Mysql"><a href="#1-1-RPM安装Mysql" class="headerlink" title="1.1 RPM安装Mysql:"></a>1.1 RPM安装Mysql:</h4><blockquote><p>在安装之前, 首先要查看的是, 系统中有没有已经安装过的情况, 键入 <code>rpm -qa|grep mysql</code> , 如果无任何显示，则表示没有安装过相关组件, 如果有, 则根据显示出来的名字, 键入<code>rpm -e --nodeps XXXX</code>(星号为你要删除的文件名字), 接着键入<code>rpm -qa|grep mariadb</code>, rpm 删除时如果有依赖关系, 可以用<code>yum remove XXXX</code>; 同样的步骤, 把出现的文件删除; 两步都完成后, 可以开始安装所需要的包了  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tar -xvf mysql-5.7.27-1.el7.x86_64.rpm-bundle.tar   </span><br><span class="line">$ yum remove mariadb-libs-5.5.35-3.el7.x86_64</span><br></pre></td></tr></table></figure><p><strong><em>依次安装, 各包之间有依赖关系</em></strong>    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -ivh mysql-community-common-5.7.27-1.el7.x86_64.rpm </span><br><span class="line">$ rpm -ivh mysql-community-libs-5.7.27-1.el7.x86_64.rpm  </span><br><span class="line">$ rpm -ivh mysql-community-client-5.7.27-1.el7.x86_64.rpm </span><br><span class="line">$ rpm -ivh mysql-community-server-5.7.27-1.el7.x86_64.rpm </span><br><span class="line">$ find / -name mysql -<span class="built_in">print</span>  </span><br><span class="line">$ rpm -ql XXXX.rpm<span class="comment">#查看安装路路径</span></span><br></pre></td></tr></table></figure><ul><li>数据库目录: <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;</span><br></pre></td></tr></table></figure></li><li>配置文件: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/mysql <span class="comment">#(mysql.server命令及配置文件)</span></span><br></pre></td></tr></table></figure></li><li>相关命令: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin <span class="comment"># (mysqladmin mysqldump等命令)</span></span><br></pre></td></tr></table></figure></li><li>启动脚本: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/etc/rc.d/init.d/   <span class="comment"># (启动脚本文件mysql的目录)  </span></span><br><span class="line">$ vim /etc/my.cnf  </span><br><span class="line"><span class="comment"># For advice on how to change settings please see</span></span><br><span class="line"><span class="comment"># http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html</span></span><br><span class="line">[mysqld]</span><br><span class="line">...</span><br><span class="line">skip-grant-tables<span class="comment"># 添加</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="1-2-二进制安装Mysql"><a href="#1-2-二进制安装Mysql" class="headerlink" title="1.2 二进制安装Mysql:"></a>1.2 二进制安装Mysql:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">$ tar -xzvf mysql-5.7.27-el7-x86_64.tar.gz</span><br><span class="line">$ groupadd mysql</span><br><span class="line">$ useradd -r -g mysql -s /sbin/nologin mysql      <span class="comment"># -r 创建系统账户  </span></span><br><span class="line">$ mv ./mysql-5.7.27-el7-x86_64 /usr/<span class="built_in">local</span>/mysql</span><br><span class="line">$ mkdir /usr/<span class="built_in">local</span>/mysql/data</span><br><span class="line">$ chown -Rf mysql:mysql /usr/<span class="built_in">local</span>/mysql/</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mysql/bin</span><br><span class="line">$ ./mysqld --initialize --user=mysql --basedir=/usr/<span class="built_in">local</span>/mysql --datadir=/usr/<span class="built_in">local</span>/myslq/data</span><br><span class="line">[Note] A temporary password is generated <span class="keyword">for</span> root@localhost: C<span class="comment">#ePz?uG+9a.  # 初始密码</span></span><br><span class="line"></span><br><span class="line">$ mkdir /var/lib/mysql </span><br><span class="line">$ ln -s /usr/<span class="built_in">local</span>/mysql/lib/ /usr/lib/mysql</span><br><span class="line">$ ln -s /tmp/mysql.sock /var/lib/mysql/mysql.sock</span><br><span class="line">$ ln -s /usr/<span class="built_in">local</span>/mysql/include/mysql /usr/include/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件</span></span><br><span class="line">$ vim /etc/cnf<span class="comment"># 配置文件</span></span><br><span class="line">  [mysqld]</span><br><span class="line">  <span class="comment">#skip-grant-tables</span></span><br><span class="line">  secure_file_priv=<span class="string">&quot;/usr/local/mysql&quot;</span></span><br><span class="line">  port = 3306</span><br><span class="line">  basedir = /usr/<span class="built_in">local</span>/mysql</span><br><span class="line">  datadir = /usr/<span class="built_in">local</span>/mysql/data</span><br><span class="line">  socket=/tmp/mysql.sock</span><br><span class="line">  pid-file=/usr/<span class="built_in">local</span>/mysql/data/mysql.pid</span><br><span class="line">  <span class="built_in">log</span>-error=/usr/<span class="built_in">local</span>/mysql/data/error.log</span><br><span class="line">  character_set_server=utf8</span><br><span class="line">  user=mysql</span><br><span class="line">  max_connections=1500</span><br><span class="line">  symbolic-links=0</span><br><span class="line">  !includedir /etc/my.cnf.d            </span><br><span class="line">$ mkdir /etc/my.cnf.d      </span><br><span class="line">$ cp ./support-files/mysql.server /etc/rc.d/init.d/mysqld</span><br><span class="line">  46 basedir=/usr/<span class="built_in">local</span>/mysql  </span><br><span class="line">  47 datadir=/usr/<span class="built_in">local</span>/mysql/data  </span><br><span class="line">$ service mysqld start    </span><br><span class="line">$ chkconfig mysqld on</span><br></pre></td></tr></table></figure><h4 id="1-3-源码编译安装Mysql"><a href="#1-3-源码编译安装Mysql" class="headerlink" title="1.3 源码编译安装Mysql:"></a>1.3 源码编译安装Mysql:</h4><p><strong><a href="https://www.cnblogs.com/galengao/p/5755788.html">源码安装参考</a></strong></p><ul><li>安装boost(若只是安装mysql, 不用安装, 编译引用解包路径即可)  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://nchc.dl.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.gz    </span><br><span class="line">$ tar xzf boost_1_59_0.tar.gz </span><br><span class="line">$ <span class="built_in">cd</span> boost_1_59_0  </span><br><span class="line">$ ./bootstrap.sh  </span><br><span class="line">$ ./b2 install</span><br><span class="line">$ useradd -r -s /sbin/nologin mysql</span><br><span class="line">$ mkdie /usr/<span class="built_in">local</span>/mysql/data</span><br><span class="line">$ chown -Rf mysql:mysql /usr/<span class="built_in">local</span>/mysql  </span><br><span class="line">$ mkdir build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">$ cmake .. \</span><br><span class="line">  -DCMAKE_INSTALL_PREFIX=/usr/<span class="built_in">local</span>/mysql \</span><br><span class="line">  -DMYSQL_DATADIR=/usr/<span class="built_in">local</span>/mysql/data \</span><br><span class="line">  -DMYSQL_USER=mysql \</span><br><span class="line">  -DSYSCONFDIR=/etc \</span><br><span class="line">  -DMYSQL_UNIX_ADDR=/usr/<span class="built_in">local</span>/mysql/mysql.sock \</span><br><span class="line">  -DWITH_DEBUG=0 \</span><br><span class="line">  -DEXTRA_CHARSETS=all \</span><br><span class="line">  -DDEFAULT_CHARSET=utf8 \ </span><br><span class="line">  -DDEFAULT_COLLATION=utf8_general_ci \</span><br><span class="line">  -DWITH_BOOST=boost</span><br><span class="line">$ make -j 4 &amp;&amp; make install  </span><br><span class="line">$ cp /etc/my.cnf /etc/my.cnf.bak </span><br><span class="line">$ <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mysql/bin</span><br><span class="line">$ ./mysqld --initialize-insecure \</span><br><span class="line">  --user=mysql \</span><br><span class="line">  --basedir=/usr/<span class="built_in">local</span>/mysql \</span><br><span class="line">  --datadir=/usr/<span class="built_in">local</span>/myslq/data </span><br><span class="line">  [Note] A temporary password is generated <span class="keyword">for</span> root@localhost: Plip9_BU81ZA</span><br><span class="line">$ ./mysql_ssl_rsa_setup \</span><br><span class="line">  --user=mysql \</span><br><span class="line">  --basedir=/usr/<span class="built_in">local</span>/mysql \</span><br><span class="line">  --datadir=/usr/<span class="built_in">local</span>/mysql/data</span><br></pre></td></tr></table></figure></li></ul><p><strong>接下来配置如二进制安装方法</strong><br><strong>关于Mysql: ERROR 1819 (HY000): Your password does not satisfy the current policy requirements解决方法:</strong>  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &#x27;validate_password%&#x27;;</span><br><span class="line">+<span class="comment">--------------------------------------+--------+</span></span><br><span class="line">| Variable_name                        | Value  |</span><br><span class="line">+<span class="comment">--------------------------------------+--------+</span></span><br><span class="line">| validate_password_check_user_name    | OFF    |</span><br><span class="line">| validate_password_dictionary_file    |        |</span><br><span class="line">| validate_password_length             | 8      |</span><br><span class="line">| validate_password_mixed_case_count   | 1      |</span><br><span class="line">| validate_password_number_count       | 1      |</span><br><span class="line">| validate_password_policy             | MEDIUM |</span><br><span class="line">| validate_password_special_char_count | 1      |</span><br><span class="line">+<span class="comment">--------------------------------------+--------+</span></span><br><span class="line">7 rows in <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">set</span> <span class="keyword">global</span> validate_password_policy=<span class="keyword">LOW</span>;  <span class="comment"># 设置校验等级</span></span><br><span class="line">  Query OK, 0 rows affected (0.00 sec) </span><br><span class="line">mysql&gt; set global validate_password_length=6;    # 设置密码长度</span><br><span class="line">  Query OK, 0 rows affected (0.01 sec)</span><br><span class="line">mysql&gt; alter user &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;123456&#x27;;</span><br><span class="line">  Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt; grant all privileges on *.* to root@&#x27;%&#x27; with grant option; </span><br><span class="line">  Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><h4 id="1-4-安装Apache"><a href="#1-4-安装Apache" class="headerlink" title="1.4 安装Apache:"></a>1.4 安装Apache:</h4><ul><li><p>安装依赖：</p></li><li><p>pcre</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf pcre-8.43.tar.gz</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/pcre</span><br><span class="line">`make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li><p>apr</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf apr-1.7.0.tar.gz</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/apr</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li><p>apr-util</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tar -xzvf apr-util-1.6.1.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./configure --prefix=/usr/<span class="built_in">local</span>/apr-util --with-apr=/usr/<span class="built_in">local</span>/apr</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> useradd www -s /sbin/nologin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./configure --prefix=/usr/<span class="built_in">local</span>/apache24 \</span></span><br><span class="line">  --with-mysql=/usr/local/mysql \</span><br><span class="line">  --with-pcre=/usr/local/pcre \</span><br><span class="line">  --with-apr=/usr/local/apr \</span><br><span class="line">  --with-apr-util=/usr/local/apr-util \</span><br><span class="line">  --with-openssl=/usr/local/openssl \</span><br><span class="line">  --with-zlib=/usr/local/zlib \</span><br><span class="line">  --with-mpm=prefork \</span><br><span class="line">  --enable-modules=most \</span><br><span class="line">  --enable-rewrite \</span><br><span class="line">  --enable-shared=max \</span><br><span class="line">  --enable-so \</span><br><span class="line">  --enable-mpms-shared=all \</span><br><span class="line">  --enable-ssl \</span><br><span class="line">  --enable-cgi \</span><br><span class="line">  --enable-mpms-shared=all </span><br></pre></td></tr></table></figure></li><li><p>自启动脚本配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/apache/bin</span><br><span class="line">vim httpd<span class="comment"># 编辑自启动脚本</span></span><br><span class="line">  <span class="comment">#!/bin/bash</span></span><br><span class="line">  <span class="comment"># chkconfig:2345 80 90</span></span><br><span class="line">  <span class="comment"># description:Apache httpd</span></span><br><span class="line">  <span class="keyword">function</span> start_http()</span><br><span class="line">  &#123;</span><br><span class="line">    /usr/<span class="built_in">local</span>/apache24/bin/apachectl  start</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> stop_http()</span><br><span class="line">  &#123;</span><br><span class="line">    /usr/<span class="built_in">local</span>/apache24/bin/apachectl  stop</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">  start)</span><br><span class="line">    start_http</span><br><span class="line">  ;;  </span><br><span class="line">  stop)</span><br><span class="line">    stop_http</span><br><span class="line">  ;;  </span><br><span class="line">  restart)</span><br><span class="line">    stop_http</span><br><span class="line">    start_http</span><br><span class="line">  ;;</span><br><span class="line">  *)</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Usage : start | stop | restart&quot;</span></span><br><span class="line">  ;;</span><br><span class="line">  <span class="keyword">esac</span></span><br><span class="line">    </span><br><span class="line">$ chmod a+x httpd</span><br><span class="line">$ cp -frp ./httpd /etc/init.d<span class="comment"># -f强制合并, 不询问-r递归合并-p保持文件属性不变</span></span><br><span class="line">$ systemctl daemon-reload</span><br><span class="line">$ systemctl start httpd</span><br><span class="line">$ chkconfig --add httpd  <span class="comment"># 设置开机自启</span></span><br><span class="line">$ vim ./apache24/conf/httpd.conf</span><br><span class="line">  164 User deamon --&gt;User www</span><br><span class="line">  165 Group deamon --&gt;Group www</span><br><span class="line">  196 <span class="comment">#ServerName www.example.com:80 --&gt;ServerName localhost:80</span></span><br><span class="line">$ firewall-cmd --permanent --add-service=http</span><br><span class="line">$ firewall-cmd --permanent --add-service=http</span><br><span class="line">$ firewall-cmd --reload </span><br></pre></td></tr></table></figure></li><li><p>测试: 192.168.10.130 –&gt;It Works!</p></li><li><p>问题1:   </p><ul><li><strong>服务不支持chkconfig的解决?</strong>  </li><li><strong>解决方法:</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> httpd 脚本的开头要这样加：  </span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#chkconfig:345 61 61 # 此行的345参数表示, 在哪些运行级别启动</span></span><br><span class="line"><span class="comment">#description:Apache httpd # 此行必写,描述服务.</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>level&lt;等级代号&gt; 　指定读系统服务要在哪一个执行等级中开启或关毕。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#等级0表示：表示关机</span></span><br><span class="line"><span class="comment">#等级1表示：单用户模式</span></span><br><span class="line"><span class="comment">#等级2表示：无网络连接的多用户命令行模式</span></span><br><span class="line"><span class="comment">#等级3表示：有网络连接的多用户命令行模式</span></span><br><span class="line"><span class="comment">#等级4表示：不可用</span></span><br><span class="line"><span class="comment">#等级5表示：带图形界面的多用户模式</span></span><br><span class="line"><span class="comment">#等级6表示：重新启动</span></span><br></pre></td></tr></table></figure></li><li><p><a href="https://anyue967.github.io/2019/06/11/LNMP%E6%9E%B6%E6%9E%84%E9%83%A8%E7%BD%B2%E5%8A%A8%E6%80%81%E7%BD%91%E7%AB%99%E7%8E%AF%E5%A2%83/">nginx参考</a>  </p></li></ul><h4 id="1-5-安装PHP7-http-pecl-php-net"><a href="#1-5-安装PHP7-http-pecl-php-net" class="headerlink" title="1.5 安装PHP7(http://pecl.php.net):"></a>1.5 安装PHP7(<a href="http://pecl.php.net/">http://pecl.php.net</a>):</h4><ul><li><p><a href="https://anyue967.github.io/2019/06/11/LNMP%E6%9E%B6%E6%9E%84%E9%83%A8%E7%BD%B2%E5%8A%A8%E6%80%81%E7%BD%91%E7%AB%99%E7%8E%AF%E5%A2%83/">依赖包安装见</a>   </p></li><li><p><a href="https://blog.csdn.net/zhou75771217/article/details/83303058">编译参考</a>  </p></li><li><p><a href="https://blog.csdn.net/m0_37886429/article/details/79643078">PHP整合apache参考</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ wget wget https://nih.at/libzip/libzip-1.2.0.tar.gz </span><br><span class="line">$ tar -xzvf libzip-1.2.0.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> libzip-1.2.0/</span><br><span class="line">$ mkdir build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">$ cmake .. -DCMAKE_INSTALL_PREFIX=/usr/<span class="built_in">local</span>/libzip </span><br><span class="line">$ make &amp;&amp; make install </span><br></pre></td></tr></table></figure></li><li><p>问题1:  </p><ul><li><strong>off_t undefined?</strong>  </li><li><strong>解决方法:</strong>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> LD_LIBRARY_PATH=/usr/<span class="built_in">local</span>/libgd/lib</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&#x27;/usr/local/lib64 # error: off_t undefined; </span></span><br><span class="line"><span class="string">  /usr/local/lib </span></span><br><span class="line"><span class="string">  /usr/lib </span></span><br><span class="line"><span class="string">  /usr/lib64&#x27;</span>&gt;&gt;/etc/ld.so.conf</span><br><span class="line">$ ldconfig -v</span><br></pre></td></tr></table></figure></li></ul></li><li><p>问题2:  </p><ul><li><strong>如何让apache支持解析PHP?</strong>  </li><li><strong>解决方法:</strong>  </li></ul></li><li><p>编译PHP必须加 <strong>–with-apxs2=/usr/local/apache24/bin/apxs</strong>, 目的是在 /usr/local/apache24/modules 下生成对应的libphp7.so</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$ ./configure \</span><br><span class="line">  --prefix=/usr/<span class="built_in">local</span>/php73 \</span><br><span class="line">  --with-config-file-path=/usr/<span class="built_in">local</span>/php73/etc \</span><br><span class="line">  --with-apxs2=/usr/<span class="built_in">local</span>/apache24/bin/apxs \</span><br><span class="line">  --<span class="built_in">enable</span>-mysqlnd \</span><br><span class="line">  --with-mysqli=mysqlnd \</span><br><span class="line">  --with-mysql-sock=/tmp/mysql.sock \</span><br><span class="line">  --with-pdo-mysql=mysqlnd \</span><br><span class="line">  --<span class="built_in">enable</span>-inline-optimization \</span><br><span class="line">  --<span class="built_in">enable</span>-opcache --<span class="built_in">enable</span>-fpm \</span><br><span class="line">  --with-fpm-user=www --with-fpm-group=www \</span><br><span class="line">  --with-gettext --with-iconv --with-mhash \</span><br><span class="line">  --with-openssl=/usr/<span class="built_in">local</span>/openssl \</span><br><span class="line">  --<span class="built_in">enable</span>-bcmath --<span class="built_in">enable</span>-soap \</span><br><span class="line">  --with-libxml-dir --<span class="built_in">enable</span>-libxml --<span class="built_in">enable</span>-pcntl \</span><br><span class="line">  --<span class="built_in">enable</span>-shmop --<span class="built_in">enable</span>-sysvsem --<span class="built_in">enable</span>-sockets \</span><br><span class="line">  --with-curl --with-zlib-dir=/usr/<span class="built_in">local</span>/zlib \</span><br><span class="line">  --<span class="built_in">enable</span>-zip --with-gd \</span><br><span class="line">  --with-png-dir=/usr/<span class="built_in">local</span>/libpng \</span><br><span class="line">  --with-jpeg-dir=/usr/<span class="built_in">local</span>/jpeg \</span><br><span class="line">  --with-freetype-dir=/usr/<span class="built_in">local</span>/freetype \</span><br><span class="line">  --with-xpm-dir=/usr \</span><br><span class="line">  --with-libzip=/usr/<span class="built_in">local</span>/libzip \</span><br><span class="line">  --without-pear --with-tidy=/usr/<span class="built_in">local</span>/tidy \</span><br><span class="line">  --<span class="built_in">enable</span>-xml --<span class="built_in">enable</span>-mbregex \</span><br><span class="line">  --<span class="built_in">enable</span>-mbstring --<span class="built_in">enable</span>-ftp \</span><br><span class="line">  --with-xmlrpc --<span class="built_in">enable</span>-session \</span><br><span class="line">  --<span class="built_in">enable</span>-ctype </span><br></pre></td></tr></table></figure></li></ul><p><strong>php.ini-production / php.ini-devlopmentphp.ini –&gt;php.ini</strong><br><strong>php-fpm.conf.default –&gt;php-fpm.conf</strong><br><strong>sapi/fpm/init.d.php-fpm –&gt;/etc/rc.d/init.d/php-fpm</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">php.ini-development</span><br><span class="line">php.ini-production</span><br><span class="line">$ mv /etc/php.ini /etc/php.ini.bak</span><br><span class="line">$ cp php.ini-production /usr/<span class="built_in">local</span>/php73/etc/php.ini</span><br><span class="line">$ ln -s /usr/<span class="built_in">local</span>/php73/etc/php.ini /etc/php.ini</span><br><span class="line">$ cp /usr/<span class="built_in">local</span>/php73/etc/php-fpm.conf.default /usr/<span class="built_in">local</span>/php73/etc/php-fpm.conf</span><br><span class="line">$ ln -s /usr/<span class="built_in">local</span>/php73/etc/php-fpm.conf /etc/php-fpm.conf</span><br><span class="line">$ vim /usr/<span class="built_in">local</span>/php73/etc/php-fpm.conf</span><br><span class="line">  17 pid = run/php-fpm.pid</span><br><span class="line"></span><br><span class="line">$ cp sapi/fpm/init.d.php-fpm /etc/rc.d/init.d/php-fpm</span><br><span class="line">$ chmod 755 /etc/rc.d/init.d/php-fpm</span><br><span class="line">$ chkconfig php-fpm on</span><br></pre></td></tr></table></figure><p><strong>注意: PHP7里的用户设置在如下文件中配置, 而不是在php-fpm.conf中</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/php73/etc/php-fpm.d</span><br><span class="line">$ cp ./www.conf.default www.conf</span><br><span class="line">$ vim ./www/conf</span><br><span class="line">  user=www</span><br><span class="line">  group=www</span><br></pre></td></tr></table></figure><p><strong>注意 httpd.conf 配置:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">162 LoadModule php7_module        modules/libphp7.so</span><br><span class="line">173 User www</span><br><span class="line">174 Group www</span><br><span class="line">206 ServerName localhost:80</span><br><span class="line"></span><br><span class="line">263 &lt;IfModule dir_module&gt;</span><br><span class="line">264     DirectoryIndex index.html index.php</span><br><span class="line">265 &lt;/IfModule&gt;</span><br><span class="line"></span><br><span class="line">400     AddType application/x-compress .Z</span><br><span class="line">401     AddType application/x-gzip .gz .tgz</span><br><span class="line">402     AddType application/x-httpd-php .php<span class="comment"># 增加的</span></span><br></pre></td></tr></table></figure><p>问题1: <strong>checking for libzip… not found configure: error: Please reinstall the libzip distribution</strong><br><strong>解决方法:<a href="https://www.hahack.com/codes/cmake/">参考</a></strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/<span class="built_in">local</span>/libzip/lib/libzip/include/zipconf.h /usr/<span class="built_in">local</span>/include/zipconf.h</span><br></pre></td></tr></table></figure><p>问题2: <strong>error: ‘INT_MAX’ undeclared (first use in this function)</strong><br><strong><em>解决方法:</em></strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#define INT_MAX 4096# 声明宏定义  </span></span><br><span class="line"><span class="comment">#include &quot;/usr/include/limits.h&quot;</span></span><br></pre></td></tr></table></figure><p>问题3: <strong>configure: WARNING: unrecognized options: –with-mysql, –with-vpx-dir, –with-t1lib, –enable-gd-native-ttf, –with-mcrypt</strong><br><strong>解决方法:</strong></p><ul><li>对于PHP7, –with-mysql 不适用: 更改为<code>--with-pdo-mysql</code>;    </li><li>对于64位系统, 出现 –with-t1lib 执行: <ul><li><code>ln -s /usr/lib64/libltdl.so /usr/lib/libltdl.so</code></li><li><code>cp -frp /usr/lib64/libXpm.so* /usr/lib</code></li></ul></li><li>对于 –with-mcrypt: 从PHP7.2开始, Mcrypt no longer provided, <a href="https://webtatic.com/packages/php72/">参考</a>;     </li><li>对于 –enable-gd-native-ttf: 同–with-mcrypt;    </li><li>对于 –with-vpx-dir: <a href="https://www.php.net/manual/zh/image.installation.php">参考</a>, 要激活 GD 支持, 配置 PHP 时加上 –with-gd[=DIR], DIR 是 GD 的基本安装目录, 要使用推荐的绑定的 GD 库版;  </li></ul><h3 id="2-测试"><a href="#2-测试" class="headerlink" title="2. 测试:"></a>2. 测试:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/apache24/htdocs/wordpress</span><br><span class="line">$ cp ../wp-config-sample.php wp-config.php</span><br><span class="line">$ vim wp-config.php</span><br><span class="line">  22 /** WordPress数据库的名称 */</span><br><span class="line">  23 define( <span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span> );</span><br><span class="line">  24 </span><br><span class="line">  25 /** MySQL数据库用户名 */</span><br><span class="line">  26 define( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span> );</span><br><span class="line">  27 </span><br><span class="line">  28 /** MySQL数据库密码 */</span><br><span class="line">  29 define( <span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;password&#x27;</span> );</span><br></pre></td></tr></table></figure><p><strong>IP:80/wordpress</strong><br><strong>IP:80/wordpress/wp-login.php?loggedout=true</strong><br><strong><a href="https://cn.gravatar.com/">A Globally Recognized Avatar</a></strong>  </p>]]></content>
      
      
      <categories>
          
          <category> Devops, linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> Devops </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux服务配置02</title>
      <link href="/posts/b0672b6e.html"/>
      <url>/posts/b0672b6e.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-11-Linux服务配置02</p><a id="more"></a><h2 id="目录"><a href="#目录" class="headerlink" title="目录    "></a>目录    <a id="back"></a></h2><ul><li><a href="#vsftp" target="_self">FTP 服务</a></li><li><a href="#samba" target="_self">Samba 服务</a></li><li><a href="#nfs" target="_self">NFS 服务</a></li><li><a href="#autofs" target="_self">Autofs 挂载服务</a></li><li><a href="#bind" target="_self">Bind 域名解析服务</a></li><li><a href="#dhcp" target="_self">DHCP 服务</a></li><li><a href="#email" target="_self">邮件系统</a> </li></ul><h3 id="1-使用vsftpd服务传输文件"><a href="#1-使用vsftpd服务传输文件" class="headerlink" title="1. 使用vsftpd服务传输文件    "></a>1. 使用vsftpd服务传输文件    <a id="vsftp"></a></h3><ul><li><p>工作模式(服务端默认端口: 21命令端口, 20数据传输端口)</p><ul><li><p>主动模式(PORT): 客户端用本地随机端口<code>(N&gt;1024)</code>连接至服务端<code>21命令端口</code>, 客户端开始监听端口<code>N+1</code>, 并发送命令<code>PORT N+1</code>给服务端, 服务端以<code>数据端口20</code>连接到客户端指定的的数据端口<code>N+1</code> </p></li><li><p>被动模式(PASV): 客户端用本地随机端口<code>(N&gt;1024)</code>连接至服务端<code>21命令端口</code>, 客户端开始监听端口<code>N+1</code>, 并发送命令<code>PASV</code>给服务端, 服务端会开启任意端口<code>(P&gt;1024)</code>, 并发送<code>PORT P</code>给客户端, 客户端发起从本地端口<code>N+1</code>到服务端的端口P的连接用来传输数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/etc/vsftpd/vsftpd.conf</span><br><span class="line">  pasv_enable=YES</span><br><span class="line">  pasv_min_port=30000</span><br><span class="line">  pasv_max_port=35000</span><br></pre></td></tr></table></figure></li></ul></li><li><p>传输模式</p><ul><li>二进制(Binary): 不对数据进行处理，传输可执行文件、压缩文件、图片等</li><li>ASCII: 自适应目标系统的结束符</li></ul></li><li><p>验证方式</p><ul><li>匿名用户(ftp/anonymous)</li><li>本地用户 </li><li>系统用户</li><li>虚拟用户 </li></ul></li></ul><h3 id="2-服务端"><a href="#2-服务端" class="headerlink" title="2. 服务端"></a>2. 服务端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install vsftpd  </span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -F</span></span><br><span class="line">[root@xy ~]<span class="comment"># service iptables save   </span></span><br><span class="line">[root@xy ~]<span class="comment"># mv /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf_bak  # 备份</span></span><br><span class="line">[root@xy ~]<span class="comment"># grep -v &quot;#&quot; /etc/vsftpd/vsftpd.conf_bak &gt; /etc/vsftpd/vsftpd.conf  </span></span><br><span class="line">[root@xy ~]<span class="comment"># cat /etc/vsftpd/vsftpd.conf</span></span><br></pre></td></tr></table></figure><h4 id="2-1-常用参数"><a href="#2-1-常用参数" class="headerlink" title="2.1 常用参数:"></a>2.1 常用参数:</h4><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>listen=[YES/NO]</code></td><td>是否以独立运行方式监听</td></tr><tr><td>listen_address=IP</td><td>设置要监听的IP</td></tr><tr><td>listen_port=21</td><td>设置FTP服务的监听端口</td></tr><tr><td><code>download _enable=[YES/NO]</code></td><td>是否允许下载</td></tr><tr><td><code>userlist_enable=[YES/NO]</code></td><td>设置用户列表为允许/禁止操作</td></tr><tr><td><code>userlist_deny=[YES/NO]</code></td><td>—</td></tr><tr><td>max_client=0</td><td>最大客户连接数 0不限制</td></tr><tr><td>max_per_ip=0</td><td>同一IP最大连接数</td></tr><tr><td><code>anonymous_enable=[YES/NO]</code></td><td>是否允许匿名用户访问</td></tr><tr><td><code>anon_upload_enable=[YES/NO]</code></td><td>是否允许匿名用户上传文件</td></tr><tr><td>anon_umask=022</td><td>匿名用户上传文件的umask值</td></tr><tr><td>anon_root=/var/ftp</td><td>匿名用户FTP根目录  ✔</td></tr><tr><td><code>anon_mkdir_write_enable=[YES/NO]</code></td><td>是否允许匿名用户创建目录</td></tr><tr><td><code>anon_other_write_enable=[YES/NO]</code></td><td>是否允许匿名用户其他写入权限 重命名 删除等</td></tr><tr><td>anon_max_rate=0</td><td>匿名用户最大传输速率</td></tr><tr><td><code>local_enable=[YES/NO]</code></td><td>是否允许本地用户登陆FTP</td></tr><tr><td>local_umask=022</td><td>本地用户上传文件的umask值</td></tr><tr><td>local_root=/var/ftp</td><td>本地用户FTP根目录  ✔</td></tr><tr><td><code>chroot_local_user=[YES/NO]</code></td><td>是否将用户权限禁锢在FTP目录,以确保安全</td></tr><tr><td>local_max_rate=0</td><td>本地用户最大传输速率</td></tr></tbody></table><h4 id="2-2-匿名用户模式开发权限参数"><a href="#2-2-匿名用户模式开发权限参数" class="headerlink" title="2.2 匿名用户模式开发权限参数:"></a>2.2 匿名用户模式开发权限参数:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">anonymous_enable=YES   </span><br><span class="line">local_enable = YES</span><br><span class="line">write_enable = YES</span><br><span class="line">local_umask = 022</span><br><span class="line">anon_umask=022 </span><br><span class="line">anon_upload_enable=YES </span><br><span class="line">anon_mkdir_write_enable=YES            </span><br><span class="line">anon_other_write_enable=YES   </span><br><span class="line">anno_root=/var/ftp     <span class="comment"># 匿名用户默认的FTP根目录 /var/ftp/pub </span></span><br><span class="line">anno_other_write_enable = YES</span><br><span class="line">dirmessage_enable = YES</span><br><span class="line">xferlog_enable = YES</span><br><span class="line">connect_from_port_20 = YES</span><br><span class="line">xferlog_std_format = YES</span><br><span class="line">listen_ipv6 = YES</span><br><span class="line">pam_service_name = vsftpd</span><br><span class="line">userlist_enable = YES</span><br><span class="line">tcp_wrappers = YES</span><br><span class="line">anno_max_rate=0</span><br></pre></td></tr></table></figure><h4 id="2-3-客户端"><a href="#2-3-客户端" class="headerlink" title="2.3 客户端:"></a>2.3 客户端:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install ftp　　　# ftp是Linux以命令行的方式管理FTP传输服务的客户端工具  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ftp 192.168.37.10   </span></span><br><span class="line">  Connected to 192.168.37.10 (192.168.37.10).  </span><br><span class="line">  220 (vsFTPd 3.0.2)  </span><br><span class="line">  Name (192.168.37.10:root): anonymous  </span><br><span class="line">  331 Please specify the password.  </span><br><span class="line">  Password:  </span><br><span class="line">  230 Login successful.  </span><br><span class="line">  Remote system <span class="built_in">type</span> is UNIX.  </span><br><span class="line">  Using binary mode to transfer files.  </span><br><span class="line">  ftp&gt; <span class="built_in">cd</span> pub  </span><br><span class="line">  250 Directory successfully changed.  </span><br><span class="line">  ftp&gt; mkdir files  </span><br><span class="line">  550 Permission denied   <span class="comment"># 提示没有权限, 查看默认访问目录/var/ftp权限  </span></span><br><span class="line">  ftp&gt; <span class="built_in">exit</span>  </span><br><span class="line">  221 Goodbye.</span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># ls -ld /var/ftp/pub　    # ls -Zdl  </span></span><br><span class="line">  drwxr-xr-x. 2 root root 6 Mar  7  2014 /var/ftp/pub    </span><br><span class="line">[root@xy ~]<span class="comment"># chown -Rf ftp /var/ftp/pub　# 更改目录所属主身份为ftp</span></span><br><span class="line">[root@xy ~]<span class="comment"># ls -ld /var/ftp/pub  </span></span><br><span class="line">  drwxr-xr-x. 2 ftp root 6 Mar  7  2014 /var/ftp/pub</span><br><span class="line">[root@xy ~]<span class="comment"># ftp 192.168.37.10</span></span><br><span class="line">  ... </span><br><span class="line">  550 Create directory operation failed.   <span class="comment"># 提示创建目录失败, 原因所在SElinux</span></span><br><span class="line">[root@xy ~]<span class="comment"># getsebool -a | grep ftp  # getsebool -a</span></span><br><span class="line">  ftp_home_dir --&gt; off  </span><br><span class="line">  ftpd_anon_write --&gt; off  </span><br><span class="line">  ftpd_connect_all_unreserved --&gt; off  </span><br><span class="line">  ftpd_connect_db --&gt; off  </span><br><span class="line">  ftpd_full_access --&gt; off       <span class="comment"># ftp 全部权限未开启 off 改为 on</span></span><br><span class="line">[root@xy ~]<span class="comment"># setsebool -P ftpd_full_access=on　 # -P permanent       </span></span><br><span class="line">[root@xy ~]<span class="comment"># ftp 192.168.37.10  </span></span><br><span class="line">  Connected to 192.168.37.10 (192.168.37.10).  </span><br><span class="line">  220 (vsFTPd 3.0.2)  </span><br><span class="line">  Name (192.168.37.10:root): anonymous   <span class="comment"># 匿名模式默认名称: anonymous  </span></span><br><span class="line">  331 Please specify the password.  </span><br><span class="line">  Password:  </span><br><span class="line">  230 Login successful.  </span><br><span class="line">  Remote system <span class="built_in">type</span> is UNIX. </span><br><span class="line">  Using binary mode to transfer files.  </span><br><span class="line">  ftp&gt; <span class="built_in">cd</span> pub  </span><br><span class="line">  250 Directory successfully changed.  </span><br><span class="line">  ftp&gt; mkdir files  </span><br><span class="line">  257 <span class="string">&quot;/pub/files&quot;</span> created  </span><br><span class="line">  ftp&gt; rename files database  </span><br><span class="line">  350 Ready <span class="keyword">for</span> RNTO.  </span><br><span class="line">  250 Rename successful.  </span><br><span class="line">  ftp&gt; rmdir database  </span><br><span class="line">  250 Remove directory operation successful.  </span><br><span class="line">  ftp&gt; <span class="built_in">exit</span>  </span><br><span class="line">  221 Goodbye. </span><br></pre></td></tr></table></figure><h4 id="2-4-本地用户模式参数-cat-etc-vsftpd-vsftpd-conf"><a href="#2-4-本地用户模式参数-cat-etc-vsftpd-vsftpd-conf" class="headerlink" title="2.4 本地用户模式参数:cat /etc/vsftpd/vsftpd.conf"></a>2.4 本地用户模式参数:cat /etc/vsftpd/vsftpd.conf</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">anonymous_enable=NO <span class="comment"># </span></span><br><span class="line">local_enable=YES </span><br><span class="line">write_enable=YES </span><br><span class="line">local_umask = 022</span><br><span class="line">dirmessage_enable = YES</span><br><span class="line">xferlog_enable = YES</span><br><span class="line">connect_from_port_20 = YES</span><br><span class="line">xferlog_std_format = YES</span><br><span class="line">listen = NO</span><br><span class="line">listen_ipv6 = YES</span><br><span class="line">local_root=/var/ftp     <span class="comment"># 设置本地用户的FTP根目录</span></span><br><span class="line">chroot_local_user=YES   <span class="comment"># 是否将用户禁锢在主目录</span></span><br><span class="line">local_max_rate=0</span><br><span class="line">pam_service_name = vsftpd</span><br><span class="line">local_umask=022  </span><br><span class="line">userlist_enable=YES  </span><br><span class="line">userlist_deny=YES  </span><br><span class="line">tcp_wrappers = YES</span><br><span class="line">ftp_banner=Welcome to use FTP Service</span><br></pre></td></tr></table></figure><h4 id="2-4-1-客户端"><a href="#2-4-1-客户端" class="headerlink" title="2.4.1 客户端"></a>2.4.1 客户端</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># ftp 192.168.37.10 </span></span><br><span class="line">  Connected to 192.168.37.10 (192.168.37.10).  </span><br><span class="line">  220 (vsFTPd 3.0.2)  </span><br><span class="line">  Name (192.168.37.10:root): root  </span><br><span class="line">  530 Permission denied.  </span><br><span class="line">  Login failed.  </span><br><span class="line">  ftp&gt; <span class="built_in">exit</span>  </span><br><span class="line">  221 Goodbye. </span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># cat /etc/vsftpd/user_list  </span></span><br><span class="line">[root@xy ~]<span class="comment"># cat /etc/vsftpd/ftpusers 　# 名单中含有root,默认禁止root用户  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ftp 192.168.37.10    </span></span><br><span class="line">  Connected to 192.168.37.10 (192.168.37.10).  </span><br><span class="line">  220 (vsFTPd 3.0.2)    </span><br><span class="line">  Name (192.168.37.10:root): xy       <span class="comment"># 用不在 ftplist / user_list 的用户登录  </span></span><br><span class="line">  331 Please specify the password.  </span><br><span class="line">  Password:此处输入该用户密码  </span><br><span class="line">  230 Login successfull.  </span><br><span class="line">  Reomte system <span class="built_in">type</span> is UNIX.  </span><br><span class="line">  Using binary mode to transfer files.  </span><br><span class="line">  ftp&gt; mkdir files  </span><br><span class="line">  550 Create directory operation failed.      <span class="comment"># 依然无法访问</span></span><br><span class="line">[root@xy ~]<span class="comment"># getsebool -a |grep ftp     </span></span><br><span class="line">  ftpd_full_access --&gt; off</span><br><span class="line">[root@xy ~]<span class="comment"># setsebool -P ftpd_full_access=on  # 可以正常创建文件</span></span><br></pre></td></tr></table></figure><h4 id="2-6-虚拟用户模式"><a href="#2-6-虚拟用户模式" class="headerlink" title="2.6 虚拟用户模式"></a>2.6 虚拟用户模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install pam* libdb-utils libdb* --skip-broken -y  </span></span><br><span class="line">[root@xy ~]<span class="comment"># cd /etc/vsftpd/</span></span><br><span class="line">[root@xy vsftpd]<span class="comment"># vim vuser.list   # 建立虚拟用户的用户数据库文件 </span></span><br><span class="line">  zhangsan    <span class="comment"># 账户名</span></span><br><span class="line">  123456      <span class="comment"># 密码</span></span><br><span class="line">  lisi  </span><br><span class="line">  123456   </span><br><span class="line">[root@xy vsftpd]<span class="comment"># db_load -T -t hash -f vuser.list vuser.db    </span></span><br><span class="line">[root@xy vsftpd]<span class="comment"># file vuser.db  </span></span><br><span class="line">  vuser.db: Berkeley DB (Hash, version 9, native byte-order)  </span><br><span class="line">[root@xy vsftpd]<span class="comment"># chmod 600 vuser.db</span></span><br><span class="line">[root@xy vsftpd]<span class="comment"># rm -f vuser.list </span></span><br><span class="line">[root@xy ~]<span class="comment"># useradd -d /var/ftproot -s /sbin/nologin virtual   # 增加虚拟用户，提供家目录  </span></span><br><span class="line">[root@xy vsftpd]<span class="comment"># ls -ld /var/ftproot/</span></span><br><span class="line">  drwx------. 3 virtual virtual 74 Jul 12 08:55 /var/ftproot/  </span><br><span class="line">[root@xy vsftpd]<span class="comment"># chmod -Rf 755 /var/ftproot/ </span></span><br><span class="line">[root@xy vsftpd]<span class="comment"># ls -ld /var/ftproot/  </span></span><br><span class="line">  drwxr-xr-x. 3 virtual virtual 74 Jul 12 08:55 /var/ftproot/ </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 建立用于支持虚拟用户的PAM文件, vsftpd.vu PAM(可插拔认证模块)是一种验证机制,通过动态链接库和统一的API把系统提供的服务和认证方式分开,采用鉴别模块层、用接口层、应设计层三层设计方式   </span></span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># cp -a /etc/pam.d/vsftpd /etc/pam.d/vdftpd.pam  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/pam.d/vsftpd.pam   # 新建虚拟用户认证 PAM 文件 vsftp.pam       </span></span><br><span class="line">  auth      required      pam_userdb.so db=/etc/vsftpd/vuser    </span><br><span class="line">  account   required      pam_userdb.so db=/etc/vsftpd/vuser</span><br></pre></td></tr></table></figure><h5 id="2-5-1主配置文件-vsftpd-conf"><a href="#2-5-1主配置文件-vsftpd-conf" class="headerlink" title="2.5.1主配置文件 vsftpd.conf:"></a>2.5.1主配置文件 vsftpd.conf:</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/vsftpd/vsftpd.conf   </span></span><br><span class="line">  <span class="comment"># global config Vsftpd </span></span><br><span class="line">  anonymous_enable=YES </span><br><span class="line">  local_enable=YES  </span><br><span class="line">  write_enable = YES</span><br><span class="line">  local_umask = 022</span><br><span class="line">  dirmessage_enable = YES</span><br><span class="line">  xferlog_enable = YES</span><br><span class="line">  connect_from_port_20 = YES</span><br><span class="line">  listen = NO</span><br><span class="line">  listen_ipv6 = YES</span><br><span class="line">  userlist_enable = YES</span><br><span class="line">  tcp_wrappers = YES</span><br><span class="line">  allow_writeable_chroot=YES</span><br><span class="line"></span><br><span class="line">  <span class="comment"># config virtual user FTP</span></span><br><span class="line">  pam_service_name=vsftpd.pam <span class="comment"># 虚拟用户启用pam认证</span></span><br><span class="line">  guest_enable=YES            <span class="comment"># 启用虚拟用户</span></span><br><span class="line">  guest_username=virtual      <span class="comment"># 映射虚拟用户至系统用户virtual  </span></span><br><span class="line">  user_config_dir=/etc/vsftpd/vusers_dir <span class="comment"># 设置虚拟用户配置文件所在目录</span></span><br><span class="line">  virtual_use_local_privs = YES  <span class="comment"># 虚拟用户使用与本地用户相同权限</span></span><br></pre></td></tr></table></figure><h4 id="2-5-2配置不同用户有不同权限"><a href="#2-5-2配置不同用户有不同权限" class="headerlink" title="2.5.2配置不同用户有不同权限:"></a>2.5.2配置不同用户有不同权限:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mkdir /etc/vsftpd/vusers_dir/  </span></span><br><span class="line">[root@xy ~]<span class="comment"># cd /etc/vsftpd/vusers_dir </span></span><br><span class="line">[root@xy vusers_dir]<span class="comment"># touch lisi</span></span><br><span class="line">[root@xy vusers_dir]<span class="comment"># vim zhangsan </span></span><br><span class="line">  local_root = /var/ftproot/zhangsan</span><br><span class="line">  write_enable = YES</span><br><span class="line">  anon_world_readable_only = YES</span><br><span class="line">  anon_upload_enable=YES  </span><br><span class="line">  anon_mkdir_write_enable=YES  </span><br><span class="line">  anon_other_write_enable=YES  </span><br><span class="line">[root@xy ~]<span class="comment"># mkdir -p /var/ftproot/&#123;zhangsan,lisi&#125; </span></span><br><span class="line">[root@xy~]<span class="comment"># chown -R virtual:virtual /var/ftpuser </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/vsftpd/vsftpd.conf </span></span><br><span class="line">  user_config_dir=/etc/vsftpd/vusers_dir</span><br><span class="line">[root@xy ~]<span class="comment"># getsebool -a | grep ftp    </span></span><br><span class="line">  ftpd_full_access --&gt; off     </span><br><span class="line">[root@xy ~]<span class="comment"># setsebool -P ftpd_full_access=on  # 可以正常创建文件      </span></span><br><span class="line">[root@xy vusers_dir]<span class="comment"># systemctl restart vsftpd.service   </span></span><br><span class="line">[root@xy vusers_dir]<span class="comment"># systemctl enable vsftpd</span></span><br></pre></td></tr></table></figure><h3 id="3-简单文件传输协议-TFTP-Trivial-File-Transfer-Protocol-："><a href="#3-简单文件传输协议-TFTP-Trivial-File-Transfer-Protocol-：" class="headerlink" title="3. 简单文件传输协议(TFTP:Trivial File Transfer Protocol)："></a>3. 简单文件传输协议(TFTP:Trivial File Transfer Protocol)：</h3><h4 id="TFTP-基于UDP-69-协议在（客户端与服务器）之间进行简单文件传输的协议"><a href="#TFTP-基于UDP-69-协议在（客户端与服务器）之间进行简单文件传输的协议" class="headerlink" title="TFTP 基于UDP(69)协议在（客户端与服务器）之间进行简单文件传输的协议"></a>TFTP 基于UDP(69)协议在（客户端与服务器）之间进行简单文件传输的协议</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>?</td><td>帮助  ✔</td></tr><tr><td>put</td><td>上传文件   ✔</td></tr><tr><td>get</td><td>下载文件  ✔</td></tr><tr><td>verbose</td><td>显示详细处理信息</td></tr><tr><td>status</td><td>显示当前状态信息</td></tr><tr><td>binary</td><td>使用二进制进行传输</td></tr><tr><td>ascii</td><td>使用ASCII码传输</td></tr><tr><td>timeout</td><td>设置重传超时时间</td></tr><tr><td>quit</td><td>退出</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install tftp-server tftp   </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/xinetd.d/tftp 　    # 修改 disable = no </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart xinetd</span></span><br><span class="line">[root@xy ~]<span class="comment"># netstat -a | grep tftp       # 查询端口启用状态  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable xinetd  </span></span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --permanent --add-port=69/udp  </span></span><br><span class="line">  success</span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --reload   </span></span><br><span class="line">  success</span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># echo &quot;I love An~~&quot; &gt; /var/lib/tftpboot/readme.txt </span></span><br><span class="line">[root@xy ~]<span class="comment"># tftp 192.168.37.10 </span></span><br><span class="line">  tftp&gt; get readme.txt    </span><br><span class="line">  tftp&gt; quit</span><br><span class="line">[root@xy ~]<span class="comment"># ls    </span></span><br><span class="line">  anaconda-ks.cfg  Downloads             Pictures    ShellExample  </span><br><span class="line">  Desktop          initial-setup-ks.cfg  Public      Templates  </span><br><span class="line">  Documents        Music                 readme.txt  Videos  </span><br><span class="line">[root@xy ~]<span class="comment"># cat readme.txt</span></span><br></pre></td></tr></table></figure><h3 id="4-使用Samba或NFS实现文件”共享”"><a href="#4-使用Samba或NFS实现文件”共享”" class="headerlink" title="4. 使用Samba或NFS实现文件”共享”  "></a>4. 使用Samba或NFS实现文件”共享”  <a id="samba"></a></h3><blockquote><p>基于<em>SMB</em>(Server Messages Block)协议,开发出SMBServer服务程序,<em>实现Linux与Windows</em>之间的文件共享变得简单 ,TCP 139、445</p></blockquote><img src="/posts/b0672b6e/Samba.png" class title="[Samba logo]"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install samba   </span></span><br><span class="line">[root@xy ~]<span class="comment"># mv /etc/samba/smb.conf /etc/samba/smb.conf.bak  </span></span><br><span class="line">[root@xy ~]<span class="comment"># cat /etc/samba/smb.conf.bak |grep -v &quot;#&quot; |grep -v &quot;;&quot; |grep -v &quot;^$&quot; &gt; /etc/samba/smb.conf 　 # -v 反选(排除)， ^$ 空白行</span></span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># cat /etc/samba/smb.conf </span></span><br><span class="line">  1 [database]        <span class="comment"># 自定义共享名称database </span></span><br><span class="line">  2 comment = Do not arbitrarily modify the database   </span><br><span class="line">  4 path = /home/database                               </span><br><span class="line">  5 public = no </span><br><span class="line">  6 browseable=no     <span class="comment"># 定义是否可以在Win下看到共享文件夹                     </span></span><br><span class="line">  7 writable = yes    <span class="comment"># 设置是否可写</span></span><br><span class="line">  8 guest ok = yes    <span class="comment"># 定义匿名用户是否可以登录 </span></span><br></pre></td></tr></table></figure><img src="/posts/b0672b6e/Samba%E5%8F%82%E6%95%B0.jpg" class title="[Samba参数]"> <h4 id="4-3-pdbedit-命令管理SMB服务程序的账户信息数据库，配置Samba服务器"><a href="#4-3-pdbedit-命令管理SMB服务程序的账户信息数据库，配置Samba服务器" class="headerlink" title="4.3 pdbedit 命令管理SMB服务程序的账户信息数据库，配置Samba服务器:"></a>4.3 pdbedit 命令管理SMB服务程序的账户信息数据库，配置Samba服务器:</h4><blockquote><p>要建立 Samba用户必须先建立名为 admin的 Samba用户   </p></blockquote><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-a</td><td>建立Samba账户</td></tr><tr><td>-x</td><td>删除Samba账户</td></tr><tr><td>-L</td><td>列出Samba账户</td></tr><tr><td>-Lv</td><td>列出账户详尽信息</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># id xy  </span></span><br><span class="line">  uid=1000(xy) gid=1000(xy) groups=1000(xy)      </span><br><span class="line">[root@xy ~]<span class="comment"># pdbedit -a xy  ✔ </span></span><br><span class="line">  new password:  </span><br><span class="line">  retype new password:  </span><br><span class="line">  Unix username:        xy  </span><br><span class="line">  ...</span><br><span class="line">  Full Name:            xy  </span><br><span class="line">  Home Directory:       \\xy\xy  </span><br><span class="line">  HomeDir Drive:        </span><br><span class="line">  Logon Script:         </span><br><span class="line">  Profile Path:         \\xy\xy\profile  </span><br><span class="line">  Domain:               XY  </span><br><span class="line">  ...</span><br><span class="line">  Password must change: never</span><br><span class="line">  ...</span><br><span class="line">[root@xy ~]<span class="comment"># mkdir /home/database</span></span><br><span class="line">[root@xy ~]<span class="comment"># chown -Rf xy:xy /home/database/</span></span><br><span class="line">[root@xy ~]<span class="comment"># ls -ldZ /home/database/</span></span><br><span class="line">  drwxr-xr-x. 2 xy xy 6 Jul 12 11:10 /home/database/ </span><br><span class="line">[root@xy ~]<span class="comment"># semanage fcontext -a -t samba_share_t /home/database     </span></span><br><span class="line">[root@xy ~]<span class="comment"># restorecon -Rv /home/database/</span></span><br><span class="line">  restorecon reset /home/database context unconfined_u:object_r:home_root_t:s0-&gt;unconfined_u:object_r:samba_share_t:s0  </span><br><span class="line">[root@xy ~]<span class="comment"># getsebool -a | grep samba </span></span><br><span class="line">  samba_create_home_dirs --&gt; off  </span><br><span class="line">  samba_domain_controller --&gt; off  </span><br><span class="line">  samba_enable_home_dirs --&gt; off </span><br><span class="line">[root@xy ~]<span class="comment"># setsebool -P samba_enable_home_dirs on  # 在smb.conf，中设置path = /home/database  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart smb  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable smb  </span></span><br><span class="line">  ln -s <span class="string">&#x27;/usr/lib/systemd/system/smb.service&#x27;</span> <span class="string">&#x27;/etc/systemd/system/multi-user.target.wants/smb.service&#x27;</span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -F</span></span><br><span class="line">[root@xy ~]<span class="comment"># service iptables save </span></span><br><span class="line">  iptables: Saving firewall rules to /etc/sysconfig/iptables:[  OK  ]</span><br></pre></td></tr></table></figure><h4 id="4-4-Linux-访问文件共享服务-Samba客户端"><a href="#4-4-Linux-访问文件共享服务-Samba客户端" class="headerlink" title="4.4 Linux 访问文件共享服务(Samba客户端)"></a>4.4 Linux 访问文件共享服务(Samba客户端)</h4><ul><li>客户端安装 cifs-utils,配置认证文件  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install samba-client cifs-utils  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim auth.smb  </span></span><br><span class="line">  username=xy  </span><br><span class="line">  password=redhat  </span><br><span class="line">  domain=MYGROUP</span><br><span class="line">[root@xy ~]<span class="comment"># chmod 600 auth.smb  </span></span><br><span class="line"><span class="comment"># 在Linux客户端创建用于挂载Samba服务共享资源目录,写入/etc/fstab</span></span><br><span class="line">[root@xy ~]<span class="comment"># mkdir /database</span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/fstab   </span></span><br><span class="line">  //Samba服务器IP/共享目录 /客户端目录 cifs credentials=/root/auth.smb 0 0*   </span><br><span class="line">[root@xy ~]<span class="comment"># smbclient -U 用户名 -L //服务器IP    #查看服务器共享  </span></span><br><span class="line">[root@xy ~]<span class="comment"># smbclient -U 用户名 //服务器IP/共享名    #登录服务器共享</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="4-4-Window-登录方式"><a href="#4-4-Window-登录方式" class="headerlink" title="4.4 Window 登录方式"></a>4.4 Window 登录方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\服务器IP\共享名       net use * /del</span><br></pre></td></tr></table></figure><h4 id="4-5-Samba-Web界面管理"><a href="#4-5-Samba-Web界面管理" class="headerlink" title="4.5 Samba Web界面管理"></a>4.5 Samba Web界面管理</h4><h3 id="5-NFS基于TCP-IP协议，用于Linux系统之间上文件资源共享-C-S"><a href="#5-NFS基于TCP-IP协议，用于Linux系统之间上文件资源共享-C-S" class="headerlink" title="5. NFS基于TCP/IP协议，用于Linux系统之间上文件资源共享 C/S "></a>5. NFS基于TCP/IP协议，用于Linux系统之间上文件资源共享 C/S <a id="nfs"></a></h3><h4 id="5-1-服务端-192-168-37-10"><a href="#5-1-服务端-192-168-37-10" class="headerlink" title="5.1 服务端 192.168.37.10"></a>5.1 服务端 192.168.37.10</h4><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>ro</td><td>只读</td></tr><tr><td>rw</td><td>只写</td></tr><tr><td>root_squash</td><td>NFS客户端以root管理员访问,映射为NFS服务器的匿名用户</td></tr><tr><td>no_root_squash</td><td>NFS客户端以root管理员访问,映射为NFS服务器的root管理员</td></tr><tr><td>all_squash</td><td>无论NFS客户端以什么访问,均映射为NFS服务器的匿名用户</td></tr><tr><td>sync</td><td>同时将数据写入内存与硬盘中,保证不丢失数据</td></tr><tr><td>async</td><td>先将数据保存至内存,然后再写入硬盘,效率高,可能丢失数据</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install -y nfs-utils  </span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -F</span></span><br><span class="line">[root@xy ~]<span class="comment"># service iptables save </span></span><br><span class="line">[root@xy ~]<span class="comment"># mkdir /nfsfile</span></span><br><span class="line">[root@xy ~]<span class="comment"># chmod -Rf 777 /nfsfile  </span></span><br><span class="line">  iptables: Saving firewall rules to /etc/sysconfig/iptables:[  OK  ]   </span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/exports   # fs 配置文件  </span></span><br><span class="line">  /nfsfile 192.168.37.10/24.*(rw,sync,root_squash)</span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart rpcbind</span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable rpcbind</span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl start nfs-server  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable nfs-server </span></span><br><span class="line">  ln -s <span class="string">&#x27;/usr/lib/systemd/system/nfs-server.service&#x27;</span> <span class="string">&#x27;/etc/systemd/system/ nfs.target.wants/nfs-server.service&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="5-1-客户端配置"><a href="#5-1-客户端配置" class="headerlink" title="5.1 客户端配置"></a>5.1 客户端配置</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-e</td><td>显示NFS服务器的共享列表</td></tr><tr><td>-a</td><td>显示本机挂载文件资源的情况</td></tr><tr><td>-v</td><td>显示版本</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xy~]<span class="comment"># showmount -e 192.168.37.10 </span></span><br><span class="line">  Export list <span class="keyword">for</span> 192.168.37.10:</span><br><span class="line">  /nfsfile 192.168.37.10  </span><br><span class="line">[root@xy ~]<span class="comment"># mkdir /nfsfile# 客户端创建挂载地址 </span></span><br><span class="line">[root@xy ~]<span class="comment"># mount -t nfs 192.168.37.10:/nfsfile /nfsfile </span></span><br><span class="line">[root@xy ~]<span class="comment"># cat /nfsfile/readme   </span></span><br><span class="line">  192.168.10.10:/nfsfile /nfsfile nfs defaults 0 0</span><br></pre></td></tr></table></figure><h3 id="6-auto自动挂载服务"><a href="#6-auto自动挂载服务" class="headerlink" title="6. auto自动挂载服务  "></a>6. auto自动挂载服务  <a id="autofs"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install autofs  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/auto.master　　# autofs 的主配置文件  </span></span><br><span class="line">  /media /etc/iso.misc　            <span class="comment"># 挂载目录 子配置文件; 挂在目录是设备挂载位置的上一级目录 </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/iso.misc      # 子配置文件   </span></span><br><span class="line">  iso      -fstype=iso9660,ro,nosuid,nodev :/dev/cdrom   </span><br><span class="line">  挂载目录  挂载文件类型及权限                :设备名称</span><br></pre></td></tr></table></figure><h3 id="7-使用BIND提供域名解析服务-Berkeley-Internet-Name-Domain"><a href="#7-使用BIND提供域名解析服务-Berkeley-Internet-Name-Domain" class="headerlink" title="7. 使用BIND提供域名解析服务(Berkeley Internet Name Domain)  "></a>7. 使用BIND提供域名解析服务(Berkeley Internet Name Domain)  <a id="bind"></a></h3><ul><li><p>DNS(Domain Name System)：管理和解析(域名 与 IP)的对应关系，<strong>域名–&gt;IP(正向解析)**，</strong>IP–&gt;域名(反向解析)**</p></li><li><p>DNS服务器:主服-masster、从服-slave、缓存服三种,DNS域名解析服务采用分布式数据结构,执行查询请求: </p></li><li><p>递归查询(必须向用户返回结果) / 迭代查询(一台接一台,直到返回结果)  </p><ul><li>配置Bind(Berkely Internet Name Domain)服务:  </li><li><strong>主配置文件</strong>:<code>/etc/named.conf</code>–定义bind服务程序的运行  </li><li><strong>区域配置文件</strong>:<code>/etc/named.rfc1912.zones</code>–保存域名与IP所在的具体位置  </li><li><strong>数据配置文件目录</strong>:<code>/var/named/xxx.zone</code>–保存域名与IP真实对应关系数据 </li><li><strong>根节点服务器</strong>:<code>/var/named/named.ca</code></li></ul></li></ul><img src="/posts/b0672b6e/bind%E6%AD%A3%E5%90%91%E8%A7%A3%E6%9E%90%E5%9B%BE%E7%A4%BA.jpg" class title="[Bind正向解析参数]">      <img src="/posts/b0672b6e/bind%E5%8F%8D%E5%90%91%E8%A7%A3%E6%9E%90%E5%9B%BE%E7%A4%BA.jpg" class title="[Bind反向解析]">  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install bind-chroot </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/named.conf        # 主配置文件 配置 /etc/named.conf</span></span><br><span class="line">   ...</span><br><span class="line">   7 // See /usr/share/doc/<span class="built_in">bind</span>*/sample/ <span class="keyword">for</span> example named configuration files.</span><br><span class="line">   10 options &#123;</span><br><span class="line">   11 listen-on port 53 &#123; any; &#125;;     <span class="comment"># 重要</span></span><br><span class="line">   12 listen-on-v6 port 53 &#123; ::1; &#125;;</span><br><span class="line">   13 directory <span class="string">&quot;/var/named&quot;</span>;</span><br><span class="line">   14 dump-file <span class="string">&quot;/var/named/data/cache_dump.db&quot;</span>;</span><br><span class="line">   15 statistics-file <span class="string">&quot;/var/named/data/named_stats.txt&quot;</span>;</span><br><span class="line">   16 memstatistics-file <span class="string">&quot;/var/named/data/named_mem_stats.txt&quot;</span>;</span><br><span class="line">   17 allow-query &#123; any; &#125;;       <span class="comment"># 重要</span></span><br><span class="line">   29 recursion yes;</span><br><span class="line">   31 dnssec-enable yes;</span><br><span class="line">   32 dnssec-validation yes;</span><br><span class="line">   33 dnssec-lookaside auto;</span><br><span class="line">   35 /* Path to ISC DLV key */</span><br><span class="line">   36 bindkeys-file <span class="string">&quot;/etc/named.iscdlv.key&quot;</span>;</span><br><span class="line">   38 managed-keys-directory <span class="string">&quot;/var/named/dynamic&quot;</span>;</span><br><span class="line">   40 pid-file <span class="string">&quot;/run/named/named.pid&quot;</span>;</span><br><span class="line">   41 session-keyfile <span class="string">&quot;/run/named/session.key&quot;</span>;</span><br><span class="line">   42 &#125;;</span><br><span class="line">   44 logging &#123;</span><br><span class="line">   45 channel default_debug &#123;</span><br><span class="line">   46 file <span class="string">&quot;data/named.run&quot;</span>;</span><br><span class="line">   47 severity dynamic;</span><br><span class="line">   48 &#125;;</span><br><span class="line">   49 &#125;;</span><br><span class="line">   51 zone <span class="string">&quot;.&quot;</span> IN &#123;</span><br><span class="line">   52 <span class="built_in">type</span> hint;</span><br><span class="line">   53 file <span class="string">&quot;named.ca&quot;</span>;</span><br><span class="line">   54 &#125;;</span><br><span class="line">   56 include <span class="string">&quot;/etc/named.rfc1912.zones&quot;</span>; <span class="comment"># 区域配置文件 </span></span><br><span class="line">   57 include <span class="string">&quot;/etc/named.root.key&quot;</span>;      <span class="comment">#</span></span><br></pre></td></tr></table></figure><h4 id="7-1-正向解析-eg"><a href="#7-1-正向解析-eg" class="headerlink" title="7.1 正向解析 eg:"></a>7.1 正向解析 eg:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/named.rfc1912.zones    # 正向解析 区域配置文件配置</span></span><br><span class="line">  zone <span class="string">&quot;xy.com&quot;</span> IN &#123;    </span><br><span class="line">      <span class="built_in">type</span> master;  </span><br><span class="line">      file <span class="string">&quot;xy.com.zone&quot;</span>;  </span><br><span class="line">      allow-update &#123; none; &#125;;  </span><br><span class="line">  &#125;;                                         <span class="comment"># named-checkconf named-checkzone</span></span><br><span class="line">[root@xy named]<span class="comment"># ls -al named.localhost      # 正向解析 数据配置文件配置 /var/named.localhost  </span></span><br><span class="line">  -rw-r-----. 1 root named 152 Jun 21  2007 named.localhost</span><br><span class="line">[root@xy named]<span class="comment"># cp -a named.localhost xy.com.zone</span></span><br><span class="line">[root@xy named]<span class="comment"># vim xy.com.zone</span></span><br><span class="line">  <span class="variable">$TTL</span> 1D                                   <span class="comment">#生存周期为1天</span></span><br><span class="line">  @IN SOAxy.com.root.xy.com.(</span><br><span class="line">    <span class="comment"># @: 代表相应的域名，就是区域配置文件 --&gt;xy.com.zone</span></span><br><span class="line">    <span class="comment"># IN: Internet标准</span></span><br><span class="line">    <span class="comment"># SOA: Start Of Authority，授权主机 管理者信箱</span></span><br><span class="line">                          0;serial          <span class="comment"># 更新序列号</span></span><br><span class="line">                          1D;refresh        <span class="comment"># 更新时间</span></span><br><span class="line">                          1H;retry          <span class="comment"># 重试延时</span></span><br><span class="line">                          1W;expire          <span class="comment"># 失效时间</span></span><br><span class="line">                          3H;)minimum        <span class="comment"># 无效解析记录的缓存时间</span></span><br><span class="line">        NS          ns.xy.com.            <span class="comment"># 域名服务器记录</span></span><br><span class="line">  ns  IN A        192.168.37.10          <span class="comment"># 地址记录(ns.xy.com.)</span></span><br><span class="line">        IN MX 10    mail.xy.com.          <span class="comment"># 邮箱交换记录</span></span><br><span class="line">  mailIN A        192.168.37.10          <span class="comment"># 地址记录(mail.xy.com.)</span></span><br><span class="line">  www  IN A        192.168.37.10          <span class="comment"># 地址记录(www.xy.com.)</span></span><br><span class="line">  ftp  IN CNAME    www                   <span class="comment"># 地址记录(www.xy.com.)</span></span><br><span class="line">  bbs  IN A        192.168.37.20          <span class="comment"># 地址记录(bbs.xy.com.)</span></span><br><span class="line"></span><br><span class="line">测试：</span><br><span class="line">[root@xy ~]<span class="comment"># systemd restart named </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart network  # 虚拟机环境下一定要先把本机DNS配置为本机IP </span></span><br><span class="line">[root@xy ~]<span class="comment"># nslookup     # 测试</span></span><br><span class="line">  &gt; www.xy.com  </span><br><span class="line">  Server:   192.168.37.10  </span><br><span class="line">  Address:192.168.37.10<span class="comment">#53  </span></span><br><span class="line"></span><br><span class="line">  &gt; Name:www.xy.com  </span><br><span class="line">  Address:  192.168.37.10  </span><br><span class="line"></span><br><span class="line">  &gt; bbs.xy.com  </span><br><span class="line">  Server:   192.168.37.10  </span><br><span class="line">  Address:192.168.37.10<span class="comment">#53  </span></span><br><span class="line"></span><br><span class="line">  &gt; Name:bbs.xy.com  </span><br><span class="line">  Address:  192.168.37.20</span><br></pre></td></tr></table></figure><h4 id="7-2-反向解析-eg"><a href="#7-2-反向解析-eg" class="headerlink" title="7.2 反向解析 eg:"></a>7.2 反向解析 eg:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/named.rfc1912.zones    # 反向解析 区域配置文件配置</span></span><br><span class="line">  zone <span class="string">&quot;xy.com&quot;</span> IN &#123;    </span><br><span class="line">      <span class="built_in">type</span> master;  </span><br><span class="line">      file <span class="string">&quot;xy.com.zone&quot;</span>;  </span><br><span class="line">      allow-update &#123; none; &#125;;  </span><br><span class="line">  &#125;;</span><br><span class="line">  zone <span class="string">&quot;37.168.192.in-addr.arpa&quot;</span> IN &#123;    </span><br><span class="line">      <span class="built_in">type</span> master;  </span><br><span class="line">      file <span class="string">&quot;192.168.10.arpa&quot;</span>;  </span><br><span class="line">  &#125;;</span><br><span class="line">[root@xy named]<span class="comment"># ls -al named.loopback      # 反向解析 数据配置文件配置 </span></span><br><span class="line">  -rw-r-----. 1 root named 152 Jun 21  2007 named.loopback</span><br><span class="line">[root@xy named]<span class="comment"># cp -a named.loopback 192.168.37.arpa</span></span><br><span class="line">[root@xy named]<span class="comment"># vim 192.168.37.arpa</span></span><br><span class="line">  <span class="variable">$TTL</span> 1D                                  <span class="comment">#生存周期为1天</span></span><br><span class="line">  @IN SOAxy.com.root.xy.com.(</span><br><span class="line">    <span class="comment"># @: 代表相应的域名，就是区域配置文件 --&gt;192.168.37.arpa</span></span><br><span class="line">    <span class="comment"># IN: Internet标准</span></span><br><span class="line">    <span class="comment"># SOA: Start Of Authority，授权主机 管理者信箱</span></span><br><span class="line">                          0;serial          <span class="comment"># 更新序列号</span></span><br><span class="line">                          1D;refresh        <span class="comment"># 更新时间</span></span><br><span class="line">                          1H;retry          <span class="comment"># 重试延时</span></span><br><span class="line">                          1W;expire          <span class="comment"># 失效时间</span></span><br><span class="line">                          3H;)minimum        <span class="comment"># 无效解析记录的缓存时间</span></span><br><span class="line">        NS          ns.xy.com.            <span class="comment"># 域名服务器记录</span></span><br><span class="line">  ns  A            192.168.37.10          <span class="comment"># 地址记录(ns.xy.com.)</span></span><br><span class="line">  10  PTR          ns.xy.com              <span class="comment"># PTR 指针记录，仅用于反向解析   </span></span><br><span class="line">  10  PTR          mail.xy.com         </span><br><span class="line">  10  PTR          www.xy.com                 </span><br><span class="line">  20  PTR          bbs.xy.com</span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">[root@xy ~]<span class="comment"># systemd restart named </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart network</span></span><br><span class="line">[root@xy ~]<span class="comment"># nslookup     </span></span><br><span class="line">  &gt; 192.168.37.10 </span><br><span class="line">  Server:   127.0.0.1  </span><br><span class="line">  Address:127.0.0.1<span class="comment">#53  </span></span><br><span class="line">  10.37.168.192.in-addr.arpa name = ns.xy.com.</span><br><span class="line">  10.37.168.192.in-addr.arpa name = www.xy.com.</span><br><span class="line">  10.37.168.192.in-addr.arpa name = mail.xy.com.</span><br><span class="line">  &gt; 192.168.37.10</span><br><span class="line">  Server:   127.0.0.1  </span><br><span class="line">  Address:127.0.0.1<span class="comment">#53  </span></span><br><span class="line">  20.37.168.192.in-addr.arpa name = bbs.xy.com.   </span><br></pre></td></tr></table></figure><h3 id="8-部署主从服务器"><a href="#8-部署主从服务器" class="headerlink" title="8. 部署主从服务器"></a>8. 部署主从服务器</h3><h4 id="8-1-无加密的传输"><a href="#8-1-无加密的传输" class="headerlink" title="8.1 无加密的传输"></a>8.1 无加密的传输</h4><h5 id="8-1-1-主服务器的配置IP：192-168-37-10"><a href="#8-1-1-主服务器的配置IP：192-168-37-10" class="headerlink" title="8.1.1 主服务器的配置IP：192.168.37.10"></a>8.1.1 主服务器的配置IP：192.168.37.10</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/named.rfc1912.zones    </span></span><br><span class="line">   zone <span class="string">&quot;xy.com&quot;</span> IN &#123;</span><br><span class="line">      <span class="built_in">type</span> master;</span><br><span class="line">      file <span class="string">&quot;xy.com.zone&quot;</span>;</span><br><span class="line">      allow-update &#123; 192.168.37.20; &#125;;</span><br><span class="line">   &#125;;</span><br><span class="line">   zone <span class="string">&quot;37.168.192.in-addr.arpa&quot;</span> IN &#123;</span><br><span class="line">      <span class="built_in">type</span> master;</span><br><span class="line">      file <span class="string">&quot;192.168.37.arpa&quot;</span>;</span><br><span class="line">      allow-update &#123; 192.168.37.20; &#125;;</span><br><span class="line">   &#125;;     </span><br><span class="line">[root@xy ~]<span class="comment"># systemd restart named</span></span><br></pre></td></tr></table></figure><h5 id="8-1-2-从服务器的配置IP：192-168-37-20"><a href="#8-1-2-从服务器的配置IP：192-168-37-20" class="headerlink" title="8.1.2 从服务器的配置IP：192.168.37.20"></a>8.1.2 从服务器的配置IP：192.168.37.20</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/named.rfc1912.zones</span></span><br><span class="line">   zone <span class="string">&quot;xy.com&quot;</span> IN &#123;</span><br><span class="line">      <span class="built_in">type</span> slave;</span><br><span class="line">      masters &#123; <span class="string">&quot;192.168.37.10&quot;</span> &#125;;</span><br><span class="line">      file <span class="string">&quot;slaves/xy.com.zone&quot;</span>;</span><br><span class="line">   &#125;;</span><br><span class="line">   zone <span class="string">&quot;37.168.192.in-addr.arpa&quot;</span> IN &#123;</span><br><span class="line">      <span class="built_in">type</span> slave;</span><br><span class="line">      masters &#123; <span class="string">&quot;192.168.37.10&quot;</span> &#125;;</span><br><span class="line">      file <span class="string">&quot;slaves/192.168.37.arpa&quot;</span>;</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">[root@xy ~]<span class="comment"># systemd restart named # 从服务器的DNS服务程序一般就已经自动从主服务器同步了数据     </span></span><br><span class="line">[root@xy ~]<span class="comment"># cd /var/named/slaves  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ls</span></span><br><span class="line">  192.168.37.arpa xy.com.zone</span><br><span class="line">[root@xy ~]<span class="comment"># nslookup    </span></span><br><span class="line">  &gt; www.xy.com  </span><br><span class="line">  Server: 192.168.37.20</span><br><span class="line">  Address: 192.168.37.20<span class="comment">#53  </span></span><br><span class="line">  Name: www.xy.com</span><br><span class="line">  Address: 192.168.37.10  </span><br><span class="line"></span><br><span class="line">  &gt; 192.168.37.10  </span><br><span class="line">  Server: 192.168.37.20  </span><br><span class="line">  Address: 192.168.37.20<span class="comment">#53  </span></span><br><span class="line">  10.37.168.192.in-addr.arpa name = www.xy.com.</span><br><span class="line">  10.37.168.192.in-addr.arpa name = ns.xy.com.  </span><br><span class="line">  10.37.168.192.in-addr.arpa name = mail.xy.com.</span><br></pre></td></tr></table></figure><h4 id="8-2-有加密的安全传输"><a href="#8-2-有加密的安全传输" class="headerlink" title="8.2 有加密的安全传输"></a>8.2 有加密的安全传输</h4><h5 id="8-2-1-主服务器下生成密钥"><a href="#8-2-1-主服务器下生成密钥" class="headerlink" title="8.2.1 主服务器下生成密钥"></a>8.2.1 主服务器下生成密钥</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># dnssec-keygen -a HMAC-MD5 -b 128 -n HOST master-slave   # -a 指定算法    </span></span><br><span class="line">  Kmaster-slave.+157+39112  </span><br><span class="line">[root@xy ~]<span class="comment"># ls -al Kmaster-slave.+157+39112.</span></span><br><span class="line">  -rw-------. 1 root root  56 Jul 13 13:10 Kmaster-slave.+157+39112.key</span><br><span class="line">  -rw-------. 1 root root 165 Jul 13 13:10 Kmaster-slave.+157+39112.private </span><br><span class="line">[root@xy ~]<span class="comment"># cat Kmaster-slave.+157+39112.private  </span></span><br><span class="line">   Private-key-format: v1.3  </span><br><span class="line">   Algorithm: 157 (HMAC_MD5)  </span><br><span class="line">   Key: pOuRN4eeVTzrZs/aaVpbkQ==      <span class="comment"># key  </span></span><br><span class="line">   ... </span><br><span class="line">   Activate: 20180713051051   </span><br><span class="line">[root@xy ~]<span class="comment"># cd /var/named/chroot/etc/    # 主服务器创建密钥验证文件  </span></span><br><span class="line">[root@xy etc]<span class="comment"># vim transfer.key</span></span><br><span class="line">   key <span class="string">&quot;master-slave&quot;</span> &#123;  </span><br><span class="line">     algorithm hmac-md5;  </span><br><span class="line">     secret <span class="string">&quot;pOuRN4eeVTzrZs/aaVpbkQ==&quot;</span>;  </span><br><span class="line">   &#125;;</span><br><span class="line">[root@xy etc]<span class="comment"># chown root:named transfer.key </span></span><br><span class="line">[root@xy etc]<span class="comment"># chmod 640 transfer.key</span></span><br><span class="line">[root@xy etc]<span class="comment"># ln transfer.key /etc/transfer.key  </span></span><br><span class="line">[root@xy etc]<span class="comment"># vim /etc/named.conf       # 开启加载Bind服务的密钥验证功能  </span></span><br><span class="line">   include <span class="string">&quot;/etc/transfer.key&quot;</span>   <span class="comment"># 9 行  </span></span><br><span class="line">   allow-transfer &#123; key master-slave; &#125;;  </span><br><span class="line">[root@xy ~]<span class="comment"># systemd restart named     </span></span><br><span class="line">[root@xy ~]<span class="comment"># rm -rf /var/named/slaves     # 清空从服务器数据配置文件  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemd restart named</span></span><br></pre></td></tr></table></figure><h5 id="8-2-2-配置从服务器"><a href="#8-2-2-配置从服务器" class="headerlink" title="8.2.2. 配置从服务器"></a>8.2.2. 配置从服务器</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># cd /var/named/chroot/etc/ </span></span><br><span class="line">[root@xy etc]<span class="comment"># vim transfer.key   </span></span><br><span class="line">   key <span class="string">&quot;master-slave&quot;</span> &#123;  </span><br><span class="line">     algorithm hmac-md5;  </span><br><span class="line">     secret <span class="string">&quot;pOuRN4eeVTzrZs/aaVpbkQ==&quot;</span>;  </span><br><span class="line">   &#125;;   </span><br><span class="line">[root@xy etc]<span class="comment"># chown root:named transfer.key </span></span><br><span class="line">[root@xy etc]<span class="comment"># chmod 640 transfer.key</span></span><br><span class="line">[root@xy etc]<span class="comment"># ln transfer.key /etc/transfer.key </span></span><br><span class="line">[root@xy etc]<span class="comment"># vim /etc/named.conf # 开启加载从服务器的密钥验证功能，填写主服务器IP和密钥名称</span></span><br><span class="line">   include <span class="string">&quot;/etc/transfer.key&quot;</span>   <span class="comment"># 9 行  </span></span><br><span class="line">   server 192.168.37.10          <span class="comment"># 43行  </span></span><br><span class="line">   &#123;  </span><br><span class="line">     key &#123; master-slave; &#125;;      <span class="comment"># 45行</span></span><br><span class="line">   &#125;</span><br><span class="line">[root@xy ~]<span class="comment"># systemd restart named </span></span><br><span class="line">[root@xy ~]<span class="comment"># ls /var/named/slaves</span></span><br><span class="line">[root@xy ~]<span class="comment"># systemd restart named      </span></span><br><span class="line">  192.168.37.arpa xy.com.zone</span><br></pre></td></tr></table></figure><h3 id="9-使用DHCP动态管理主机地址-67"><a href="#9-使用DHCP动态管理主机地址-67" class="headerlink" title="9. 使用DHCP动态管理主机地址(67)  "></a>9. 使用DHCP动态管理主机地址(67)  <a id="dhcp"></a></h3><ul><li>DHCP(Dynamic Host Configuration Protocol):基于<strong>UDP协议</strong>仅仅在局域网内部使用提高IP利用率,提高配置效率,降低管理维护成本  </li><li>作用域:完整的IP段,DHCP协议根据作用域分配IP  </li><li>超级作用域:    管理处于一个物理网络中多个逻辑子网段  </li><li>排除范围: 把作用域的某些IP排除  </li><li>地址池: 剩余的IP  </li><li>租约: DHCP 客户端能够使用IP的时间  </li><li>预约: 保证网络中特定设备总是获取到相同IP  </li></ul><h4 id="9-1-dhcpd-dhcpd-conf-服务程序配置最常见参数"><a href="#9-1-dhcpd-dhcpd-conf-服务程序配置最常见参数" class="headerlink" title="9.1 dhcpd(dhcpd.conf)服务程序配置最常见参数:"></a>9.1 dhcpd(dhcpd.conf)服务程序配置最常见参数:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install dhcp</span></span><br><span class="line">[root@xy ~]<span class="comment"># /etc/dhcp/dhcpd.conf      </span></span><br><span class="line">[root@xy ~]<span class="comment"># cp -a /usr/share/doc/dhcp-4.*.*/dhcpd.conf.sample /etc/dhcp/dhcpd.conf    </span></span><br><span class="line">  ddns-update-style none;  </span><br><span class="line">  ignore client-updates;  </span><br><span class="line">  subnet 192.168.10.1 netmask 255.255.255.0 &#123;  <span class="comment"># 声明要分配的网段和子网掩码</span></span><br><span class="line">  range 192.168.10.50 192.168.10.150;        <span class="comment"># 声明可用 IP 地址池  </span></span><br><span class="line">      option subnet-mask 255.255.255.0;  </span><br><span class="line">      option domain-name-servers 192.168.10.1; <span class="comment"># 设置 DNS 服务器地址</span></span><br><span class="line">      option domain-name <span class="string">&quot;xy.com&quot;</span>;             <span class="comment"># 设置 DNS 域</span></span><br><span class="line">      option routers 192.168.10.1;             <span class="comment"># 默认网关地址 </span></span><br><span class="line">      option broadcast-address 192.168.10.255; <span class="comment"># 广播地址(可不写)  </span></span><br><span class="line">      default-lease-time 21600;                <span class="comment"># 默认租约  </span></span><br><span class="line">      max-lease-time 43200;                    <span class="comment"># 最大租约</span></span><br><span class="line">  &#125;</span><br><span class="line">[root@xy ~]<span class="comment"># systemctl start dhcpd</span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable dhcpd</span></span><br></pre></td></tr></table></figure><h4 id="9-3-分配固定IP：IP与MAC地址绑定"><a href="#9-3-分配固定IP：IP与MAC地址绑定" class="headerlink" title="9.3 分配固定IP：IP与MAC地址绑定"></a>9.3 分配固定IP：IP与MAC地址绑定</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">host xy &#123;  </span><br><span class="line">hardware ethernet 00:0c:29:11:26:05;  </span><br><span class="line">fixed-address 192.168.37.55;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-使用Postfix-与-Dovecot部署邮件系统"><a href="#10-使用Postfix-与-Dovecot部署邮件系统" class="headerlink" title="10. 使用Postfix 与 Dovecot部署邮件系统  "></a>10. 使用Postfix 与 Dovecot部署邮件系统  <a id="email"></a></h3><img src="/posts/b0672b6e/Email.jpg" class title="[Email]"><ul><li>电子邮件协议:<ul><li>SMTP简单邮件传输协议（Simple Mail Transfer Protocol，）：用于<strong>发送和中转发出的电子邮件</strong>，占用服务器的<strong>25/TCP端口</strong>;</li><li>POP3邮局协议版本3（Post Office Protocol 3）：用于将<strong>电子邮件存储到本地主机</strong>，占用服务器的<strong>110/TCP</strong>端口;</li><li>IMAP Internet消息访问协议版本4（Internet Message Access Protocol 4）：用于在<strong>本地主机上访问邮件</strong>，占用服务器的<strong>143/TCP</strong>端口;</li><li>MUA-&gt;SMTP-&gt;MTA-&gt;SMTP-&gt;MTA-&gt;POP3/IMAP4-&gt;MUA</li></ul></li></ul><h4 id="10-1-配置DNS服务程序bind-chroot"><a href="#10-1-配置DNS服务程序bind-chroot" class="headerlink" title="10.1 配置DNS服务程序bind-chroot"></a>10.1 配置DNS服务程序bind-chroot</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -F  </span></span><br><span class="line">[root@xy ~]<span class="comment"># service iptables save  </span></span><br><span class="line">  iptables: Saving firewall rules to /etc/sysconfig/iptables:[  OK  ]  </span><br><span class="line">[root@xy ~]<span class="comment"># systemctl disable iptables  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl disable firewalld.service   </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/hostname                # 服务器主机名与发信域名保持一致</span></span><br><span class="line">  mail.xy.com</span><br><span class="line">[root@mail named]<span class="comment"># vim /etc/named.conf        # 主配置文件</span></span><br><span class="line">  listen-on port 53 &#123; any; &#125;;          </span><br><span class="line">  allow-query     &#123; any; &#125;;</span><br><span class="line">[root@mail named]<span class="comment"># vim /etc/named.rfc1912.zones      # 区域配置文件</span></span><br><span class="line">  zone <span class="string">&quot;xy.com&quot;</span> IN &#123;  </span><br><span class="line">      <span class="built_in">type</span> master;  </span><br><span class="line">      file <span class="string">&quot;xy.com.zone&quot;</span>;  </span><br><span class="line">      allow-update &#123; none; &#125;;  </span><br><span class="line">  &#125;;</span><br><span class="line">[root@mail named]<span class="comment"># vim xy.com.zone    # 域名数据配置文件</span></span><br><span class="line">  <span class="variable">$TTL</span> 1D</span><br><span class="line">  @       IN SOA  xy.com. root.xy.com. (  </span><br><span class="line">                                      0       ; serial  </span><br><span class="line">                                      1D      ; refresh  </span><br><span class="line">                                      1H      ; retry  </span><br><span class="line">                                      1W      ; expire  </span><br><span class="line">                                      3H )    ; minimum  </span><br><span class="line">          NS              ns.xy.com.  </span><br><span class="line">  ns      IN A            192.168.37.10  </span><br><span class="line">  @       IN MX 10        mail.xy.com.  </span><br><span class="line">  mail    IN A            192.168.37.10</span><br></pre></td></tr></table></figure><h4 id="10-2-配置基于SMTP协议的Postfix服务程序"><a href="#10-2-配置基于SMTP协议的Postfix服务程序" class="headerlink" title="10.2 配置基于SMTP协议的Postfix服务程序"></a>10.2 配置基于SMTP协议的Postfix服务程序</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install postfix   </span></span><br><span class="line">[root@mail ~]<span class="comment"># vim /etc/postfix/main.cf</span></span><br><span class="line">  myhostname = mail.xy.com      <span class="comment"># 76  邮局系统主机名</span></span><br><span class="line">  mydomain = xy.com              <span class="comment"># 83  邮局系统域名</span></span><br><span class="line">  myorigin = <span class="variable">$mydomain</span>           <span class="comment"># 99 从本机发出邮件的域名名称</span></span><br><span class="line">  inet_interfaces = all            <span class="comment"># 116 监听网卡接口</span></span><br><span class="line">  mydestination = <span class="variable">$myhostname</span> , <span class="variable">$mydomain</span>    <span class="comment"># 164  可接收邮件的主机名或域名列表</span></span><br><span class="line">  (relay_domains = <span class="variable">$mydestination</span>)    <span class="comment"># 设置可转发哪些网域的邮件</span></span><br><span class="line">[root@mail named]<span class="comment"># useradd boss     # 创建邮件系统登陆用户,Postfix能调用本地系统账户 </span></span><br><span class="line">[root@mail named]<span class="comment"># echo &quot;xy&quot; | passwd --stdin boss</span></span><br><span class="line">  Changing password <span class="keyword">for</span> user boss.</span><br><span class="line">  passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@mail ~]<span class="comment"># systemctl restart postfix</span></span><br><span class="line">[root@mail ~]<span class="comment"># systemctl enable postfix</span></span><br></pre></td></tr></table></figure><h4 id="10-3-配置基于POP3与IMAP4协议的Dovecot服务程序"><a href="#10-3-配置基于POP3与IMAP4协议的Dovecot服务程序" class="headerlink" title="10.3 配置基于POP3与IMAP4协议的Dovecot服务程序"></a>10.3 配置基于POP3与IMAP4协议的Dovecot服务程序</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install dovecot     </span></span><br><span class="line">[root@mail ~]<span class="comment"># vim /etc/dovecot/dovecot.conf  </span></span><br><span class="line">  protocols = imap pop3 lmtp              <span class="comment"># 24  </span></span><br><span class="line">  disable_plaintext_auth = no             <span class="comment"># 25  </span></span><br><span class="line">  login_trusted_networks = 192.168.37.0/24     <span class="comment"># 48  </span></span><br><span class="line">[root@mail ~]<span class="comment"># vim /etc/dovecot/conf.d/10-mail.conf  </span></span><br><span class="line">  mail_location = mbox:~/mail:INBOX=/var/mail/%u  </span><br><span class="line">[root@mail ~]<span class="comment"># su - boss  </span></span><br><span class="line">[boss@mail ~]$ mkdir -p mail/.imap/INBOX</span><br><span class="line">[boss@mail ~]$ <span class="built_in">exit</span></span><br><span class="line">[root@mail ~]<span class="comment"># systemctl restart dovecot </span></span><br><span class="line">[root@mail ~]<span class="comment"># systemctl enable dovecot  </span></span><br><span class="line">  ln -s <span class="string">&#x27;/usr/lib/systemd/system/dovecot.service&#x27;</span> <span class="string">&#x27;/etc/systemd/system/multi-user.target.wants/dovecot.service&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="10-4测试"><a href="#10-4测试" class="headerlink" title="10.4测试"></a>10.4测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">客户端: Windows Outlook2017  </span><br><span class="line">IP: 192.168.37.2/24  </span><br><span class="line">DNS: 192.168.37.10  </span><br><span class="line">username: boss</span><br><span class="line">password: 123465  </span><br></pre></td></tr></table></figure><p><a href="#back" target="_self">返回目录</a></p>]]></content>
      
      
      <categories>
          
          <category> Devops, linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> Devops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux服务配置03</title>
      <link href="/posts/c7601bf8.html"/>
      <url>/posts/c7601bf8.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-11-Linux服务配置03</p><a id="more"></a><h2 id="目录"><a href="#目录" class="headerlink" title="目录    "></a>目录    <a id="back"></a></h2><ul><li><a href="#squid" target="_self">Squid 服务</a></li><li><a href="#iscis" target="_self">iSCIS 服务</a></li><li><a href="#mariadb" target="_self">MariaDB 服务</a> </li><li><a href="#pxe" target="_self">无人值守安装服务</a></li><li><a href="#cobbler" target="_self">Cobbler</a></li><li><a href="#neihe" target="_self">内核</a></li></ul><h3 id="1-使用Squid部署代理缓存服务"><a href="#1-使用Squid部署代理缓存服务" class="headerlink" title="1. 使用Squid部署代理缓存服务    "></a>1. 使用Squid部署代理缓存服务    <a id="squid"></a></h3><h4 id="1-1-Squid-替代用户向网站服务器请求页面数据并进行缓存-当用户再次再请求相同数据-则可以将存储服务器本地数据交付给用户-减少了用户等待时间-支持HTTP、FTP、SSL等多种协议"><a href="#1-1-Squid-替代用户向网站服务器请求页面数据并进行缓存-当用户再次再请求相同数据-则可以将存储服务器本地数据交付给用户-减少了用户等待时间-支持HTTP、FTP、SSL等多种协议" class="headerlink" title="1.1 Squid 替代用户向网站服务器请求页面数据并进行缓存,当用户再次再请求相同数据,则可以将存储服务器本地数据交付给用户,减少了用户等待时间,支持HTTP、FTP、SSL等多种协议"></a>1.1 Squid 替代用户向网站服务器请求页面数据并进行缓存,当用户再次再请求相同数据,则可以将存储服务器本地数据交付给用户,减少了用户等待时间,支持HTTP、FTP、SSL等多种协议</h4><h4 id="1-2-Squid分为正向代理-与-反向代理"><a href="#1-2-Squid分为正向代理-与-反向代理" class="headerlink" title="1.2 Squid分为正向代理 与 反向代理:"></a>1.2 Squid分为<code>正向代理</code> 与 <code>反向代理</code>:</h4><ul><li>正向代理: <code>用户(局域网)-&gt; Squid-&gt; 网站资源</code>,以及基于ACL功能对用户访问网站进行限制,具体分为标准代理模式 与 透明代理模式。<ul><li><code>标准模式</code>: 把网站数据缓存到本地服务器上,提高数据资源再次访问时的效率,但用户必须填写代理服务器IP与端口;  </li><li><code>透明模式</code>: 不需要填写代理IP和端口号，是由<code>DHCP服务器</code>将网络配置信息分配给客户端主机; </li></ul></li></ul><img src="/posts/c7601bf8/Squid%E9%80%8F%E6%98%8E%E6%A8%A1%E5%BC%8F.jpg" class title="[Squid透明模式]">     <img src="/posts/c7601bf8/Squid%E6%AD%A3%E5%90%91%E4%BB%A3%E7%90%86.jpg" class title="[Squid正向代理图示]"> <ul><li>反向代理:让多节点主机反向缓存网站数据 服务器机房(多节点主机-&gt;Squid服务器-&gt;Internet-&gt;公网用户)<img src="/posts/c7601bf8/Squid%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86.jpg" class title="[Squid反向代理图示]"></li></ul><h4 id="1-4-测试设备"><a href="#1-4-测试设备" class="headerlink" title="1.4 测试设备:"></a>1.4 测试设备:</h4><ul><li>Squid服务器(<strong>内网卡:仅主机模式192.168.37.10，外网卡:桥接模式DHCP</strong>)      </li><li>Windows客户端主机(<strong>网卡:仅主机模式192.168.37.20</strong>)</li></ul><h4 id="1-5-文件配置"><a href="#1-5-文件配置" class="headerlink" title="1.5 文件配置"></a>1.5 文件配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/squid/squid.conf  </span></span><br><span class="line">  http_port 312     <span class="comment"># 监听端口 ✔</span></span><br><span class="line">  cache_mem 64M   <span class="comment"># 内存缓冲区  </span></span><br><span class="line">  cache_dir ufs /var/spool/squid 2000 16 256   <span class="comment"># 硬盘缓冲区  </span></span><br><span class="line">  cache_effective_user squid    <span class="comment"># 设置缓存的有效用户</span></span><br><span class="line">  cache_effective_group squid        <span class="comment"># 设置缓存有效用户组  </span></span><br><span class="line">  dns_nameservers [IP]           <span class="comment"># 一般不设置,用服务器默认的DNS  </span></span><br><span class="line">  cache_access_log /var/<span class="built_in">log</span>/squid/access.log   <span class="comment"># 访问日志文件的保存路径  </span></span><br><span class="line">  cache_log /var/<span class="built_in">log</span>/squid/cache.log     <span class="comment"># 缓存日志文件的保存路径  </span></span><br><span class="line">  visible_hostname xy.com           <span class="comment"># 设置Squid服务器名称  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart squid  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable squid  </span></span><br><span class="line">  ln -s <span class="string">&#x27;/usr/lib/systemd/system/squid.service&#x27;</span> <span class="string">&#x27;/etc/systemd/system/multi-user.target.wants/squid.service&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="1-6-标准正向代理-IP-192-168-37-10-3128"><a href="#1-6-标准正向代理-IP-192-168-37-10-3128" class="headerlink" title="1.6 标准正向代理(IP: 192.168.37.10:3128)"></a>1.6 标准正向代理(IP: 192.168.37.10:3128)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># semanage port -l | grep squid_port_t           # /etc/squid/squid.conf    </span></span><br><span class="line">  squid_port_t        tcp      3128, 3401, 4827  </span><br><span class="line">  squid_port_t        udp      3401, 4827  </span><br><span class="line">[root@xy ~]<span class="comment"># semanage port -a -t squid_port_t -p tcp 10000  # http_port 10000  </span></span><br><span class="line">  squid_port_t       tcp      10000, 3128, 3401, 4827  </span><br><span class="line">  squid_port_t       udp      3401, 4827  </span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/squid/squid.conf    # Squid 提供的ACL功能</span></span><br><span class="line">  acl client src = 192.168.37.20          <span class="comment"># 仅允许192.168.37.20使用Squid提供的代理服务  </span></span><br><span class="line">  http_access allow client  </span><br><span class="line">  http_access deny all  </span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/squid/squid.conf    # 禁止所有客户端访问网址包含liunx关键字的网站  </span></span><br><span class="line">  acl deny_keyword url_regex -i linux</span><br><span class="line">  http_access deny deny_keyword</span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/squid/squid.conf    # 禁止所有客户端访问某个特定网站  </span></span><br><span class="line">  acl deny_url url_regex https://www.baidu.com</span><br><span class="line">  http_access deny deny_url</span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/squid/squid.conf    # 禁止员工在企业网内部下载带有某些后缀的文件  </span></span><br><span class="line">  acl badfile urlpath_regex -i \.rar$ \.avi$</span><br><span class="line">  http_access deny badfile</span><br></pre></td></tr></table></figure><h4 id="1-7-透明模式"><a href="#1-7-透明模式" class="headerlink" title="1.7 透明模式"></a>1.7 透明模式</h4><blockquote><p>没有配置DHCP服务的话,设置客户端地址192.168.10.20   </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -F</span></span><br></pre></td></tr></table></figure><blockquote><p>实现DNS地址解析服务53端口的数据转发功能(SNAT), -o 匹配外网网卡流出的流量  </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -t nat -A POSTROUTING -p udp --dport 53 -o eno33554968 -j MASQUERAD</span></span><br><span class="line">[root@xy ~]<span class="comment"># echo &quot;net.ipv4.ip_forwrad=1&quot; &gt;&gt; /etc/sysctl.conf # 开启路由转发功能     </span></span><br><span class="line">[root@xy ~]<span class="comment"># sysctl -p</span></span><br><span class="line">[root@xy ~]<span class="comment"># net.ipv4.ip_forward = 1  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/squid/squid.conf  </span></span><br><span class="line">  http_port 3128 transparent                  <span class="comment"># 59, 开启透明模式  </span></span><br><span class="line">  cache_dir ufs /var/spool/squid 100 16 256  <span class="comment"># 62</span></span><br><span class="line">[root@xy ~]<span class="comment"># squid -k parse                   # 检测主配置文件是否有错    </span></span><br><span class="line">[root@xy ~]<span class="comment"># squid -z                         # 对服务程序透明化进行初始化   </span></span><br></pre></td></tr></table></figure><blockquote><p>SNAT 设置对网站80端口请求转发至Squid服务器本地3128端口  </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -t nat -A PREROUTING -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 3128  </span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -t nat -A POSTROUTING -s 192.168.37.0/24 -o eno33554968 -j SNAT --to 桥接网卡IP      # -o 匹配外网网卡流出的流量交给 外网卡</span></span><br></pre></td></tr></table></figure><h4 id="1-8-反向代理模式"><a href="#1-8-反向代理模式" class="headerlink" title="1.8 反向代理模式"></a>1.8 反向代理模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/squid/squid.conf  # 反向代理配置  </span></span><br><span class="line">  http_port 桥接网卡 IP:80 vhost         <span class="comment"># 59 </span></span><br><span class="line">  cahe_peer 网站服务器 IP parent 80 0 originserver     <span class="comment"># 60 </span></span><br></pre></td></tr></table></figure><h3 id="2-使用iSCSI-Internet-Small-Computer-System-Interface"><a href="#2-使用iSCSI-Internet-Small-Computer-System-Interface" class="headerlink" title="2. 使用iSCSI(Internet Small Computer System Interface)    "></a>2. 使用iSCSI(Internet Small Computer System Interface)    <a id="iscis"></a></h3><ul><li>IDE(成熟稳定, 价格便宜并行传输接口)   </li><li>SATA(传输速度更快, 数据校验更完整串行传输接口)  </li><li>SCSI(计算机和硬盘, 光驱等设备间系统级接口通用标准; 系统资源占用率低, 转速快, 传输速度快)  </li><li>基于TCP/IP协议和SCSI接口协议的iSCSI是将SCSI接口与以太网技术结合的新型存储技术,可以来在网络中传输SCSI接口命令和数据;  </li><li>需要网卡传输, iSCSI-HBA网卡, 该网卡连接SCSI接口或者FC(光纤通道)总线和内存, 用于主机之间交换存储数据;</li></ul><h3 id="2-1-配置iSCSI服务端"><a href="#2-1-配置iSCSI服务端" class="headerlink" title="2.1 配置iSCSI服务端"></a>2.1 配置iSCSI服务端</h3><h4 id="2-1-2-创建RAID-5磁盘阵列"><a href="#2-1-2-创建RAID-5磁盘阵列" class="headerlink" title="2.1.2 创建RAID 5磁盘阵列:"></a>2.1.2 创建RAID 5磁盘阵列:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mdadm -Cv /dev/md0 -n 3 -l 5 -x 1 /dev/sdb /dev/sdc /dev/sdd /dev/sde    </span></span><br><span class="line">[root@xy ~]<span class="comment"># mdadm -D /dev/md0 # 查看设备详细信息</span></span><br></pre></td></tr></table></figure><h4 id="2-1-3-安装iSCSI服务端-192-168-37-1-："><a href="#2-1-3-安装iSCSI服务端-192-168-37-1-：" class="headerlink" title="2.1.3 安装iSCSI服务端(192.168.37.1)："></a>2.1.3 安装iSCSI服务端(192.168.37.1)：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum -y install targetd targetcli      </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart targetd</span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable targetd    </span></span><br><span class="line">  ln -s <span class="string">&#x27;/usr/lib/systemd/system/targetd.service&#x27;</span> <span class="string">&#x27;/etc/systemd/system/multi-user.target.wants/targetd.service&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># targetcli       # 交互式配置界面    </span></span><br><span class="line">Warning: Could not load preferences file /root/.targetcli/prefs.bin.  </span><br><span class="line">targetcli shell version 2.1.fb34  </span><br><span class="line">Copyright 2011-2013 by Datera, Inc and others.    </span><br><span class="line">For <span class="built_in">help</span> on commands, <span class="built_in">type</span> <span class="string">&#x27;help&#x27;</span>.    </span><br><span class="line"></span><br><span class="line">+++++++++++++++++++++++++++加入md0阵列到共享设备资源池++++++++++++++++++++++++++++</span><br><span class="line">/&gt; ls    </span><br><span class="line">o- / ..................................................................... [...]    </span><br><span class="line">o- backstores .......................................................... [...]    </span><br><span class="line">| o- block .............................................. [Storage Objects: 0]    </span><br><span class="line">| o- fileio ............................................. [Storage Objects: 0]    </span><br><span class="line">| o- pscsi .............................................. [Storage Objects: 0]    </span><br><span class="line">| o- ramdisk ............................................ [Storage Objects: 0]    </span><br><span class="line">o- iscsi ........................................................ [Targets: 0]    </span><br><span class="line">o- loopback ..................................................... [Targets: 0]    </span><br><span class="line">/&gt; <span class="built_in">cd</span> /backstores/block     <span class="comment"># 共享设备位置  </span></span><br><span class="line">/backstores/block&gt; create disk0 /dev/md0  </span><br><span class="line">Create block storage object disk0 using /dev/md0.    </span><br><span class="line">/backstores/block&gt; <span class="built_in">cd</span>   </span><br><span class="line">/&gt; ls  </span><br><span class="line">o- / ..................................................................... [...]  </span><br><span class="line">  o- backstores .......................................................... [...]  </span><br><span class="line">    o-disk0 ........................ [/dev/md0 (40.0GiB write-thru deactivated)]  <span class="comment"># </span></span><br><span class="line">  | o- block .............................................. [Storage Objects: 0]  </span><br><span class="line">  | o- fileio ............................................. [Storage Objects: 0]  </span><br><span class="line">  | o- pscsi .............................................. [Storage Objects: 0]  </span><br><span class="line">  | o- ramdisk ............................................ [Storage Objects: 0]  </span><br><span class="line">  o- iscsi ........................................................ [Targets: 0]  </span><br><span class="line">  o- loopback ..................................................... [Targets: 0]  </span><br><span class="line"></span><br><span class="line">+++++++++++++++++++++++创建iSCSI target名称及配置共享资源+++++++++++++++++++++++++</span><br><span class="line">/&gt; <span class="built_in">cd</span> iscsi <span class="comment"># 创建iSCSI target名称及配置共享资源 </span></span><br><span class="line">/iscsi&gt; create  <span class="comment"># </span></span><br><span class="line">Created target iqn.2003-01.org.linux-iscsi.xy.x8664:sn.ca5dd98d2e7d.  </span><br><span class="line">Created TPG 1.  </span><br><span class="line">/iscsi&gt; <span class="built_in">cd</span> iqn.2003-01.org.linux-iscsi.xy.x8664:sn.ca5dd98d2e7d/  </span><br><span class="line">/iscsi/iqn.20....ca5dd98d2e7d&gt; ls    </span><br><span class="line">o- iqn.2003-01.org.linux-iscsi.xy.x8664:sn.ca5dd98d2e7d .............. [TPGs: 1]  </span><br><span class="line">  o- tpg1 ............................................... [no-gen-acls, no-auth]  </span><br><span class="line">    o- acls .......................................................... [ACLs: 0]  </span><br><span class="line">    o- luns .......................................................... [LUNs: 0]  </span><br><span class="line">    o- portals .................................................... [Portals: 0]  </span><br><span class="line">/iscsi/iqn.20....ca5dd98d2e7d&gt; <span class="built_in">cd</span> tpg1/luns <span class="comment"># </span></span><br><span class="line">/iscsi/iqn.20...e7d/tpg1/luns&gt; create /backstores/block/disk0   <span class="comment">#  </span></span><br><span class="line">Create LUN 0.  </span><br><span class="line"></span><br><span class="line">++++++++++++++++++++++++++++++设置访问控制列表++++++++++++++++++++++++++++++++++  </span><br><span class="line">/iscsi/iqn.20...e7d/tpg1/luns&gt; <span class="built_in">cd</span>..   </span><br><span class="line">/iscsi/iqn.20...e7d/tpg1/luns&gt; <span class="built_in">cd</span> acls  <span class="comment"># 设置访问控制列表        </span></span><br><span class="line">/iscsi/iqn.20...d98d2e7d/tpg1&gt; create iqn.2003-01.org.linux-iscsi.xy.x8664:sn.ca5dd98d2e7d:client**    </span><br><span class="line">Create Node ACL <span class="keyword">for</span> iqn.2003-01.org.linux-iscsi.xy.x8664:sn.ca5dd98d2e7d:client  </span><br><span class="line">Create LUN 0. </span><br><span class="line"></span><br><span class="line">++++++++++++++++++++++++++++设置服务的监听IP及端口++++++++++++++++++++++++++++++++</span><br><span class="line">/iscsi/iqn.20...e7d/tpg1/luns&gt; <span class="built_in">cd</span> ..    </span><br><span class="line">/iscsi/iqn.20...d98d2e7d/tpg1&gt; <span class="built_in">cd</span> portals   </span><br><span class="line">/iscsi/iqn.20.../tpg1/portals&gt; create 192.168.37.10    </span><br><span class="line">Using default IP port 3260  </span><br><span class="line">Created network portal 192.168.37.10:3260. </span><br><span class="line"></span><br><span class="line">+++++++++++++++++++++++++++++检测配置信息++++++++++++++++++++++++++++++++++++++++ </span><br><span class="line">/iscsi/iqn.20.../tpg1/portals&gt; ls      <span class="comment"># 检测配置信息   </span></span><br><span class="line">o- / ..................................................................... [...]  </span><br><span class="line">  o- backstores .......................................................... [...]  </span><br><span class="line">  | o- block .............................................. [Storage Objects: 0]  </span><br><span class="line">  | | o-disk0 ...................... [/dev/md0 (40.0GiB write-thru deactivated)] <span class="comment">#  </span></span><br><span class="line">  | o- fileio ............................................. [Storage Objects: 0]  </span><br><span class="line">  | o- pscsi .............................................. [Storage Objects: 0]  </span><br><span class="line">  | o- ramdisk ............................................ [Storage Objects: 0]  </span><br><span class="line">  o- iscsi ........................................................ [Targets: 1]   </span><br><span class="line">  | o- iqn.2003-01.org.linux-iscsi.xy.x8664:sn.ca5dd98d2e7d .......... [TPGs: 1] <span class="comment">#    </span></span><br><span class="line">  |   o- tpg1 ........................................... [no-gen-acls, no-auth]  </span><br><span class="line">  |     o- acls ...................................................... [ACLs: 0]  </span><br><span class="line">  |     | o- iqn.2003-01.org.linux-iscsi.xy.x8664:sn.ca5dd98d2e7d:client......  <span class="comment">#  </span></span><br><span class="line">  [Mapped LUNs: 1]  </span><br><span class="line">  |     | o- mapped_lun0 ............................... [lun0 block/disk0 (rw)] <span class="comment"># </span></span><br><span class="line">    o- luns .................................. [LUNs: 1]  </span><br><span class="line">        | o -lun0 ............................ [block/disk0 (dev/md0)]  </span><br><span class="line">  |     o- portals ........................... [Portals: 1]  </span><br><span class="line">  |       o- 192.168.37.10:3260 .............. [OK]  <span class="comment">#   </span></span><br><span class="line">  o- loopback ................................ [Targets: 0]  </span><br><span class="line">/&gt; <span class="built_in">exit</span>  </span><br><span class="line">Global pref auto_save_on_exit=<span class="literal">true</span>  </span><br><span class="line">Last 10 configs saved <span class="keyword">in</span> /etc/target/backup.  </span><br><span class="line">Configuration saved to /etc/target/saveconfig.json  </span><br><span class="line">++++++++++++++++++++++++++++++++++++++结束++++++++++++++++++++++++++++++++++++++</span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --permanent --add-port=3260/tcp </span></span><br><span class="line">  success</span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --reload    </span></span><br><span class="line">  success</span><br></pre></td></tr></table></figure><h4 id="2-1-4-配置Linux-iSCSI客户端"><a href="#2-1-4-配置Linux-iSCSI客户端" class="headerlink" title="2.1.4 配置Linux iSCSI客户端"></a>2.1.4 配置Linux iSCSI客户端</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install iscsi-initiator-utils</span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/iscsi/initiatorname.iscsi </span></span><br><span class="line">  Initiatorname=iqn.2003-01.org.linux-iscsi.xy.x8664:sn.ca5dd98d2e7d:clien </span><br><span class="line">[root@xy ~]<span class="comment"># iscsi -m discovery -t st -p 192.168.37.10    # 发现  </span></span><br><span class="line">  192.168.37.10:3260,1 iqn.2003-01.org.linux-iscsi.xy.x8664:sn.ca5dd98d2e7d  </span><br><span class="line">[root@xy ~]<span class="comment"># iscsiadm -m mode -T iqn.2003-01.org.linux-iscsi.xy.x8664:sn.ca5dd98d2e7d -p 192.168.37.10 --login                # 登陆   </span></span><br><span class="line">[root@xy ~]<span class="comment"># file /dev/sdb  </span></span><br><span class="line">  /dev/sdb: block specile</span><br><span class="line">[root@xy ~]<span class="comment"># mkfs.xfs /dev/sdb           # 格式化  </span></span><br><span class="line">[root@xy ~]<span class="comment"># mkdir /iscsi  </span></span><br><span class="line">[root@xy ~]<span class="comment"># mount /dev/sdb /iscsi       # 挂载  </span></span><br><span class="line">[root@xy ~]<span class="comment"># blkid | grep /dev/sdb</span></span><br><span class="line">  /dev/sdb: UUID=<span class="string">&quot;b6b6d578-3ba5-450b-b967-d1a81a71d600&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line">[root@xy ~]<span class="comment"># /etc/fstab</span></span><br><span class="line">  UUID=<span class="string">&quot;b6b6d578-3ba5-450b-b967-d1a81a71d600   /iscsi   xfs   defaults,_netdev   0 0 </span></span><br><span class="line"><span class="string">[root@xy ~]# iscsiadm -u   # 卸载网络设备</span></span><br></pre></td></tr></table></figure><h4 id="2-1-5-配置Windows-iSCSI客户端"><a href="#2-1-5-配置Windows-iSCSI客户端" class="headerlink" title="2.1.5 配置Windows iSCSI客户端"></a>2.1.5 配置Windows iSCSI客户端</h4><ul><li>系统安全-&gt;管理工具-&gt;iSCSI发起程序-&gt;目标填写iSCSI服务端IP-&gt;快速连接-&gt;配置-&gt;更改-&gt;填写服务端ACL所定义的名称</li></ul><h3 id="3-使用MariaDB数据库管理系统"><a href="#3-使用MariaDB数据库管理系统" class="headerlink" title="3. 使用MariaDB数据库管理系统    "></a>3. 使用MariaDB数据库管理系统    <a id="mariadb"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum -y install mariadb mariadb-server   </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart mariadb</span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable mariadb    </span></span><br><span class="line">  ln -s <span class="string">&#x27;/usr/lib/systemd/system/mariadb.service&#x27;</span> <span class="string">&#x27;/etc/systemd/system/multi-user.target.wants/mariadb.service&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="3-1-数据库初始化"><a href="#3-1-数据库初始化" class="headerlink" title="3.1 数据库初始化"></a>3.1 数据库初始化</h4><table><thead><tr><th>命令</th><th>作用</th><th>eg.</th></tr></thead><tbody><tr><td>set</td><td>设置密码</td><td>set password=password(‘123456’);</td></tr><tr><td>show</td><td>展示数据库, 表, 权限</td><td>show databases;</td></tr><tr><td>—</td><td>—</td><td>show tables;</td></tr><tr><td>—</td><td>—</td><td>show grants for anyue@localhost;</td></tr><tr><td>use</td><td>指定使用数据库</td><td>use anyue;</td></tr><tr><td>grant</td><td>授予权限</td><td>grant 权限 on 库名.表名 to 用户名@主机名;</td></tr><tr><td>revoke</td><td>移除权限</td><td>revoke 权限 on 库名.表名 from 用户名@主机名;</td></tr><tr><td>create</td><td>创建数据库, 用户, 表单</td><td>create database anyue;</td></tr><tr><td>—</td><td>—</td><td>create user anyue@localhost identified by ‘123456’;</td></tr><tr><td>—</td><td>—</td><td>create table mybook (name char(15),price int,pages int);</td></tr><tr><td>insert</td><td>增(增加表单数据)</td><td>insert into mybook(name,price,pages) values(‘ES’,’60’,’10’);</td></tr><tr><td>update</td><td>改(改动表单数据)</td><td>update 表单 set attr=新值 where attr=初值;</td></tr><tr><td>—</td><td>—</td><td>update mybook set price=55;</td></tr><tr><td>delete</td><td>删(删除表单数据)</td><td>delete form 表单名 where atrr=值;</td></tr><tr><td>select</td><td>查(表单数据)</td><td>select user,host,password from user where=’anyue’;</td></tr><tr><td>—</td><td>—</td><td>select * from mybook where price&gt;75;</td></tr><tr><td>—</td><td>—</td><td>select name,price from mybook;</td></tr><tr><td>describe</td><td>描述表单(desc)</td><td>desc mybook;</td></tr><tr><td>drop</td><td>删数据库,表,用户</td><td>drop anyue;</td></tr><tr><td>alter</td><td>修改表描述</td><td>alter table 表单名</td></tr><tr><td>—</td><td>—</td><td>alter table mybook add(字段名1 字段类型1,…);</td></tr><tr><td>—</td><td>—</td><td>a lter table mybook modify 字段名1 字段类型1;</td></tr><tr><td>—</td><td>—</td><td>alter table mybook drop 字段名;</td></tr><tr><td>—</td><td>—</td><td>alter table mybook 原表名 rename to 新表名;</td></tr><tr><td>mysqldump</td><td>备份数据库</td><td>mysqldump -uroot -p anyue &gt;/root/anyue.dump</td></tr><tr><td>—</td><td>还原数据库</td><td><code>mysql -uroot -p anyue &lt;/root/anyue.dump</code></td></tr><tr><td>like</td><td>模糊查询</td><td>% 或者 _</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mysql: emp,dept,salgrate</span></span><br><span class="line">[root@xy ~]<span class="comment"># mysql_secure_installation  # mariaDB初始化    </span></span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --permanent --add-service=mysql </span></span><br><span class="line">  success  </span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">  success</span><br></pre></td></tr></table></figure><h4 id="3-2-基本操作"><a href="#3-2-基本操作" class="headerlink" title="3.2 基本操作"></a>3.2 基本操作</h4><p><a href="https://www.cnblogs.com/gaojian/p/3317456.html">mysql参考</a>  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mysql -uroot -p         # 进入数据库  </span></span><br><span class="line">MariaDB [(none)]&gt; show databases;    # show databses 显示数据库</span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  | Database           |  </span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  | information_schema |  </span><br><span class="line">  | mysql              |  </span><br><span class="line">  | performance_schema |  </span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  3 rows in <span class="keyword">set</span> (<span class="number">0.03</span> sec)  </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">set</span> <span class="keyword">password</span> = <span class="keyword">password</span>(<span class="string">&#x27;123456&#x27;</span>);  <span class="comment"># 修改密码  </span></span><br><span class="line">MariaDB [(none)]&gt; alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;  </span><br><span class="line">MariaDB [(none)]&gt; alter database testdb character set utf8;</span><br><span class="line">MariaDB [(none)]&gt; create user anyue@localhost indentified by &#x27;123456&#x27;;  </span><br><span class="line">  Query OK, 0 rows affected (0.00 sec)  </span><br><span class="line">  <span class="comment"># 创建用户  create user 用户名@主机名 identified by &#x27;PASSWORD&#x27;</span></span><br><span class="line">MariaDB [(none)]&gt; use mysql;</span><br><span class="line">MariaDB [mysql]&gt; select user,host,password from user where user=&#x27;anyue&#x27;;  # 选择用户  </span><br><span class="line">  +<span class="comment">-------+-----------+-------------------------------------------+</span></span><br><span class="line">  | user  | host      | password                                  |</span><br><span class="line">  +<span class="comment">-------+-----------+-------------------------------------------+</span></span><br><span class="line">  | anyue | localhost | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |</span><br><span class="line">  +<span class="comment">-------+-----------+-------------------------------------------+</span></span><br><span class="line">  1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec) </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; quit;  </span><br><span class="line">Bye  </span><br></pre></td></tr></table></figure><h3 id="3-3-授予权限操作"><a href="#3-3-授予权限操作" class="headerlink" title="3.3 授予权限操作"></a>3.3 授予权限操作</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mysql -uanyue -p       # mysql -uusername -p  </span></span><br><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  | Database           |  </span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  | information_schema |  </span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  1 row in <span class="keyword">set</span> (<span class="number">0.01</span> sec)  </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; quit;  </span><br><span class="line">  Bye  </span><br><span class="line"></span><br><span class="line">+ <span class="keyword">GRANT</span> 权限 <span class="keyword">ON</span> 数据库.表单名称 <span class="keyword">TO</span> 账户名@主机名  <span class="comment"># 授予权限 GRANT </span></span><br><span class="line">+ <span class="keyword">GRANT</span> 权限 <span class="keyword">ON</span> 数据库.* <span class="keyword">TO</span> 账户名@主机名  </span><br><span class="line">+ <span class="keyword">GRANT</span> 权限 <span class="keyword">ON</span> *.* <span class="keyword">TO</span> 账户名@主机名  </span><br><span class="line">+ <span class="keyword">GRANT</span> 权限<span class="number">1</span>,权限<span class="number">2</span> <span class="keyword">ON</span> 数据库.* <span class="keyword">TO</span> 账户名@主机名  </span><br><span class="line">+ <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> 账户名@主机名  </span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># mysql -u root -p </span></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">grant</span> <span class="keyword">select</span>,<span class="keyword">update</span>,<span class="keyword">delete</span>,<span class="keyword">insert</span> <span class="keyword">on</span> mysql.user <span class="keyword">to</span> anyue@localhost;  <span class="comment"># 赋予anyue权限    </span></span><br><span class="line">MariaDB [(none)]&gt; show grants for anyue@localhost;   # 查看anyue权限  </span><br><span class="line">  +<span class="comment">-------------------------------------------------------------------------------------------------------------+  </span></span><br><span class="line">  | Grants for anyue@localhost                                                                                   |  </span><br><span class="line">  +<span class="comment">-------------------------------------------------------------------------------------------------------------+  </span></span><br><span class="line">  | <span class="keyword">GRANT</span> <span class="keyword">USAGE</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">&#x27;anyue&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="keyword">PASSWORD</span> <span class="string">&#x27;*6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9&#x27;</span> |  </span><br><span class="line">  | <span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span>, <span class="keyword">UPDATE</span>, <span class="keyword">DELETE</span> <span class="keyword">ON</span> mysql.user <span class="keyword">TO</span> <span class="string">&#x27;anyue&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>                                |  </span><br><span class="line">  +<span class="comment">-------------------------------------------------------------------------------------------------------------+  </span></span><br><span class="line">  <span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)  </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; quit  </span><br><span class="line">  Bye  </span><br></pre></td></tr></table></figure><h3 id="3-4-移除权限操作"><a href="#3-4-移除权限操作" class="headerlink" title="3.4 移除权限操作"></a>3.4 移除权限操作</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mysql -uanyue -p </span></span><br><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  | Database           |   </span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  | information_schema |  </span><br><span class="line">  | mysql              |  </span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  2 rows in <span class="keyword">set</span> (<span class="number">0.01</span> sec)  </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">use</span> mysql;  </span><br><span class="line">MariaDB [mysql]&gt; show tables;</span><br><span class="line">  +<span class="comment">-----------------+  </span></span><br><span class="line">  | Tables_in_mysql |  </span><br><span class="line">  +<span class="comment">-----------------+  </span></span><br><span class="line">  | user            |  </span><br><span class="line">  +<span class="comment">-----------------+  </span></span><br><span class="line">  1 row in <span class="keyword">set</span> (<span class="number">0.01</span> sec)  </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; quit;  </span><br><span class="line">  Bye </span><br><span class="line"><span class="comment">---</span></span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># mysql -uroot -p  </span></span><br><span class="line">MariaDB [(none)]&gt; use mysql;</span><br><span class="line">MariaDB [mysql]&gt; revoke select,update,delete,insert on mysql.user from anyue@localhost;  # 移除对anyue的授权 REVOKE</span><br><span class="line">MariaDB [(none)]&gt; revoke select,update,insert,delete on mysql.user from xy@localhost;</span><br><span class="line">MariaDB [(none)]&gt; revoke all privileges on *.* from anyue@localhost;</span><br><span class="line">  Query OK, 0 rows affected (0.01 sec)  </span><br><span class="line">MariaDB [mysql]&gt; show grants for anyue@localhost;</span><br><span class="line">  +<span class="comment">-------------------------------------------------------------------------------------------------------------+  </span></span><br><span class="line">  | Grants for anyue@localhost                                                                                   |  </span><br><span class="line">  +<span class="comment">-------------------------------------------------------------------------------------------------------------+  </span></span><br><span class="line">  | <span class="keyword">GRANT</span> <span class="keyword">USAGE</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">&#x27;anyue&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="keyword">PASSWORD</span> <span class="string">&#x27;*6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9&#x27;</span> |  </span><br><span class="line">  +<span class="comment">-------------------------------------------------------------------------------------------------------------+  </span></span><br><span class="line">  <span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)  </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; quit;   </span><br><span class="line">  Bye</span><br></pre></td></tr></table></figure><h3 id="3-5-数据库-表单操作"><a href="#3-5-数据库-表单操作" class="headerlink" title="3.5 数据库 表单操作"></a>3.5 数据库 表单操作</h3><ul><li>CREATE DATABASE 数据库名称             </li><li>DESCRIBE 表单名称(DESC)  </li><li>UPDATE 表单名称 SET attribute=新值 WHERE attribute=旧值  </li><li>USE 数据库名称             </li><li>SHOW databases       # 显示当前已有的数据库</li><li>SHOW tables          # 显示当前数据库中的表单</li><li>SELECT * FROM 表单名称                        </li><li>DELETE FROM 表单名 WHERE attribute=值</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mysql -u root -p </span></span><br><span class="line">MariaDB [(none)]&gt; create database mybook;  # 创建数据库xy  </span><br><span class="line">  Query OK, 1 row affected (0.01 sec)  </span><br><span class="line">MariaDB [(none)]&gt; show databases; </span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  | Database           |  </span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  | information_schema |  </span><br><span class="line">  | mysql              |  </span><br><span class="line">  | performance_schema |  </span><br><span class="line">  | mybook             |  </span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  4 rows in <span class="keyword">set</span> (<span class="number">0.02</span> sec)  </span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">use</span> mybook;  </span><br><span class="line">  Database changed  </span><br><span class="line">MariaDB [xy]&gt; create table mybook (name char(15),price int,pages int); # 创建表单  </span><br><span class="line">  Query OK, 0 rows affected (0.03 sec)  </span><br><span class="line">MariaDB [xy]&gt; desc mybook; # desc mybook;  </span><br><span class="line">  +<span class="comment">-------+----------+------+-----+---------+-------+  </span></span><br><span class="line">  | Field | Type     | Null | Key | Default | Extra |  </span><br><span class="line">  +<span class="comment">-------+----------+------+-----+---------+-------+  </span></span><br><span class="line">  | name  | char(15) | YES  |     | NULL    |       |  </span><br><span class="line">  | price | int(11)  | YES  |     | NULL    |       |  </span><br><span class="line">  | pages | int(11)  | YES  |     | NULL    |       |  </span><br><span class="line">  +<span class="comment">-------+----------+------+-----+---------+-------+  </span></span><br><span class="line">  3 rows in <span class="keyword">set</span> (<span class="number">0.02</span> sec)  </span><br><span class="line">MariaDB [xy]&gt; <span class="keyword">insert</span> <span class="keyword">into</span> mybook(<span class="keyword">name</span>,price,pages) <span class="keyword">values</span>(<span class="string">&#x27;MC&#x27;</span>,<span class="string">&#x27;60&#x27;</span>,<span class="string">&#x27;518&#x27;</span>);  <span class="comment"># 往表单mybook插入数据</span></span><br><span class="line">MariaDB [xy]&gt; select * from mybook;     # 选择表单内容 </span><br><span class="line">  +<span class="comment">------------+-------+-------+  </span></span><br><span class="line">  | name       | price | pages |  </span><br><span class="line">  +<span class="comment">------------+-------+-------+  </span></span><br><span class="line">  | MC         |    60 |   518 |  </span><br><span class="line">  +<span class="comment">------------+-------+-------+  </span></span><br><span class="line">  1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)  </span><br><span class="line"></span><br><span class="line">MariaDB [xy]&gt; <span class="keyword">update</span> mybook <span class="keyword">set</span> price=<span class="number">55</span>;  <span class="comment"># 更新表单内容  </span></span><br><span class="line">  Query OK, 1 rows affected (0.01 sec)  </span><br><span class="line">  Rows matched: 1  Changed: 1  Warnings: 0  </span><br><span class="line">MariaDB [xy]&gt; select name,price from mybook; </span><br><span class="line">  +<span class="comment">------------+-------+  </span></span><br><span class="line">  | name       | price |   </span><br><span class="line">  +<span class="comment">------------+-------+  </span></span><br><span class="line">  | MC         |    50 |    </span><br><span class="line">  +<span class="comment">------------+-------+  </span></span><br><span class="line">  1 rows in <span class="keyword">set</span> (<span class="number">0.01</span> sec)  </span><br><span class="line">MariaDB [xy]&gt; <span class="keyword">delete</span> <span class="keyword">from</span> mybook;  </span><br><span class="line">  Query OK, 1 rows affected (0.01 sec)  </span><br><span class="line">MariaDB [xy]&gt; selete * from mybook;  </span><br><span class="line">  Empty <span class="keyword">set</span> (<span class="number">0.01</span> sec)  </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; quit;  </span><br><span class="line">  Bye</span><br></pre></td></tr></table></figure><h3 id="3-6-数据库where命令"><a href="#3-6-数据库where命令" class="headerlink" title="3.6 数据库where命令"></a>3.6 数据库where命令</h3><p>=、&lt;&gt;或!=、&gt;、&lt;、&gt;= 大于或等于、&lt;= 小于或等于<br>BETWEEN  在某个范围内、    LINK 搜索一个例子、IN     在列中搜索多个值  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mysql -u root -p</span></span><br><span class="line">MariaDB [xy]&gt; select * from mybook; </span><br><span class="line">  +<span class="comment">-------------+-------+-------+  </span></span><br><span class="line">  | name        | price | pages |  </span><br><span class="line">  +<span class="comment">-------------+-------+-------+  </span></span><br><span class="line">  | ShenQu      |    58 |   800 |  </span><br><span class="line">  | MC          |    60 |   518 |   </span><br><span class="line">  | Baoliandeng |    70 |    65 |  </span><br><span class="line">  | xy          |    45 |    83 |  </span><br><span class="line">  | xy1         |    45 |    83 |  </span><br><span class="line">  +<span class="comment">-------------+-------+-------+  </span></span><br><span class="line">  5 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)  </span><br><span class="line">MariaDB [xy]&gt; <span class="keyword">select</span> * <span class="keyword">from</span> mybook <span class="keyword">where</span> price&gt;<span class="number">45</span>; </span><br><span class="line">  +<span class="comment">-------------+-------+-------+  </span></span><br><span class="line">  | name        | price | pages |  </span><br><span class="line">  +<span class="comment">-------------+-------+-------+  </span></span><br><span class="line">  | ShenQu      |    58 |   800 |  </span><br><span class="line">  | MC     |    60 |   518 |  </span><br><span class="line">  | Baoliandeng |    70 |    65 |  </span><br><span class="line">  +<span class="comment">-------------+-------+-------+  </span></span><br><span class="line">  3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)  </span><br><span class="line">MariaDB [xy]&gt; <span class="keyword">select</span> * <span class="keyword">from</span> mybook <span class="keyword">where</span> price!=<span class="number">60</span>; </span><br><span class="line">  +<span class="comment">-------------+-------+-------+  </span></span><br><span class="line">  | name        | price | pages |  </span><br><span class="line">  +<span class="comment">-------------+-------+-------+  </span></span><br><span class="line">  | ShenQu      |    58 |   800 |  </span><br><span class="line">  | Baoliandeng |    70 |    65 |  </span><br><span class="line">  | xy          |    45 |    83 |  </span><br><span class="line">  | xy1         |    45 |    83 |  </span><br><span class="line">  +<span class="comment">-------------+-------+-------+  </span></span><br><span class="line">  4 rows in <span class="keyword">set</span> (<span class="number">0.01</span> sec)  </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; quit;  </span><br><span class="line">  Bye</span><br></pre></td></tr></table></figure><h3 id="3-7-数据库的备份mysqldump"><a href="#3-7-数据库的备份mysqldump" class="headerlink" title="3.7 数据库的备份mysqldump"></a>3.7 数据库的备份mysqldump</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mysqldump -uroot -p xy &gt; /root/xy.dump  </span></span><br><span class="line">  Enter password:   </span><br><span class="line">[root@xy ~]<span class="comment"># mysql -uroot -p</span></span><br><span class="line">MariaDB [(none)]&gt; drop database xy;  </span><br><span class="line">  Query OK, 1 row affected (0.03 sec)  </span><br><span class="line">MariaDB [(none)]&gt; show databases; </span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  | Database           |  </span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  | information_schema |  </span><br><span class="line">  | mysql              |</span><br><span class="line">  | performance_schema |  </span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  3 rows in <span class="keyword">set</span> (<span class="number">0.01</span> sec)  </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">create</span> <span class="keyword">database</span> xy;  </span><br><span class="line">  Query OK, 1 row affected (0.01 sec)  </span><br><span class="line">MariaDB [(none)]&gt; quit;</span><br><span class="line">  Bye  </span><br></pre></td></tr></table></figure><h3 id="3-8-数据库还原"><a href="#3-8-数据库还原" class="headerlink" title="3.8 数据库还原"></a>3.8 数据库还原</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mysql -uroot -p xy &lt; /root/xy.dump   # xy 是 数据库，不是密码</span></span><br><span class="line">  Enter password:   </span><br><span class="line">[root@xy ~]<span class="comment"># mysql -uroot -p  </span></span><br><span class="line">MariaDB [(none)]&gt; use xy;</span><br><span class="line">MariaDB [xy]&gt; show tables;</span><br><span class="line">  +<span class="comment">--------------+  </span></span><br><span class="line">  | Tables_in_xy |  </span><br><span class="line">  +<span class="comment">--------------+  </span></span><br><span class="line">  | mybook       |    </span><br><span class="line">  +<span class="comment">--------------+  </span></span><br><span class="line">  1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)  </span><br><span class="line">MariaDB [xy]&gt; <span class="keyword">desc</span> mybook;  </span><br><span class="line">  +<span class="comment">-------+----------+------+-----+---------+-------+  </span></span><br><span class="line">  | Field | Type     | Null | Key | Default | Extra |  </span><br><span class="line">  +<span class="comment">-------+----------+------+-----+---------+-------+  </span></span><br><span class="line">  | name  | char(15) | YES  |     | NULL    |       | </span><br><span class="line">  | price | int(11)  | YES  |     | NULL    |       |  </span><br><span class="line">  | pages | int(11)  | YES  |     | NULL    |       |  </span><br><span class="line">  +<span class="comment">-------+----------+------+-----+---------+-------+  </span></span><br><span class="line">  3 rows in <span class="keyword">set</span> (<span class="number">0.01</span> sec)  </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; quit;  </span><br><span class="line">  Bye</span><br></pre></td></tr></table></figure><h3 id="练习"><a href="#练习" class="headerlink" title="练习:"></a>练习:</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@Xingyue ~]<span class="comment"># mysql -uroot -p  </span></span><br><span class="line">MariaDB [(none)]&gt; show databases;  </span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  | Database           |  </span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  | information_schema |  </span><br><span class="line">  | mysql              |  </span><br><span class="line">  | performance_schema |  </span><br><span class="line">  +<span class="comment">--------------------+  </span></span><br><span class="line">  3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)  </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> anyue@localhost <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>  </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> root@localhost <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>  </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> root@<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>  </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">use</span> mysql; </span><br><span class="line">MariaDB [(none)]&gt; select user,host,password from mysql.user;</span><br><span class="line">  +<span class="comment">---------+-----------+-------------------------------------------+  </span></span><br><span class="line">  | user    | host      | password                                  |  </span><br><span class="line">  +<span class="comment">---------+-----------+-------------------------------------------+  </span></span><br><span class="line">  | root    | localhost | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |  </span><br><span class="line">  | root    | 127.0.0.1 | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |  </span><br><span class="line">  | root    | ::1       | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |  </span><br><span class="line">  | anyue   | 127.0.0.1 | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |   </span><br><span class="line">  +<span class="comment">---------+-----------+-------------------------------------------+  </span></span><br><span class="line">  4 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="binlog日志"><a href="#binlog日志" class="headerlink" title="binlog日志"></a>binlog日志</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/my.cnf </span></span><br><span class="line">  log-bin=mysql-bin          <span class="comment"># 开启二进制日志, 只记录增删改  </span></span><br><span class="line">[root@xy ~]<span class="comment"># mysqlbinlog --start-datetime &#x27;Y-M-D H:M:S&#x27; --stop-datetime &#x27;Y-M-D H:M:S&#x27; |mysql -uroot -p  </span></span><br><span class="line">[root@xy ~]<span class="comment"># mysqlbinlog --start-position --stop-position |mysql -uroot -p</span></span><br></pre></td></tr></table></figure><h3 id="MySQL主从备份-备份-负载均衡"><a href="#MySQL主从备份-备份-负载均衡" class="headerlink" title="MySQL主从备份(备份,负载均衡):"></a>MySQL主从备份(备份,负载均衡):</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/my.cnf  </span></span><br><span class="line">  主: 192.168.10.10</span><br><span class="line">  [mysqld]</span><br><span class="line">  log-bin=mysql.bin  </span><br><span class="line">  server-id=10    </span><br><span class="line">mysql&gt; grant replication slave on *.* to slave@&#x27;192.168.10.20&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">mysql&gt; show master status;  # replication 拷贝</span><br><span class="line">  +<span class="comment">------------------+----------+--------------+-------------------+</span></span><br><span class="line">  | Fiel             | Position | Binlog_Do_DB | Binglog_Ignore_DB |</span><br><span class="line">  +<span class="comment">------------------+----------+--------------+-------------------+</span></span><br><span class="line">  | mysql-bin.000003 |      257 |              |                   |</span><br><span class="line">  +<span class="comment">------------------+----------+--------------+-------------------+</span></span><br><span class="line"><span class="comment">---</span></span><br><span class="line"></span><br><span class="line">备: 192.168.10.20</span><br><span class="line">  [mysqld]</span><br><span class="line">  log-bin=mysql.bin  </span><br><span class="line">  server-id=20  </span><br><span class="line">mysql&gt; change master to</span><br><span class="line">-&gt; master_user=&#x27;slave&#x27;,</span><br><span class="line">-&gt; master_password=&#x27;123456&#x27;,</span><br><span class="line">-&gt; master_host=&#x27;192.168.10.10&#x27;,</span><br><span class="line">-&gt; master_log_file=&#x27;mysql-bin.000003&#x27;,</span><br><span class="line">-&gt; master_log_pos=257;</span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">mysql&gt; show slave status;</span><br></pre></td></tr></table></figure><h3 id="MySQL主主备份-均摊写压力"><a href="#MySQL主主备份-均摊写压力" class="headerlink" title="MySQL主主备份(均摊写压力):"></a>MySQL主主备份(均摊写压力):</h3><blockquote><p>在主从备份的基础上如下操作  </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/my.cnf  </span></span><br><span class="line">  主: 192.168.10.10</span><br><span class="line">  [mysqld]</span><br><span class="line">  <span class="built_in">log</span>-bin=mysql.bin  </span><br><span class="line">  server-id=10 </span><br><span class="line">  replace-do-db=<span class="built_in">test</span></span><br><span class="line">  binlog-ignore-db=mysql</span><br><span class="line">  binlog-ignore-db=information_schema</span><br><span class="line">  auto-increment-increment=2</span><br><span class="line">  auto=increment-offset=1</span><br><span class="line"> </span><br><span class="line">mysql&gt; change master to</span><br><span class="line">-&gt; master_user=<span class="string">&#x27;slave&#x27;</span>,</span><br><span class="line">-&gt; master_password=<span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">-&gt; master_host=<span class="string">&#x27;192.168.10.20&#x27;</span>,</span><br><span class="line">-&gt; master_log_file=<span class="string">&#x27;mysql-bin.000004&#x27;</span>,</span><br><span class="line">-&gt; master_log_pos=259;</span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">mysql&gt; show slave status\G;</span><br><span class="line"></span><br><span class="line">  备: 192.168.10.20</span><br><span class="line">  [mysqld]</span><br><span class="line">  <span class="built_in">log</span>-bin=mysql.bin  </span><br><span class="line">  server-id=20 </span><br><span class="line">  replace-do-db=<span class="built_in">test</span></span><br><span class="line">  binlog-ignore-db=mysql</span><br><span class="line">  binlog-ignore-db=information_schema</span><br><span class="line">  auto-increment-increment=2</span><br><span class="line">  auto=increment-offset=1</span><br><span class="line">mysql&gt; grant replication slave on *.* to slave@<span class="string">&#x27;192.168.10.10&#x27;</span> identified by <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">mysql&gt; show master status;</span><br></pre></td></tr></table></figure><h3 id="4-1-使用PXE-Kickstat无人值守安装服务"><a href="#4-1-使用PXE-Kickstat无人值守安装服务" class="headerlink" title="4.1 使用PXE+Kickstat无人值守安装服务  "></a>4.1 使用PXE+Kickstat无人值守安装服务  <a id="pxe"></a></h3><ul><li><strong>PXE(Preboot eXecute Environment)</strong>—预启动执行环境,可以让计算机通过网络来启动操作系统,主要用于在无人值守安装系统中引导客户端安装Linux操作系统  </li><li><strong>Kickstat无人值守安装方式</strong>,预先把手工填写参数保存为<strong>ks.cfg</strong>文件,安装过程自动匹配Kickstat生成的文件  </li><li><strong>DHCP + vsftp + tftp + Kickstart</strong>   <img src="/posts/c7601bf8/PXE.png" class title="[PXE+Kickstart]"></li></ul><h4 id="4-2-DHCP服务程序配置-192-168-37-10-无人值守系统服务器IP"><a href="#4-2-DHCP服务程序配置-192-168-37-10-无人值守系统服务器IP" class="headerlink" title="4.2 DHCP服务程序配置  (192.168.37.10 无人值守系统服务器IP)"></a>4.2 DHCP服务程序配置  (192.168.37.10 无人值守系统服务器IP)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install dhcp</span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/dhcp/dhcpd.conf  # /usr/share/doc/dhcp*/dhcpd.conf.example</span></span><br><span class="line">  <span class="comment">#  </span></span><br><span class="line">  <span class="comment"># DHCP Server Configuration file.  </span></span><br><span class="line">  <span class="comment">#   see /usr/share/doc/dhcp*/dhcpd.conf.example  </span></span><br><span class="line">  <span class="comment">#   see dhcpd.conf(5) man page  </span></span><br><span class="line">  <span class="comment">#  </span></span><br><span class="line">  allow booting;  </span><br><span class="line">  allow bootp;  </span><br><span class="line">  ddns-update-style interim;  </span><br><span class="line">  ignore client-updates;  </span><br><span class="line">  subnet 192.168.37.0 netmask 255.255.255.0 &#123;  <span class="comment"># 填写网段 </span></span><br><span class="line">      option subnet-mask  255.255.255.0  </span><br><span class="line">      option domain-name-server   192.168.37.10;  </span><br><span class="line">      range dynamic-bootp 192.168.37.100  192.168.37.200;  </span><br><span class="line">      default-lease-time  21600;  </span><br><span class="line">      max-server  43200;  </span><br><span class="line">      next-server 192.168.37.10;    <span class="comment"># tftp server 的 IP</span></span><br><span class="line">      filename<span class="string">&quot;pxelinux.0&quot;</span>;         <span class="comment"># 客户机获取IP 主动获取引导驱动文件 </span></span><br><span class="line">  &#125;</span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart dhcpd  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable dhcpd  </span></span><br><span class="line">  ln -s <span class="string">&#x27;/usr/lib/systemd/system/dhcpd.service&#x27;</span> <span class="string">&#x27;/etc/systemd/system/multi-user.target.wants/dhcpd.service&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="4-3-TFTP服务程序配置，为客户机提供引导及驱动文件-默认占用端口-69-UDP"><a href="#4-3-TFTP服务程序配置，为客户机提供引导及驱动文件-默认占用端口-69-UDP" class="headerlink" title="4.3 TFTP服务程序配置，为客户机提供引导及驱动文件,默认占用端口  69/UDP"></a>4.3 TFTP服务程序配置，为客户机提供引导及驱动文件,默认占用端口  69/UDP</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install tftp-server</span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/xinetd.d/tftp </span></span><br><span class="line">  <span class="built_in">disable</span> = no  </span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd  --permanent --add-port=69/udp      </span></span><br><span class="line">  success  </span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">  success </span><br></pre></td></tr></table></figure><h4 id="4-4-SYSLinux服务程序配置-提供引导加载服务程序"><a href="#4-4-SYSLinux服务程序配置-提供引导加载服务程序" class="headerlink" title="4.4 SYSLinux服务程序配置, 提供引导加载服务程序"></a>4.4 SYSLinux服务程序配置, 提供引导加载服务程序</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install syslinux   # /usr/share/syslinux 引导文件 </span></span><br><span class="line">[root@xy ~]<span class="comment"># cd /var/lib/tftpboot/</span></span><br><span class="line">[root@xy tftpboot]<span class="comment"># cp /usr/share/syslinux/pxelinux.0 .</span></span><br><span class="line">[root@xy tftpboot]<span class="comment"># cp /media/cdrom/images/pxeboot/&#123;vmlinuz,initrd.img&#125; .</span></span><br><span class="line">[root@xy tftpboot]<span class="comment"># cp /media/cdrom/isolinux/&#123;vesamenu.c32,boot.msg&#125; .</span></span><br><span class="line">[root@xy tftpboot]<span class="comment"># mkdir pxelinux.cfg  </span></span><br><span class="line">[root@xy tftpboot]<span class="comment"># cp /media/cdrom/isolinux/isolinux.cfg pxelinux.cfg/default  </span></span><br><span class="line">[root@xy tftpboot]<span class="comment"># ls  </span></span><br><span class="line">  boot.msg  initrd.img  pxelinux.0  pxelinux.cfg  vesamenu.c32  vmlinuz</span><br><span class="line"></span><br><span class="line">[root@xy tftpboot]<span class="comment"># vim /pxelinux.cfg/default</span></span><br><span class="line">  default linux    <span class="comment"># 1行   vesamenu.c32</span></span><br><span class="line">  label linux     <span class="comment"># 61行</span></span><br><span class="line">      menu label ^Install Red Hat Enterprise Linux 7.0  </span><br><span class="line">      kernel vmlinuz  </span><br><span class="line">      append initrd=initrd.img inst.stage2=hd:LABEL=RHEL-7.0\x20Server.x86_64 quiet   </span><br><span class="line">  <span class="comment"># 64行改为</span></span><br><span class="line">      append initrd=initrd.img inst.stage2=ftp://192.168.37.10 ks=ftp://192.168.37.10/pub/ks.cfg quiet  </span><br></pre></td></tr></table></figure><h4 id="4-5-vsftp服务程序配置，光盘镜像通过FTP协议传输"><a href="#4-5-vsftp服务程序配置，光盘镜像通过FTP协议传输" class="headerlink" title="4.5 vsftp服务程序配置，光盘镜像通过FTP协议传输"></a>4.5 vsftp服务程序配置，光盘镜像通过FTP协议传输</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install vsftpd  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart vsftpd  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable vsftpd</span></span><br><span class="line">  ln -s <span class="string">&#x27;/usr/lib/systemd/system/vsftpd.service&#x27;</span> <span class="string">&#x27;/etc/systemd/system/multi-user.target.wants/vsftpd.service&#x27;</span> </span><br><span class="line">[root@xy ~]<span class="comment"># cp -r /media/cdrom/* /var/ftp</span></span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --permanent --add-service=ftp  </span></span><br><span class="line">  success  </span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">  success  </span><br><span class="line">[root@xy ~]<span class="comment"># setsebool -P ftpd_connect_all_unreserved=on</span></span><br></pre></td></tr></table></figure><h4 id="4-6-创建应答文件Kickstart"><a href="#4-6-创建应答文件Kickstart" class="headerlink" title="4.6 创建应答文件Kickstart"></a>4.6 创建应答文件Kickstart</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># cp ~/anaconda-ks.cfg /var/ftp/pub/ks.cfg  </span></span><br><span class="line">[root@xy ~]<span class="comment"># chmod +r /var/ftp/pub/ks.cfg  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /var/ftp/pub/ks.cfg</span></span><br><span class="line">  url --url=ftp://192.168.37.10     <span class="comment"># 1行  </span></span><br><span class="line">  timezone Aisa/Shanghai --isUtc    <span class="comment"># 21行  </span></span><br><span class="line">  cleanpart --all --initlable       <span class="comment"># 29行  </span></span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># yum istall system-config-kickstart # 图形化Kickstart应答文件生成工具</span></span><br></pre></td></tr></table></figure><ul><li><strong>DHCP</strong>: 给未安装操作系统的机子分配静态IP, 并加载引导驱动文件 pxelinux.0;   </li><li><strong>tftp</strong>(基于 UDP 文件传输协议): 为客户机提供引导及驱动文件;  </li><li><strong>SYSLinux</strong>: 复制引导文件 pxelinux.0 到TFTP 默认目录中, 创建 /pxelinux.cfg/defalut 文件;  </li><li><strong>vsftp</strong>: 将光盘镜像挂载到 media/cdrom, 复制到 vsftp 工作目录;</li><li>创建 Kickstart 应答文件: /var/ftp/pub/ks.cfg</li></ul><h3 id="4-1-Cobbler-无人值守安装服务"><a href="#4-1-Cobbler-无人值守安装服务" class="headerlink" title="4.1 Cobbler 无人值守安装服务  "></a>4.1 Cobbler 无人值守安装服务  <a id="cobbler"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl disable firewalld.service  </span></span><br><span class="line">[root@localhost ~]<span class="comment"># setenforce 0 </span></span><br></pre></td></tr></table></figure><h4 id="4-2-安装配置Cobbler"><a href="#4-2-安装配置Cobbler" class="headerlink" title="4.2 安装配置Cobbler"></a>4.2 安装配置Cobbler</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum -y instal epel-release   </span></span><br><span class="line">[root@xy ~]<span class="comment"># yum install cobbler cobbler-web pykickstart debmirror  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart httpd  # 共享镜像 </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable httpd  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart cobblerd  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable cobblerd </span></span><br><span class="line">[root@xy ~]<span class="comment"># netstat -antp | grep 25151  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/cobbler/settings </span></span><br><span class="line">  server: 10.10.10.11  <span class="comment"># 指定TFTP服务器地址  </span></span><br><span class="line">  next_server: 10.10.10.11    <span class="comment"># 指定Cobbler服务器地址   </span></span><br><span class="line">  manage_dhcp: 1    <span class="comment"># 把对dhcp管理服务开启  </span></span><br><span class="line">[root@xy ~]<span class="comment"># cobbler get-loaders </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable rsyncd  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart rsyncd  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/debmirror.conf  # 安装操作系统类型  </span></span><br><span class="line">  @dists=<span class="string">&quot;sid&quot;</span>;  <span class="comment"># 注释</span></span><br><span class="line">  <span class="comment">#@arches=&quot;i386&quot;;  # 注释  </span></span><br><span class="line">[root@xy ~]<span class="comment"># openssl passwd -l -salt $(openssl rand -hex 4)  # 生成加密字符串  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/cobbler/settings  </span></span><br><span class="line">  default_passsword_cryptes:<span class="string">&quot;加密字符串&quot;</span>   </span><br><span class="line">[root@xy ~]<span class="comment"># yum install cman fence-agents  </span></span><br></pre></td></tr></table></figure><h4 id="4-3配置tftp服务"><a href="#4-3配置tftp服务" class="headerlink" title="4.3配置tftp服务"></a>4.3配置tftp服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install xinetd  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/xinetd.d/tftp  # tftp基于xinetd服务  </span></span><br><span class="line">  disabled=no <span class="comment"># 开启tftp服务  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl start xinetd  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable xinetd    </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart tftp</span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable tftp</span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart cobblerd         </span></span><br><span class="line">[root@xy ~]<span class="comment"># cobbler sync# 同步配置文件   </span></span><br><span class="line">[root@xy ~]<span class="comment"># cobbler check     </span></span><br></pre></td></tr></table></figure><h4 id="4-4配置DHCP服务"><a href="#4-4配置DHCP服务" class="headerlink" title="4.4配置DHCP服务"></a>4.4配置DHCP服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install dhcp    </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/dhcp/dhcpd.conf  </span></span><br><span class="line">  option domain-name <span class="string">&quot;chinasoft.com&quot;</span>;      <span class="comment"># 域</span></span><br><span class="line">  option domain-name-servers 114.114.114.114,8.8.8.8;</span><br><span class="line">  default-lease-time  43200; </span><br><span class="line">  max-server  86400;  </span><br><span class="line">  <span class="built_in">log</span>-facility <span class="built_in">local</span> 7;</span><br><span class="line">    subnet 10.10.10.0 netmask 255.255.255.0 &#123;     <span class="comment"># 填写网段 </span></span><br><span class="line">  range dynamic-bootp 10.10.10.100 10.10.10.200;  <span class="comment"># 地址池</span></span><br><span class="line">  option routers10.10.10.11           <span class="comment"># 网关</span></span><br><span class="line">        option subnet-mask  255.255.255.0         <span class="comment"># 掩码</span></span><br><span class="line">  option domain-name-servers 10.10.10.2;          <span class="comment">#修改DNS</span></span><br><span class="line">    &#125;</span><br><span class="line">  next-server 10.10.10.11;                        <span class="comment"># tftp server 的 IP</span></span><br><span class="line">    filename<span class="string">&quot;pxelinux.0&quot;</span>;       <span class="comment"># 客户机获取IP 主动获取引导驱动文件</span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart dhcpd  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable dhcpd  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart cobblerd    </span></span><br><span class="line">[root@localhost ~]<span class="comment"># cobbler sync  # 同步生成DHCP配置文件</span></span><br></pre></td></tr></table></figure><h4 id="4-5导入镜像"><a href="#4-5导入镜像" class="headerlink" title="4.5导入镜像"></a>4.5导入镜像</h4><img src="/posts/c7601bf8/kickstart.png" class title="[kickstart]">  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mkdir /mnt/cdrom/ &amp;&amp; mount -t iso9660 /dev/cdrom /mnt/cdrom   </span></span><br><span class="line">[root@localhost ~]<span class="comment"># cobbler import --path=/mnt/cdrom --name=&quot;CentOS7.6&quot;  </span></span><br><span class="line">[root@localhost ~]<span class="comment"># cobbler import --path=/mnt/cdrom --name=&quot;CentOS6.8&quot;    </span></span><br><span class="line">  10.10.10.11/cobbler  </span><br><span class="line">  /var/www/cobbler/ks_mirror/CentOS-7-x86_64    <span class="comment"># 导入的镜像文件存放的位置  </span></span><br><span class="line">  /var/lib/cobbler/kickstarts                   <span class="comment"># 应答文件存放位置  </span></span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># cobbler distro list                # cobbler profile list  </span></span><br><span class="line">  centos7.6-x86_64  </span><br><span class="line">  centos6.8-x86_64  </span><br><span class="line">[root@xy ~]<span class="comment"># cobbler profile remove --name=centos7.6-x86_64  # 删除自带应答文件 </span></span><br><span class="line">[root@xy ~]<span class="comment"># mv centos7-x86_64.cfg centos6-x86_64.cfg /var/lib/cobbler/kickstarts   </span></span><br><span class="line">  <span class="comment">#Use NFS installation Media  </span></span><br><span class="line">  url --url=<span class="string">&quot;image link&quot;</span>  </span><br><span class="line">  <span class="comment">#Root password  </span></span><br><span class="line">  rootpw --iscrypted <span class="variable">$default_password_crypted</span>    </span><br><span class="line">[root@xy ~]<span class="comment"># cobbler profile add --name=centos6.5-x86_67-basic --distro=centos6.5-x86_64 --kickstart=/var/lib/cobbler/kickstart/centos6.5-x86_64.cfg  # 匹配  </span></span><br><span class="line">[root@xy ~]<span class="comment"># cobbler profile list</span></span><br><span class="line">  centos6.8-basic  </span><br><span class="line">  centos7.6-basic   </span><br><span class="line">[root@xy ~]<span class="comment"># cobbler sync</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Devops, linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> Devops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux服务配置01</title>
      <link href="/posts/296e7ad4.html"/>
      <url>/posts/296e7ad4.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-11-Linux服务配置01</p><a id="more"></a><h2 id="目录"><a href="#目录" class="headerlink" title="目录    "></a>目录    <a id="back"></a></h2><ul><li><a href="#fdisk" target="_self">分区/格式化/挂载/卸载</a></li><li><a href="#uquota" target="_self">磁盘容量配额技术 uquota</a></li><li><a href="#raid" target="_self">RAID 磁盘阵列</a></li><li><a href="#lvm" target="_self">LVM 逻辑卷管理</a></li><li><a href="#iptables" target="_self">iptables 参数 规则链 动作</a></li><li><a href="#firewalld" target="_self">firewall-cmd 防火墙</a></li><li><a href="#ssh" target="_self">SSH 服务</a></li><li><a href="#scp" target="_self">scp 远程传输</a></li><li><a href="#apache" target="_self">apache 服务</a></li></ul><h3 id="1-一切从-开始"><a href="#1-一切从-开始" class="headerlink" title="1. 一切从  / 开始"></a>1. 一切从  / 开始</h3><img src="/posts/296e7ad4/jiegou.jpg" class title="[文件系统与目录结构]">  <table><thead><tr><th>类别</th><th>说明</th></tr></thead><tbody><tr><td>/boot</td><td>开机所需文件——内核、开机菜单以及所需配置文件</td></tr><tr><td>/dev</td><td>以文件形式存放任何设备及接口</td></tr><tr><td>/etc</td><td>配置文件</td></tr><tr><td>/home</td><td>用户家目录</td></tr><tr><td>/bin</td><td>存放单用户模式下还可以操作的命令</td></tr><tr><td>/lib</td><td>开机时用到的函数库</td></tr><tr><td>/sbin</td><td>开机过程中用到的命令</td></tr><tr><td>/media</td><td>挂载设备文件的目录</td></tr><tr><td>/opt</td><td>第三方软件</td></tr><tr><td>/root</td><td>系统管理员家目录</td></tr><tr><td>/srv</td><td>网络服务的数据文件目录</td></tr><tr><td>/tmp</td><td>任何人均可使用的“共享”临时目录</td></tr><tr><td>/proc</td><td>虚拟文件系统</td></tr><tr><td>/usr/local</td><td>用户自行安装的软件</td></tr><tr><td>/usr/sbin</td><td>开机不会使用的软件及脚本</td></tr><tr><td>/usr/share</td><td>帮助与说明文件</td></tr><tr><td>/var</td><td>经常变化文件,日志</td></tr><tr><td>/lost+found</td><td>当文件系统发生错误，存放丢失的文件片段</td></tr></tbody></table><h3 id="2-路径"><a href="#2-路径" class="headerlink" title="2. 路径"></a>2. 路径</h3><p>绝对路径：从根目录(/)开始写起的文件或目录<br>相对路径：相对于当前路径的写法  <code>./  ../  ~</code></p><h3 id="3-物理设备的命名规则"><a href="#3-物理设备的命名规则" class="headerlink" title="3. 物理设备的命名规则"></a>3. 物理设备的命名规则</h3><table><thead><tr><th>类别</th><th>说明</th></tr></thead><tbody><tr><td>IDE</td><td>/dev/hd[a-d]</td></tr><tr><td>SCSI/SATA/U盘</td><td>/dev/sd[a-p]</td></tr><tr><td>软驱</td><td>/dev/fd[0-1]</td></tr><tr><td>打印机</td><td>/dev/lp[0-15]</td></tr><tr><td>光驱</td><td>/dev/cdrom</td></tr><tr><td>鼠标</td><td>/dev/mouse</td></tr><tr><td>磁带机</td><td>/dev/st0   /dev/ht0</td></tr></tbody></table><ul><li><strong>主分区/扩展分区编号从1开始，到4结束　逻辑分区从编号5开始</strong><br>硬盘设备是由大量扇区组成的，<strong>每个扇区的容量为512字节</strong>，第一个扇区最重要，保存了<strong>主引导记录与分区表信息MBR</strong>，主引导记录用446B，分区表用64B，结束符用2B；分区表记录一个<strong>分区信息需要16B</strong>，最多只有4个分区信息可以写到第一个扇区中，这四个分区就是4个主分区；</li><li>为了解决分区个数不够,可以将第一个扇区分区表中16B(原本写入主分区信息)的空间(称为扩展分区)拿出来指向另外一个分区表。<strong>扩展分区不是一个真正的分区</strong>,是一个占用16字节分区表空间的指针。所以,<strong>用户一般会选择3个主分区加1个扩展分区,在扩展分区中建立数个逻辑分区</strong>；</li></ul><h3 id="4-文件系统与数据资料"><a href="#4-文件系统与数据资料" class="headerlink" title="4. 文件系统与数据资料"></a>4. 文件系统与数据资料</h3><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>EXT3</td><td>日志文件系统</td></tr><tr><td>Ext4</td><td>Ext3改进版,RHEL6系统默认文件管理系统,支持存储容量高达1EB</td></tr><tr><td>XFS</td><td>高性能的日志文件系统,RHEL7默认文件管理系统,最大支持存储容量18EB</td></tr></tbody></table><h3 id="5-挂载硬件设备"><a href="#5-挂载硬件设备" class="headerlink" title="5. 挂载硬件设备"></a>5. 挂载硬件设备</h3><p><strong>注：</strong> mount -a 会自动检查/etc/fstab文件有无疏漏的挂载设备，若有则自动进行挂载</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-t</td><td>指定文件的系统类型:iso9600</td></tr><tr><td>-o</td><td>描述设备或档案的挂载方式</td></tr><tr><td>—</td><td>loop:把文件当成硬盘分区挂载</td></tr><tr><td>—</td><td>ro:只读方式</td></tr><tr><td>—</td><td>rw:读写方式</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mount /dev/sdb2 /backup # 挂载目录需要挂载前创建好，mount[设备文件 挂在目录]  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/fstab     # 开机自动挂载sdb2    </span></span><br><span class="line">  1  <span class="comment">#  </span></span><br><span class="line">  2  <span class="comment"># /etc/fstab  </span></span><br><span class="line">  3  <span class="comment"># Created by anaconda on Fri Jul  6 08:44:38 2018  </span></span><br><span class="line">  4  <span class="comment">#  </span></span><br><span class="line">  5  <span class="comment"># Accessible filesystems, by reference, are maintained under &#x27;/dev/disk&#x27;  </span></span><br><span class="line">  6  <span class="comment"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info  </span></span><br><span class="line">  7  <span class="comment">#  </span></span><br><span class="line">  8  /dev/mapper/rhel-root                      /         xfs       defaults        1 1  </span><br><span class="line">  9  UUID=28d7b2f5-a322-4990-ab6c-5936d156fce7 /boot      xfs       defaults        1 2  </span><br><span class="line">  10 /dev/mapper                              /rhel-swap  swap swap defaults        0 0  </span><br><span class="line">  11 /dev/cdrom                              /media/cdrom iso9660   defaults        0 0  </span><br><span class="line">  12 /dev/sdb2  /backupext4      defaults        0 0  </span><br></pre></td></tr></table></figure><h3 id="6-撤销挂载设备"><a href="#6-撤销挂载设备" class="headerlink" title="6. 撤销挂载设备  "></a>6. 撤销挂载设备  <a id="fdisk"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]# umount &#x2F;dev&#x2F;sdb2　# umount [设备文件&#x2F;挂在目录]</span><br></pre></td></tr></table></figure><h3 id="7-分区-格式化-挂载"><a href="#7-分区-格式化-挂载" class="headerlink" title="7. 分区-格式化-挂载:"></a>7. 分区-格式化-挂载:</h3><h4 id="fdisk"><a href="#fdisk" class="headerlink" title="fdisk"></a>fdisk</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-m</td><td>查看全部可用参数</td></tr><tr><td>-n</td><td>添加新的分区，p主分区，e扩展分区</td></tr><tr><td>-d</td><td>删除某个分区信息</td></tr><tr><td>-q</td><td>不保存退出</td></tr><tr><td>-l</td><td>✔列出所以可用的分区类型</td></tr><tr><td>-t</td><td>✔改变某个分区的信息</td></tr><tr><td>-p</td><td>✔查看分区信息</td></tr><tr><td>-w</td><td>保存并退出</td></tr></tbody></table><h4 id="7-1-分区："><a href="#7-1-分区：" class="headerlink" title="7.1 分区："></a>7.1 分区：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># fdisk /dev/sdb  # sd --&gt;SATA</span></span><br><span class="line">  Welcome to fdisk (util-linux 2.23.2).  </span><br><span class="line"></span><br><span class="line">  Changes will remain <span class="keyword">in</span> memory only, until you decide to write them.  </span><br><span class="line">  Be careful before using the write <span class="built_in">command</span>.  </span><br><span class="line"></span><br><span class="line">  Device does not contain a recognized partition table  </span><br><span class="line">  Building a new DOS disklabel with disk identifier 0x301a431a.  </span><br><span class="line">   </span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p <span class="comment">#查看分区信息  </span></span><br><span class="line">  Disk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectors  </span><br><span class="line">  Units = sectors of 1 * 512 = 512 bytes  </span><br><span class="line">  Sector size (logical/physical): 512 bytes / 512 bytes  </span><br><span class="line">  I/O size (minimum/optimal): 512 bytes / 512 bytes  </span><br><span class="line">  Disk label <span class="built_in">type</span>: dos  </span><br><span class="line">  Disk identifier: 0x301a431a  </span><br><span class="line">  </span><br><span class="line">  Device Boot      Start         End      Blocks   Id  System  </span><br><span class="line"> </span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n <span class="comment">#添加新的分区  </span></span><br><span class="line">  Partition <span class="built_in">type</span>:  </span><br><span class="line">      p   primary (0 primary, 0 extended, 4 free)  </span><br><span class="line">      e   extended  </span><br><span class="line">  </span><br><span class="line">Select (default p): p   </span><br><span class="line">Partition number (1-4, default 1): 1  </span><br><span class="line">  First sector (2048-41943039, default 2048):   </span><br><span class="line">  Using default value 2048  </span><br><span class="line">  Last sector, +sectors or +size&#123;K,M,G&#125; (2048-41943039, default 41943039): +2G <span class="comment"># 创建2GB分区  </span></span><br><span class="line">  Partition 1 of <span class="built_in">type</span> Linux and of size 2 GiB is <span class="built_in">set</span>  </span><br><span class="line">  </span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p 　<span class="comment"># 查看分区信息     </span></span><br><span class="line">  Disk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectors  </span><br><span class="line">  Units = sectors of 1 * 512 = 512 bytes  </span><br><span class="line">  Sector size (logical/physical): 512 bytes / 512 bytes  </span><br><span class="line">  I/O size (minimum/optimal): 512 bytes / 512 bytes  </span><br><span class="line">  Disk label <span class="built_in">type</span>: dos  </span><br><span class="line">  Disk identifier: 0x301a431a  </span><br><span class="line"></span><br><span class="line">  Device Boot      Start         End      Blocks   Id  System  </span><br><span class="line">  /dev/sdb1            2048     4196351     2097152   83  Linux  </span><br><span class="line">  </span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w <span class="comment"># 保存分区信息并退出</span></span><br><span class="line">  The partition table has been altered!  </span><br><span class="line">  Calling ioctl() to re-read partition table.  </span><br><span class="line">  Syncing disks.</span><br><span class="line">   </span><br><span class="line">[root@xy ~]<span class="comment"># file /dev/sdb　# file 查看 /dev/sdb1 文件属性  /dev/sdb1: cannot open (No such file or directory)</span></span><br><span class="line">[root@xy ~]<span class="comment"># partprobe　#partprobe 同步分区信息到系统内核 </span></span><br><span class="line">[root@xy ~]<span class="comment"># file /dev/sdb1  </span></span><br><span class="line">/dev/sdb1: block special  </span><br></pre></td></tr></table></figure><h4 id="7-2-格式化-创建文件系统类型-：-mkfs-文件类型名称-dev-sdb1"><a href="#7-2-格式化-创建文件系统类型-：-mkfs-文件类型名称-dev-sdb1" class="headerlink" title="7.2 格式化(创建文件系统类型)： mkfs.文件类型名称 /dev/sdb1"></a>7.2 格式化(创建文件系统类型)： mkfs.文件类型名称 /dev/sdb1</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mkfs # 分区完后用 mkfs 格式化  </span></span><br><span class="line">    mkfs mkfs.cramfs  mkfs.ext3mkfs.fatmkfs.msdos  </span><br><span class="line">    mkfs.xfsmkfs.btrfsmkfs.ext2mkfs.ext4mkfs.minix   </span><br><span class="line">    mkfs.vfat   </span><br><span class="line">[root@xy ~]<span class="comment"># mkfs -t xfs /dev/sdb1 </span></span><br><span class="line">  meta-data=/dev/sdb1  isize=256  agcount=4, agsize=131072 blks  </span><br><span class="line">  =  sectsz=512  attr=2, projid32bit=1  </span><br><span class="line">  =  crc=0  </span><br><span class="line">  data  =bsize=4096   blocks=524288, imaxpct=25  </span><br><span class="line">  =  sunit=0  swidth=0 blks  </span><br><span class="line">  naming  =version 2  bsize=4096   ascii-ci=0 ftype=0  </span><br><span class="line">  <span class="built_in">log</span>  =internal <span class="built_in">log</span>  bsize=4096   blocks=2560, version=2  </span><br><span class="line">  =  sectsz=512   sunit=0 blks, lazy-count=1  </span><br><span class="line">  realtime =none  extsz=4096   blocks=0, rtextents=0</span><br></pre></td></tr></table></figure><h4 id="7-3-挂载分区："><a href="#7-3-挂载分区：" class="headerlink" title="7.3 挂载分区："></a>7.3 挂载分区：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mkdir /newFS</span></span><br><span class="line">[root@xy ~]<span class="comment"># mount /dev/sdb1 /newFS/  </span></span><br><span class="line">[root@xy ~]<span class="comment"># df -h 　 # 查看挂载状态及设备 建议 df -Th 命令信息更全 </span></span><br><span class="line">    Filesystem           Size  Used Avail Use% Mounted on  </span><br><span class="line">    /dev/mapper/rhel-root   28G  3.0G   25G  11% /  </span><br><span class="line">    devtmpfs               985M     0  985M   0% /dev  </span><br><span class="line">    tmpfs                  994M  148K  994M   1% /dev/shm  </span><br><span class="line">    tmpfs                  994M  8.8M  986M   1% /run  </span><br><span class="line">    tmpfs                  994M     0  994M   0% /sys/fs/cgroup  </span><br><span class="line">    /dev/sr0               3.5G  3.5G     0 100% /media/cdrom  </span><br><span class="line">    /dev/sda1              497M  119M  379M  24% /boot  </span><br><span class="line">    /dev/sdb1              2.0G   33M  2.0G   2% /newFS  </span><br><span class="line">    </span><br><span class="line">[root@xy ~]<span class="comment"># cp -rf /etc/* /newFS</span></span><br><span class="line">[root@xy ~]<span class="comment"># ls /newFS</span></span><br><span class="line">abrt hosts pulse  </span><br><span class="line">adjtime host.allow purple  </span><br><span class="line">........省略部分信息........  </span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># du -sh /newFS/ 　 # du -sh  查看空间占用情况  </span></span><br><span class="line">33M /newFS/</span><br></pre></td></tr></table></figure><h3 id="8-添加交换分区swap"><a href="#8-添加交换分区swap" class="headerlink" title="8. 添加交换分区swap"></a>8. 添加交换分区swap</h3><blockquote><p>交换分区是把内存中暂时不用的数据临时存放到硬盘中,解决物理内存不足问题,交换分区一般为物理内存的1.5~2倍  ，mkswap 与 swapon  </p></blockquote><h4 id="8-1-分区："><a href="#8-1-分区：" class="headerlink" title="8.1 分区："></a>8.1 分区：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># fdisk /dev/sdb 　 # 分区  </span></span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).  </span><br><span class="line"></span><br><span class="line">Changes will remain <span class="keyword">in</span> memory only, until you decide to write them.  </span><br><span class="line">Be careful before using the write <span class="built_in">command</span>.  </span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line"> Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (1 primary, 0 extended, 3 free)  </span><br><span class="line">   e   extended  </span><br><span class="line"></span><br><span class="line">Select (default p): p </span><br><span class="line"> Partition number (2-4, default 2): 2  </span><br><span class="line">  First sector (4196352-41943039, default 4196352):   </span><br><span class="line">  Using default value 4196352  </span><br><span class="line">  Last sector, +sectors or +size&#123;K,M,G&#125; (4196352-41943039, default 41943039): +5G  </span><br><span class="line">  Partition 2 of <span class="built_in">type</span> Linux and of size 5 GiB is <span class="built_in">set</span>  </span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p  </span><br><span class="line"> Disk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectors  </span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes  </span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes  </span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes  </span><br><span class="line">Disk label <span class="built_in">type</span>: dos  </span><br><span class="line">Disk identifier: 0x301a431a  </span><br><span class="line"></span><br><span class="line"> Device Boot      Start         End      Blocks   Id  System  </span><br><span class="line">/dev/sdb1            2048     4196351     2097152   83  Linux  </span><br><span class="line">/dev/sdb2         4196352    14682111     5242880   83  Linux  </span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w  </span><br><span class="line"> The partition table has been altered!  </span><br><span class="line"></span><br><span class="line"> Calling ioctl() to re-read partition table.  </span><br><span class="line"></span><br><span class="line"> WARNING: Re-reading the partition table failed with error 16: Device or resource busy.  </span><br><span class="line">The kernel still uses the old table. The new table will be used at  </span><br><span class="line">the next reboot or after you run partprobe(8) or kpartx(8)  </span><br><span class="line">Syncing disks.  </span><br></pre></td></tr></table></figure><h4 id="8-2-格式化："><a href="#8-2-格式化：" class="headerlink" title="8.2 格式化："></a>8.2 格式化：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mkswap /dev/sdb2  　# 格式化 mkswap  </span></span><br><span class="line">/dev/sdb2: No such file or directory  </span><br><span class="line">[root@xy ~]<span class="comment"># partprobe  </span></span><br><span class="line">[root@xy ~]<span class="comment"># partprobe  </span></span><br><span class="line">[root@xy ~]<span class="comment"># mkswap /dev/sdb2  </span></span><br><span class="line">Setting up swapspace version 1, size = 5242876 KiB  </span><br><span class="line">no label, UUID=ffe8494a-c2f5-4af4-becf-985b130d395c  </span><br><span class="line">[root@xy ~]<span class="comment"># free -m  </span></span><br><span class="line">             total       used       free     shared    buffers     cached  </span><br><span class="line">Mem:          1987       1137        850          9          1        279  </span><br><span class="line">-/+ buffers/cache:        856       1131  </span><br><span class="line">Swap:            0          0          0  </span><br></pre></td></tr></table></figure><h4 id="8-3-挂载分区："><a href="#8-3-挂载分区：" class="headerlink" title="8.3 挂载分区："></a>8.3 挂载分区：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># swapon /dev/sdb2    　# 挂载使用  </span></span><br><span class="line">[root@xy ~]<span class="comment"># free -m  </span></span><br><span class="line">             total       used       free     shared    buffers     cached  </span><br><span class="line">Mem:          1987       1141        846          9          1        279  </span><br><span class="line">-/+ buffers/cache:        860       1127  </span><br><span class="line">Swap:         5119          0       5119  </span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/fstab 　# 设置自动挂载      </span></span><br><span class="line">  1  <span class="comment">#  </span></span><br><span class="line">  2  <span class="comment"># /etc/fstab  </span></span><br><span class="line">  3  <span class="comment"># Created by anaconda on Fri Jul  6 08:44:38 2018  </span></span><br><span class="line">  4  <span class="comment">#  </span></span><br><span class="line">  5  <span class="comment"># Accessible filesystems, by reference, are maintained under &#x27;/dev/disk&#x27;  </span></span><br><span class="line">  6  <span class="comment"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info  </span></span><br><span class="line">  7  <span class="comment">#  </span></span><br><span class="line">  /dev/mapper/rhel-root                  /         xfs       defaults        1 1    </span><br><span class="line">  UUID=28d7b2f5-a322-4990-ab6c-5936d156fce7 /boot  xfs       defaults        1 2    </span><br><span class="line">  /dev/mapper                          /rhel-swap  swap swap defaults        0 0  </span><br><span class="line">  /dev/cdrom                          /media/cdrom iso9660   defaults        0 0    </span><br><span class="line">  /dev/sdb1                          /newFS        xfs       defaults        0 0    </span><br><span class="line">  /dev/sdb2                          swap          swap      defaults        0 0 </span><br></pre></td></tr></table></figure><h3 id="9-删除手动增加的交换分区swap"><a href="#9-删除手动增加的交换分区swap" class="headerlink" title="9. 删除手动增加的交换分区swap"></a>9. 删除手动增加的交换分区swap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># /sbin/swapoff /dev/sdb2  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/fstab   </span></span><br><span class="line">/dev/sdb2    swap     swap     defaults       0 0 　<span class="comment"># 删除  </span></span><br><span class="line">[root@xy ~]<span class="comment"># swapon -s</span></span><br><span class="line">Filename        Type      Size    Used  Priority  </span><br><span class="line">/dev/dm-0       partition 2113532 0     -1  </span><br></pre></td></tr></table></figure><h3 id="10-磁盘容量配额技术"><a href="#10-磁盘容量配额技术" class="headerlink" title="10. 磁盘容量配额技术  "></a>10. 磁盘容量配额技术  <a id="uquota"></a></h3><p><strong>配置/etc/fstab,使/boot目录支持uquota,磁盘容量配额技术</strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UUID=28d7b2f5-a322-4990-ab6c-5936d156fce7 /boot    xfs    defaults,uquota 1 2</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># reboot  </span></span><br><span class="line">[root@xy ~]<span class="comment"># mount | grep boot</span></span><br><span class="line">/dev/sda1 on /boot <span class="built_in">type</span> xfs (rw,relatime,seclablel,attr2,inode64,usrquota)  </span><br><span class="line">[root@xy ~]<span class="comment"># useradd tom   </span></span><br><span class="line">[root@xy ~]<span class="comment"># chmod -Rf o+w /boot 　# other write  </span></span><br><span class="line">[root@xy ~]<span class="comment"># xfs_quota -x -c &#x27;limit bsoft=3m bhard=6m isoft=3 ihard=6 tom&#x27; /boot</span></span><br><span class="line">[root@xy ~]<span class="comment"># xfs_quota -x -c report /boot　# xfs_quota -x -c</span></span><br><span class="line">  User quota on /boot (/dev/sda1)  Blocks  </span><br><span class="line">  User ID Used Soft Hard Warn/Grace  </span><br><span class="line">  ----------- ----------------------------------------------  </span><br><span class="line">  root 95084   0     0    00 [--------] </span><br><span class="line">  tom  0       3072  6144 00 [--------] </span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># su - tom  </span></span><br><span class="line">[tom@xy ~]$ dd <span class="keyword">if</span>=/dev/zero of=/boot/tom bs=5M count=1  </span><br><span class="line">  1+0 records <span class="keyword">in</span>  </span><br><span class="line">  1+0 records out  </span><br><span class="line">  5242880 bytes (5.2 MB) copied, 0.123996 s, 42.3 MB/s  </span><br><span class="line"></span><br><span class="line">[tom@xy ~]$ dd <span class="keyword">if</span>=/dev/zero of=/boot/tom bs=8M count=1</span><br><span class="line">  dd: error writing <span class="string">&#x27;/boot/tom&#x27;</span>: Disk quato exceeded 　 <span class="comment"># 限制  </span></span><br><span class="line">  1+0 records <span class="keyword">in</span>  </span><br><span class="line">  1+0 records out  </span><br><span class="line">  6291456 bytes (6.3 MB) copied, 0.0201596s, 312MB/s  </span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># edquota -u tom　 # edquota -u 按需修改配额    </span></span><br><span class="line">  Disk quotas <span class="keyword">for</span> user tom (uid 1001):  </span><br><span class="line">  Filesystem blocks   soft   hard   inodes   soft   hard  </span><br><span class="line">  /dev/sda   6114     3072   8192   1        3      6  </span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># su - tom</span></span><br><span class="line">[tom@xy ~]$ dd <span class="keyword">if</span>=/dev/zero of=/boot/tom bs=8M count=1  </span><br><span class="line">  1+0 records <span class="keyword">in</span>  </span><br><span class="line">  1+0 records out  </span><br><span class="line">  8388608 bytes (8.4 MB) copied, 0.0238044s, 313MB/s  </span><br><span class="line">[tom@xy ~]$ dd <span class="keyword">if</span>=/dev/zero of=/boot/tom bs=10M count=1  </span><br><span class="line">  dd: error writing <span class="string">&#x27;/boot/tom&#x27;</span>: Disk quato exceeded  </span><br><span class="line">  1+0 records <span class="keyword">in</span>  </span><br><span class="line">  1+0 records out  </span><br><span class="line">  8388608 bytes (8.4 MB) copied, 0.0238044s, 313MB/s  </span><br></pre></td></tr></table></figure><h3 id="11-创建链接文件ln"><a href="#11-创建链接文件ln" class="headerlink" title="11. 创建链接文件ln"></a>11. 创建链接文件ln</h3><p>:link:<a href="https://www.cnblogs.com/ricklz/p/9378755.html">cnblog参考</a>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xy /]<span class="comment"># ln -s ../usr/share/zoneinfo/Asia/Shanghai /etc/localtime #相对目录建立, 找相对于链接的根目录</span></span><br></pre></td></tr></table></figure><blockquote><p>硬链接与软链接的区别:  </p><blockquote><p>ln src dst<br>    1、不能跨分区；<br>    2、删除源文件不影响链接文件；<br>    3、inode号不变，指向同一个文件；<br>    4、链接数增加；<br>##软链接：<br>ln -s src dst<br>    1、可以跨分区；<br>    2、删除源文件影响链接文件；<br>    3、inode号不相同；<br>    4、链接数不变；<br>ln -s ../boot/grub2/grub.cfg /etc/grub2.cfg</p></blockquote></blockquote><h3 id="12-RAID与LVM磁盘阵列技术"><a href="#12-RAID与LVM磁盘阵列技术" class="headerlink" title="12. RAID与LVM磁盘阵列技术  "></a>12. RAID与LVM磁盘阵列技术  <a id="raid"></a></h3><ul><li><p>RAID(fd)(Redundant Array of Independent Disks,独立冗余磁盘阵列)</p></li><li><p><strong>RAID 0(Srtiping)</strong>:把多块物理硬件设备(至少2块)通过硬件或软件凡事串联在一起,组成一个大的卷组,提升了硬盘数据的吞吐量,但不具备数据备份和错误修复能力； </p><ul><li>性能提升：读写；</li><li>冗余(容错)能力：无；</li><li>空间利用率：ns(s–&gt; 一块盘利用率)</li><li>至少2块<img src="/posts/296e7ad4/RAID0.png" class title="[RAID 0--条带]"></li></ul></li><li><p><strong>RAID 1(Mirroring)</strong>:数据写到多块硬盘设备上,当某一块硬盘发生故障后,一般会立即以热交换方式来恢复数据的正常使用,但硬盘的使用率却下降了,只有33%左右 ✔   </p><ul><li>性能提升：写下降，读提升；</li><li>冗余能力：有；</li><li>空间利用率：1/2</li><li>至少2块<img src="/posts/296e7ad4/raid1.jpg" class title="[RAID 1--镜像]"></li></ul></li><li><p><strong>RAID 5</strong>:将硬盘设备的数据奇偶校验信息保存到除自身外每一块硬盘设备上,当硬盘出现问题,通过奇偶校验信息来尝试重建损坏的数据  ✔</p><ul><li>性能提升：读写提升；</li><li>冗余能力：有；</li><li>空间利用率：(n-1)s/n</li><li>至少3块<img src="/posts/296e7ad4/raid5.jpg" class title="[RAID 5--校验]"></li></ul></li><li><p><strong>RAID 10</strong>：RAID10=RAID 1 + RAID 0</p><ul><li>性能提升：读写提升；</li><li>冗余能力：有；</li><li>空间利用率：1/2</li><li>至少4块<img src="/posts/296e7ad4/raid-10.png" class title="[RAID 10--综合]"></li></ul></li><li><p>mdadm 命令</p></li></ul><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-C</td><td>创建 ✔</td></tr><tr><td>-v</td><td>显示过程 ✔</td></tr><tr><td>-a</td><td>检测设备名称</td></tr><tr><td>-n</td><td>指定设备数量 ✔</td></tr><tr><td>-l</td><td>指定RAID级别</td></tr><tr><td>-D</td><td>查看详细信息 ✔</td></tr><tr><td>-f</td><td>模拟设备损坏</td></tr><tr><td>-Q</td><td>查看摘要信息</td></tr><tr><td>-r</td><td>移除设备</td></tr><tr><td>-S</td><td>停止RAID磁盘阵列</td></tr><tr><td>-x</td><td>备用盘</td></tr></tbody></table><h3 id="12-1-部署磁盘阵列RAID-5-也可以拿分区做实验"><a href="#12-1-部署磁盘阵列RAID-5-也可以拿分区做实验" class="headerlink" title="12.1 部署磁盘阵列RAID 5(也可以拿分区做实验)"></a>12.1 部署磁盘阵列RAID 5(也可以拿分区做实验)</h3><h4 id="1-创建RAID-5："><a href="#1-创建RAID-5：" class="headerlink" title="1)创建RAID 5："></a>1)创建RAID 5：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mdadm -Cv -a yes /dev/md0 -n 3 -l 5 -x 1 /dev/sd&#123;c,d,e,f&#125;</span></span><br><span class="line">  mdadm: layout defaults to left-symmetric  </span><br><span class="line">  mdadm: layout defaults to left-symmetric  </span><br><span class="line">  mdadm: chunk size defaults to 512K  </span><br><span class="line">  mdadm: Defaulting to version 1.2 metadata  </span><br><span class="line">  mdadm: array /dev/md0 started.</span><br></pre></td></tr></table></figure><h4 id="2-查看RAID-5："><a href="#2-查看RAID-5：" class="headerlink" title="2)查看RAID 5："></a>2)查看RAID 5：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mdadm -D /dev/md0  </span></span><br><span class="line">[root@xy ~]<span class="comment"># watch -n &#x27;command&#x27;  # 周期性执行指定命令，并以全屏方式显示结果</span></span><br><span class="line">  /dev/md0:  </span><br><span class="line">  Version : 1.2  </span><br><span class="line">  Creation Time : Fri May 8 09:20:35 2018  </span><br><span class="line">  Raid Level : raid5  </span><br><span class="line">  Array Size : 41909248 (39.97 GiB 42.92 GB)  </span><br><span class="line">  Used Dev Size : 20954624 (19.98 GiB 21.46 GB)  </span><br><span class="line">  Raid Devices : 3   </span><br><span class="line">  Total Devices : 4  </span><br><span class="line">  Persistence : Superblock is Persistence  </span><br><span class="line">  Update Time : Fri May 8 09:22:22 2018  </span><br><span class="line">  State : clean  </span><br><span class="line">  Active Devices : 3  </span><br><span class="line">  Working Devices : 4  </span><br><span class="line">  Failed Devices : 0  </span><br><span class="line">  Spare Devices : 1  </span><br><span class="line">  Layout : left-symmetric  </span><br><span class="line">  Chunk Size : 512K   </span><br><span class="line">  Name : xy.com:0 (<span class="built_in">local</span> to host xy.com)  </span><br><span class="line">  UUID : 111c244f:e080b0c1:3316b6f2:986fa663  </span><br><span class="line">  Events : 18  </span><br><span class="line">  Number Major Minor RaidDevice State  </span><br><span class="line">       0   8    16       0      active sync /dev/sdc  </span><br><span class="line">       1   8    32       1      active sync /dev/sdd  </span><br><span class="line">       4   8    48       2      active sync /dev/sde  </span><br><span class="line">       3   8    64       -      spare       /dev/sdf </span><br></pre></td></tr></table></figure><h4 id="3-格式化RAID-5："><a href="#3-格式化RAID-5：" class="headerlink" title="3)格式化RAID 5："></a>3)格式化RAID 5：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mkfs.ext4 /dev/md0</span></span><br><span class="line">  mke2fs 1.42.9 (28-Dec-2013)  </span><br><span class="line">  Filesystem label=  </span><br><span class="line">  OS <span class="built_in">type</span>: Linux  </span><br><span class="line">  Block size=4096 (<span class="built_in">log</span>=2)  </span><br><span class="line">  Fragment size=4096 (<span class="built_in">log</span>=2)  </span><br><span class="line">  Stride=128 blocks, Stripe width=256 blocks  </span><br><span class="line">  2621440 inodes, 10477312 blocks  </span><br><span class="line">  523865 blocks (5.00%) reserved <span class="keyword">for</span> the super user  </span><br><span class="line">  First data block=0  </span><br><span class="line">  Maximum filesystem blocks=2157969408  </span><br><span class="line">  320 block groups  </span><br><span class="line">  32768 blocks per group, 32768 fragments per group  </span><br><span class="line">  8192 inodes per group  </span><br><span class="line">  Superblock backups stored on blocks:   </span><br><span class="line">    32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,   </span><br><span class="line">    4096000, 7962624  </span><br><span class="line"></span><br><span class="line">  Allocating group tables: <span class="keyword">done</span>                              </span><br><span class="line">  Writing inode tables: <span class="keyword">done</span>                              </span><br><span class="line">  Creating journal (32768 blocks): <span class="keyword">done</span>  </span><br><span class="line">  Writing superblocks and filesystem accounting information: <span class="keyword">done</span> </span><br></pre></td></tr></table></figure><h4 id="4-挂载-RAID-5"><a href="#4-挂载-RAID-5" class="headerlink" title="4)挂载 RAID 5"></a>4)挂载 RAID 5</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># echo &quot;/dev/md0 /RAID ext4 defaults 0 0&quot; &gt;&gt; /etc/fstab  </span></span><br><span class="line">[root@xy ~]<span class="comment"># mkdir /RAID </span></span><br><span class="line">[root@xy ~]<span class="comment"># mount -a</span></span><br><span class="line">[root@xy ~]<span class="comment"># mdadm /dev/md0 -f /dev/sdc  </span></span><br><span class="line">  mdadm: <span class="built_in">set</span> /dev/sdc faulty <span class="keyword">in</span> /dev/md0  </span><br><span class="line">[root@xy ~]<span class="comment"># mdadm -D /dev/md0</span></span><br><span class="line">  /dev/md0:  </span><br><span class="line">  Version : 1.2  </span><br><span class="line">  Creation Time : Fri May 8 09:20:35 2018  </span><br><span class="line">  Raid Level : raid5  </span><br><span class="line">  Array Size : 41909248 (39.97 GiB 42.92 GB)  </span><br><span class="line">  Used Dev Size : 20954624 (19.98 GiB 21.46 GB)  </span><br><span class="line">  Raid Devices : 3  </span><br><span class="line">  Total Devices : 4  </span><br><span class="line">  Persistence : Superblock is Persistence  </span><br><span class="line">  Update Time : Fri May 8 09:23:51 2018  </span><br><span class="line">  State : active, degraded, resering  </span><br><span class="line">  Active Devices : 2  </span><br><span class="line">  Working Devices :3  </span><br><span class="line">  Failed Devices : 1  </span><br><span class="line">  Spare Devices : 1  </span><br><span class="line">  Layout : left-symmetric  </span><br><span class="line">  Chunk Size : 512K  </span><br><span class="line">  Rebuild Status : 0% complete  </span><br><span class="line">  Name : xy.com:0 (<span class="built_in">local</span> to host xy.com)  </span><br><span class="line">  UUID : 111c244f:e080b0c1:3316b6f2:986fa663  </span><br><span class="line">  Events : 21  </span><br><span class="line">  Number Major Minor RaidDevice Status  </span><br><span class="line">       3   8    64       0      spare rebuilding /dev/sdf </span><br><span class="line">       1   8    32       1      active sync      /dev/sdd </span><br><span class="line">       4   8    48       2      active sync      /dev/sde </span><br><span class="line">       0   8    16       -      faulty           /dev/sdc  </span><br></pre></td></tr></table></figure><h4 id="12-3-部署磁盘阵列RAID-10"><a href="#12-3-部署磁盘阵列RAID-10" class="headerlink" title="12.3 部署磁盘阵列RAID 10:"></a>12.3 部署磁盘阵列RAID 10:</h4><h5 id="1-创建-RAID-10"><a href="#1-创建-RAID-10" class="headerlink" title="1) 创建 RAID 10:"></a>1) 创建 RAID 10:</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mdadm -Cv /dev/md0 -a yes -n 4 -l 10 /dev/sd&#123;c,d,e,f&#125;     </span></span><br><span class="line">  mdadm: layout defaults to n2  </span><br><span class="line">  mdadm: layout defaults to n2  </span><br><span class="line">  mdadm: chunk size defaults to 512K  </span><br><span class="line">  mdadm: size <span class="built_in">set</span> to 20954624K  </span><br><span class="line">  mdadm: Defaulting to version 1.2 metadata  </span><br><span class="line">  mdadm: array /dev/md0 started. </span><br></pre></td></tr></table></figure><h5 id="2-格式化-RAID-10"><a href="#2-格式化-RAID-10" class="headerlink" title="2) 格式化 RAID 10:"></a>2) 格式化 RAID 10:</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mkfs.ext4 /dev/md0　# 格式化 ext4  </span></span><br><span class="line">  mke2fs 1.42.9 (28-Dec-2013)  </span><br><span class="line">  Filesystem label=  </span><br><span class="line">  OS <span class="built_in">type</span>: Linux  </span><br><span class="line">  Block size=4096 (<span class="built_in">log</span>=2)  </span><br><span class="line">  Fragment size=4096 (<span class="built_in">log</span>=2)  </span><br><span class="line">  Stride=128 blocks, Stripe width=256 blocks  </span><br><span class="line">  2621440 inodes, 10477312 blocks  </span><br><span class="line">  523865 blocks (5.00%) reserved <span class="keyword">for</span> the super user  </span><br><span class="line">  First data block=0  </span><br><span class="line">  Maximum filesystem blocks=2157969408  </span><br><span class="line">  320 block groups  </span><br><span class="line">  32768 blocks per group, 32768 fragments per group  </span><br><span class="line">  8192 inodes per group  </span><br><span class="line">  Superblock backups stored on blocks:   </span><br><span class="line">  32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,  </span><br><span class="line">  4096000, 7962624  </span><br><span class="line"></span><br><span class="line">  Allocating group tables: <span class="keyword">done</span>                           </span><br><span class="line">  Writing inode tables: <span class="keyword">done</span>                             </span><br><span class="line">  Creating journal (32768 blocks): <span class="keyword">done</span>  </span><br><span class="line">  Writing superblocks and filesystem accounting information: <span class="keyword">done</span>   </span><br></pre></td></tr></table></figure><h5 id="3-挂载-RAID-10"><a href="#3-挂载-RAID-10" class="headerlink" title="3) 挂载 RAID 10:"></a>3) 挂载 RAID 10:</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mkdir /RAID 　# 挂载 /dev/md0</span></span><br><span class="line">[root@xy ~]<span class="comment"># mount /dev/md0 /RAID/</span></span><br><span class="line">[root@xy ~]<span class="comment"># df -h  </span></span><br><span class="line">  Filesystem             Size  Used Avail Use% Mounted on  </span><br><span class="line">  /dev/mapper/rhel-root   28G  3.0G   25G  11% /  </span><br><span class="line">  devtmpfs               985M     0  985M   0% /dev  </span><br><span class="line">  tmpfs                  994M  148K  994M   1% /dev/shm  </span><br><span class="line">  tmpfs                  994M  8.8M  986M   1% /run  </span><br><span class="line">  tmpfs                  994M     0  994M   0% /sys/fs/cgroup  </span><br><span class="line">  /dev/sdb1              2.0G   33M  2.0G   2% /newFS  </span><br><span class="line">  /dev/sr0               3.5G  3.5G     0 100% /media/cdrom  </span><br><span class="line">  /dev/sda1              497M  119M  379M  24% /boot  </span><br><span class="line">  /dev/md0                40G   49M   38G   1% /RAID  </span><br></pre></td></tr></table></figure><h5 id="4-查看-RAID-10-信息"><a href="#4-查看-RAID-10-信息" class="headerlink" title="4) 查看 RAID 10 信息:"></a>4) 查看 RAID 10 信息:</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mdadm -D /dev/md0 　# 查看 /dev/md0 磁盘阵列详细信息</span></span><br><span class="line">  /dev/md0:  </span><br><span class="line">        Version : 1.2  </span><br><span class="line">  Creation Time : Mon Jul  9 20:07:08 2018  </span><br><span class="line">     Raid Level : raid10  </span><br><span class="line">     Array Size : 41909248 (39.97 GiB 42.92 GB)  </span><br><span class="line">  Used Dev Size : 20954624 (19.98 GiB 21.46 GB)  </span><br><span class="line">   Raid Devices : 4  </span><br><span class="line">  Total Devices : 4  </span><br><span class="line">    Persistence : Superblock is persistent  </span><br><span class="line">    </span><br><span class="line">    Update Time : Mon Jul  9 20:10:35 2018  </span><br><span class="line">          State : active, resyncing   </span><br><span class="line">  Active Devices : 4  </span><br><span class="line">  Working Devices : 4  </span><br><span class="line">  Failed Devices : 0  </span><br><span class="line">  Spare Devices : 0  </span><br><span class="line"></span><br><span class="line">         Layout : near=2  </span><br><span class="line">     Chunk Size : 512K  </span><br><span class="line"></span><br><span class="line">  Resync Status : 96% complete  </span><br><span class="line"></span><br><span class="line">           Name : xy.com:0  (<span class="built_in">local</span> to host xy.com)  </span><br><span class="line">           UUID : 111c244f:e080b0c1:3316b6f2:986fa663  </span><br><span class="line">         Events : 16  </span><br><span class="line"></span><br><span class="line">    Number   Major   Minor   RaidDevice State  </span><br><span class="line">       0       8       32        0      active sync   /dev/sdc  </span><br><span class="line">       1       8       48        1      active sync   /dev/sdd  </span><br><span class="line">       2       8       64        2      active sync   /dev/sde  </span><br><span class="line">       3       8       80        3      active sync   /dev/sdf  </span><br></pre></td></tr></table></figure><h4 id="12-2-模拟损坏磁盘阵列及修复："><a href="#12-2-模拟损坏磁盘阵列及修复：" class="headerlink" title="12.2 模拟损坏磁盘阵列及修复："></a>12.2 模拟损坏磁盘阵列及修复：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]# mdadm &#x2F;dev&#x2F;md0 -f &#x2F;dev&#x2F;sdc　# -f 模拟设备损坏 </span><br><span class="line">  mdadm: set &#x2F;dev&#x2F;sdc faulty in &#x2F;dev&#x2F;md0   </span><br><span class="line">[root@xy ~]# mdadm -D &#x2F;dev&#x2F;md0</span><br><span class="line">  &#x2F;dev&#x2F;md0:  </span><br><span class="line">          Version : 1.2  </span><br><span class="line">    Creation Time : Mon Jul  9 20:07:08 2018  </span><br><span class="line">       Raid Level : raid10  </span><br><span class="line">       Array Size : 41909248 (39.97 GiB 42.92 GB)  </span><br><span class="line">    Used Dev Size : 20954624 (19.98 GiB 21.46 GB)  </span><br><span class="line">     Raid Devices : 4  </span><br><span class="line">    Total Devices : 4  </span><br><span class="line">      Persistence : Superblock is persistent  </span><br><span class="line"></span><br><span class="line">      Update Time : Mon Jul  9 20:23:34 2018  </span><br><span class="line">            State : clean, degraded   </span><br><span class="line">   Active Devices : 3  </span><br><span class="line">  Working Devices : 3  </span><br><span class="line">   Failed Devices : 1  </span><br><span class="line">    Spare Devices : 0  </span><br><span class="line"></span><br><span class="line">           Layout : near&#x3D;2  </span><br><span class="line">       Chunk Size : 512K  </span><br><span class="line"></span><br><span class="line">             Name : xy.com:0  (local to host xy.com)  </span><br><span class="line">             UUID : 111c244f:e080b0c1:3316b6f2:986fa663  </span><br><span class="line">           Events : 21  </span><br><span class="line"></span><br><span class="line">      Number   Major   Minor   RaidDevice State </span><br><span class="line">         0       0        0        0      removed  </span><br><span class="line">         1       8       48        1      active sync   &#x2F;dev&#x2F;sdd  </span><br><span class="line">         2       8       64        2      active sync   &#x2F;dev&#x2F;sde  </span><br><span class="line">         3       8       80        3      active sync   &#x2F;dev&#x2F;sdf  </span><br><span class="line"></span><br><span class="line">         0       8       32        -      faulty   &#x2F;dev&#x2F;sdc</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># reboot  </span></span><br><span class="line">[root@xy ~]<span class="comment"># umount /dev/RAID</span></span><br><span class="line">[root@xy ~]<span class="comment"># mdadm /dev/md0 -a /dev/sdc</span></span><br><span class="line">  mdadm: added /dev/sdc  </span><br><span class="line">[root@xy ~]<span class="comment"># mdadm -D /dev/md0</span></span><br><span class="line"></span><br><span class="line">  /dev/md0:  </span><br><span class="line">          Version : 1.2  </span><br><span class="line">    Creation Time : Mon Jul  9 20:07:08 2018  </span><br><span class="line">       Raid Level : raid10  </span><br><span class="line">       Array Size : 41909248 (39.97 GiB 42.92 GB)  </span><br><span class="line">    Used Dev Size : 20954624 (19.98 GiB 21.46 GB)  </span><br><span class="line">     Raid Devices : 4  </span><br><span class="line">    Total Devices : 4  </span><br><span class="line">      Persistence : Superblock is persistent  </span><br><span class="line"></span><br><span class="line">      Update Time : Mon Jul  9 21:04:28 2018 </span><br><span class="line">            State : clean, degraded, recovering   </span><br><span class="line">   Active Devices : 3  </span><br><span class="line">  Working Devices : 4  </span><br><span class="line">   Failed Devices : 0  </span><br><span class="line">    Spare Devices : 1  </span><br><span class="line"></span><br><span class="line">           Layout : near=2  </span><br><span class="line">       Chunk Size : 512K  </span><br><span class="line"></span><br><span class="line">   Rebuild Status : 19% complete  </span><br><span class="line">   </span><br><span class="line">             Name : xy.com:0  (<span class="built_in">local</span> to host xy.com)  </span><br><span class="line">             UUID : 111c244f:e080b0c1:3316b6f2:986fa663  </span><br><span class="line">           Events : 32 </span><br><span class="line"></span><br><span class="line">      Number   Major   Minor   RaidDevice State  </span><br><span class="line">         4       8       32        0      spare rebuilding   /dev/sdc  </span><br><span class="line">         1       8       48        1      active sync   /dev/sdd  </span><br><span class="line">         2       8       64        2      active sync   /dev/sde  </span><br><span class="line">         3       8       80        3      active sync   /dev/sdf  </span><br></pre></td></tr></table></figure><h3 id="13-LVM-8e-Logical-Volume-Manager，逻辑卷管理器"><a href="#13-LVM-8e-Logical-Volume-Manager，逻辑卷管理器" class="headerlink" title="13. LVM(8e) (Logical Volume Manager，逻辑卷管理器)  "></a>13. LVM(8e) (Logical Volume Manager，逻辑卷管理器)  <a id="lvm"></a></h3><blockquote><p>在硬盘分区和文件系统之间添加了一个逻辑层,提供了一个抽象的卷组，可以把多块硬盘进行卷合并实现对硬盘分区的<strong>动态调整</strong>    </p></blockquote><ul><li>物理卷(PV) 就是真正的<strong>物理硬盘或者分区</strong>；  </li><li>卷组(VG)  将多个物理卷合起来组成卷组，组成同一个卷组的物理卷可以是同一个硬盘的不同分区，也可以是不同硬盘的不同分区，<strong>抽象为一个逻辑硬盘</strong>；  </li><li>逻辑卷(LV) 卷组是一个逻辑硬盘，硬盘分区后才可以使用，类似的，从卷组出来的分区为逻辑卷，<strong>可以抽象为分区</strong></li></ul><img src="/posts/296e7ad4/%E9%80%BB%E8%BE%91%E5%8D%B7.png" class title="[LVM图示]"><h4 id="13-1-常用LVM部署命令"><a href="#13-1-常用LVM部署命令" class="headerlink" title="13.1 常用LVM部署命令"></a>13.1 常用LVM部署命令</h4><table><thead><tr><th>项目</th><th>PV</th><th>VG</th><th>LV</th></tr></thead><tbody><tr><td>扫描</td><td>pvscan</td><td>vgscan</td><td>lvscan</td></tr><tr><td>建立</td><td>pvcreate</td><td>vgcreate</td><td>lvcreate</td></tr><tr><td>显示</td><td>pvs/pvdisplay</td><td>vgs/vgdisplay</td><td>lvs/lvdisplay</td></tr><tr><td>移除</td><td>pvremove</td><td>vgremove</td><td>lvremove</td></tr><tr><td>扩展</td><td>vgextend</td><td>vgextend</td><td>lvextend</td></tr><tr><td>缩小</td><td>vgreduce</td><td>vgreduce</td><td>lvreduce</td></tr></tbody></table><h4 id="13-2-创建LVM-PV-gt-VG-gt-LV-gt-mkfs-ext4-dev-storage-vo-gt-monut"><a href="#13-2-创建LVM-PV-gt-VG-gt-LV-gt-mkfs-ext4-dev-storage-vo-gt-monut" class="headerlink" title="13.2 创建LVM: PV -&gt; VG -&gt; LV -&gt; mkfs.ext4 /dev/storage/vo -&gt; monut"></a>13.2 创建LVM: PV -&gt; VG -&gt; LV -&gt; mkfs.ext4 /dev/storage/vo -&gt; monut</h4><h5 id="1-pvcrate-创建物理卷："><a href="#1-pvcrate-创建物理卷：" class="headerlink" title="1) pvcrate 创建物理卷："></a>1) pvcrate 创建物理卷：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># pvcreate /dev/sd&#123;c,d&#125;</span></span><br><span class="line">  Physical volume <span class="string">&quot;/dev/sdc&quot;</span> successfully created  </span><br><span class="line">  Physical volume <span class="string">&quot;/dev/sdd&quot;</span> successfully created</span><br></pre></td></tr></table></figure><h5 id="2-vgcrate-创建卷组管理："><a href="#2-vgcrate-创建卷组管理：" class="headerlink" title="2) vgcrate 创建卷组管理："></a>2) vgcrate 创建卷组管理：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vgcreate storage /dev/sd&#123;c,d&#125;  # 添加到storage卷组中 </span></span><br><span class="line">  Volume group <span class="string">&quot;storage&quot;</span> successfully created</span><br></pre></td></tr></table></figure><h5 id="3-vgdisplay-显示卷组管理："><a href="#3-vgdisplay-显示卷组管理：" class="headerlink" title="3) vgdisplay 显示卷组管理："></a>3) vgdisplay 显示卷组管理：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vgdisplay storage</span></span><br><span class="line">  --- Volume group ---  </span><br><span class="line">  VG Name               storage  </span><br><span class="line">  System ID               </span><br><span class="line">  Format                lvm2  </span><br><span class="line">  Metadata Areas        2  </span><br><span class="line">  Metadata Sequence No  1  </span><br><span class="line">  VG Access             <span class="built_in">read</span>/write  </span><br><span class="line">  VG Status             resizable  </span><br><span class="line">  MAX LV                0  </span><br><span class="line">  Cur LV                0  </span><br><span class="line">  Open LV               0  </span><br><span class="line">  Max PV                0  </span><br><span class="line">  Cur PV                2  </span><br><span class="line">  Act PV                2  </span><br><span class="line">  VG Size               39.99 GiB  </span><br><span class="line">  PE Size               4.00 MiB  <span class="comment"># -s 8M 指定PE大小  </span></span><br><span class="line">  Total PE              10238  </span><br><span class="line">  Alloc PE / Size       0 / 0    </span><br><span class="line">  Free  PE / Size       10238 / 39.99 GiB  </span><br><span class="line">  VG UUID               pjR9cJ-VoyM-TZsz-NdMb-s05a-0VQZ-wHhEBo </span><br></pre></td></tr></table></figure><h5 id="4-lvcrate-创建逻辑卷："><a href="#4-lvcrate-创建逻辑卷：" class="headerlink" title="4) lvcrate 创建逻辑卷："></a>4) lvcrate 创建逻辑卷：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># lvcreate -l 37 -n vo storage　# 从卷组里边 创建逻辑卷 lvcreate  </span></span><br><span class="line">  Logical volume <span class="string">&quot;vo&quot;</span> created   </span><br><span class="line">  -L 以容量为单位(-L 15G)  </span><br><span class="line">  -l 以PE（4MB）为单位</span><br></pre></td></tr></table></figure><h5 id="5-lvdisplay-显示逻辑卷："><a href="#5-lvdisplay-显示逻辑卷：" class="headerlink" title="5) lvdisplay 显示逻辑卷："></a>5) lvdisplay 显示逻辑卷：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># lvdisplay </span></span><br><span class="line">  --- Logical volume ---  </span><br><span class="line">  LV Path                /dev/storage/vo  </span><br><span class="line">  LV Name                vo  </span><br><span class="line">  VG Name                storage  </span><br><span class="line">  LV UUID                bDRxSW-f9X3-KkjE-UPJL-wsrj-2zXm-pCNpcq  </span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write  </span><br><span class="line">  LV Creation host, time xy.com, 2018-07-10 10:03:43 +0800  </span><br><span class="line">  LV Status              available  </span><br><span class="line">  open                 0  </span><br><span class="line">  LV Size                148.00 MiB  </span><br><span class="line">  Current LE             37  </span><br><span class="line">  Segments               1  </span><br><span class="line">  Allocation             inherit  </span><br><span class="line">  Read ahead sectors     auto  </span><br><span class="line">  currently <span class="built_in">set</span> to     8192  </span><br><span class="line">  Block device           253:2  </span><br></pre></td></tr></table></figure><h5 id="6-格式化逻辑卷："><a href="#6-格式化逻辑卷：" class="headerlink" title="6) 格式化逻辑卷："></a>6) 格式化逻辑卷：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mkfs.ext4 /dev/storage/vo</span></span><br><span class="line">[root@xy ~]<span class="comment"># mke2fs -j /dev/storage/vo</span></span><br></pre></td></tr></table></figure><h5 id="7-挂载使用逻辑卷："><a href="#7-挂载使用逻辑卷：" class="headerlink" title="7) 挂载使用逻辑卷："></a>7) 挂载使用逻辑卷：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mkdir /LVM </span></span><br><span class="line">[root@xy ~]<span class="comment"># mount /dev/storage/vo /LVM/</span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/fstab  </span></span><br><span class="line">  /dev/storage/vo              /LVM         ext4          defaults   0 0</span><br></pre></td></tr></table></figure><h5 id="8-扩容"><a href="#8-扩容" class="headerlink" title="8) 扩容"></a>8) 扩容</h5><p><strong>外加磁盘</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># fdisk t 8e</span></span><br><span class="line">[root@xy ~]<span class="comment"># mkfs.ext4 /dev/sdb1  # 不用分区也可以</span></span><br><span class="line">---</span><br><span class="line">[root@xy ~]<span class="comment"># pvcreate /dev/sdb1</span></span><br><span class="line">[root@xy ~]<span class="comment"># vgextend VolGroup /dev/sdb1</span></span><br><span class="line">[root@xy ~]<span class="comment"># lvextend -L +20G /dev/volGroup/VolGroup-lv_root</span></span><br><span class="line">[root@xy ~]<span class="comment"># resize2fs /dev/volGroup/VolGroup-lv_root</span></span><br></pre></td></tr></table></figure><p><strong>把其它分区分给空间不足的</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># umount /home   # 25G</span></span><br><span class="line">[root@xy ~]<span class="comment"># e2fsck -f /dev/volGroup/VolGroup-lv_home</span></span><br><span class="line">[root@xy ~]<span class="comment"># resize2fs -p /dev/volGroup/VolGroup-lv_home 10G   # xfs格式用xfs_growfs</span></span><br><span class="line">---</span><br><span class="line">[root@xy ~]<span class="comment"># mount /home</span></span><br><span class="line">[root@xy ~]<span class="comment"># lvreduce -L -15G /dev/volGroup/VolGroup-lv_home</span></span><br><span class="line">[root@xy ~]<span class="comment"># lvextend -L +15G 或 lvextend -l +100%FREE /dev/volGroup/VolGroup-lv_root</span></span><br><span class="line">[root@xy ~]<span class="comment"># resize2fs -p /dev/volGroup/VolGroup-lv_root</span></span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># fuser -m -v /home</span></span><br><span class="line">[root@xy ~]<span class="comment"># kill -9 PID</span></span><br><span class="line"><span class="comment"># 建议保留Free PE／SIZE 一点空间，不要全用上；</span></span><br></pre></td></tr></table></figure><h3 id="14-逻辑卷快照-类似于虚拟机快照-特点-快照卷容量必须等同于逻辑卷容量-快照卷是一次性的-执行后会立即自动删除"><a href="#14-逻辑卷快照-类似于虚拟机快照-特点-快照卷容量必须等同于逻辑卷容量-快照卷是一次性的-执行后会立即自动删除" class="headerlink" title="14. 逻辑卷快照:类似于虚拟机快照, 特点:快照卷容量必须等同于逻辑卷容量; 快照卷是一次性的, 执行后会立即自动删除"></a>14. 逻辑卷快照:类似于虚拟机快照, 特点:快照卷容量必须等同于逻辑卷容量; 快照卷是一次性的, 执行后会立即自动删除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vgdisplay</span></span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               storage  </span><br><span class="line">  System ID             </span><br><span class="line">  Format                lvm2 </span><br><span class="line">  ...</span><br><span class="line">  Total PE              10238</span><br><span class="line">  Alloc PE / Size       37 / 148.00 MiB　<span class="comment"># PE 创建快照大小依据</span></span><br><span class="line">  Free  PE / Size       10201 / 39.85 GiB</span><br><span class="line">  VG UUID          6YZPns-qgdy-yEFx-hEZ3-bLwe-2eDd-PFEip8</span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># echo &quot;Welcome to linux&quot; &gt; /LVM/readme.txt </span></span><br><span class="line">[root@xy ~]<span class="comment"># lvcreate -L 148M -n SNAP -p r -s /dev/storage/vo 　# -s创建快照卷  </span></span><br><span class="line">  Logical volume <span class="string">&quot;SNAP&quot;</span> created</span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># lvdisplay </span></span><br><span class="line"></span><br><span class="line">  --- Logical volume ---  </span><br><span class="line">  LV Path                /dev/storage/vo  </span><br><span class="line">  LV Name                vo  </span><br><span class="line">  VG Name                storage  </span><br><span class="line">  ...  </span><br><span class="line">  LV snapshot status     <span class="built_in">source</span> of  SNAP [active]  </span><br><span class="line">  LV Status              available  </span><br><span class="line">  open                 1</span><br><span class="line">  LV Size               148.00 MiB  </span><br><span class="line">  ...</span><br><span class="line">  currently <span class="built_in">set</span> to     8192  </span><br><span class="line">  Block device           253:2  </span><br><span class="line"></span><br><span class="line">  --- Logical volume ---  </span><br><span class="line">  LV Path                /dev/storage/SNAP </span><br><span class="line">  LV Name                SNAP  </span><br><span class="line">  VG Name                storage  </span><br><span class="line">  LV UUID                dERsif-hvjx-20JJ-1BLn-dPxb-aYtw-n1zetn  </span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write  </span><br><span class="line">  LV Creation host, time xy.com, 2018-07-10 14:00:46 +0800  </span><br><span class="line">  LV snapshot status     active destination <span class="keyword">for</span> vo  </span><br><span class="line">  LV Status              available  </span><br><span class="line">  open                 0  </span><br><span class="line">  LV Size                148.00 MiB  </span><br><span class="line">  ...</span><br><span class="line">  Block device           253:3</span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># dd if=/dev/zero of=/LVM/files count=1 bs=100M</span></span><br><span class="line">[root@xy ~]<span class="comment"># mount -o /dev/storage/SNAP /mnt/SNAP  # ext4  </span></span><br><span class="line">[root@xy ~]<span class="comment"># mount -o nouuid,ro /dev/storage/SNAP /mnt/SNAP  # xfs  </span></span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># umount /LVM</span></span><br><span class="line">[root@xy ~]<span class="comment"># umount /mnt/SANP    </span></span><br><span class="line">[root@xy ~]<span class="comment"># lvconvert --merge /dev/storage/SNAP 　# 快照还原  </span></span><br><span class="line">   Merging of volume SNAP started.  </span><br><span class="line">   vo: Merged: 33.5%  </span><br><span class="line">   vo: Merged: 100.0%  </span><br><span class="line">   Merge of snapshot into logical volume vo has finished.  </span><br><span class="line">   Logical volume <span class="string">&quot;SNAP&quot;</span> successfully removed</span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># mount /dev/storage/vo /LVM/    </span></span><br><span class="line">[root@xy ~]<span class="comment"># ls /LVM/  </span></span><br><span class="line">  lost+found  readme.txt</span><br></pre></td></tr></table></figure><h3 id="15-删除逻辑卷-LV-gt-VG-gt-PV"><a href="#15-删除逻辑卷-LV-gt-VG-gt-PV" class="headerlink" title="15. 删除逻辑卷: LV -&gt; VG -&gt; PV"></a>15. 删除逻辑卷: LV -&gt; VG -&gt; PV</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]# umount &#x2F;LVM&#x2F;</span><br><span class="line">[root@xy ~]# lvremove &#x2F;dev&#x2F;storage&#x2F;vo　# lvremove</span><br><span class="line">  Do you really want to remove active  logical volume vo? [y&#x2F;n]: y</span><br><span class="line">  Logical volume &quot;vo&quot; successfully</span><br><span class="line">  removed</span><br><span class="line">[root@xy ~]# vgremove storage</span><br><span class="line">  Volume group &quot;storage&quot; successfully removed</span><br><span class="line">[root@xy ~]# pvremove &#x2F;dev&#x2F;sdc &#x2F;dev&#x2F;sdd</span><br><span class="line">  Labels on physical volume &quot;&#x2F;dev&#x2F;sdc&quot; successfully wiped  </span><br><span class="line">  Labels on physical volume &quot;&#x2F;dev&#x2F;sdd&quot; successfully wiped</span><br></pre></td></tr></table></figure><h3 id="16-iptables-与-firewalld-防火墙-四表五链"><a href="#16-iptables-与-firewalld-防火墙-四表五链" class="headerlink" title="16. iptables 与 firewalld 防火墙(四表五链)"></a>16. iptables 与 firewalld 防火墙(四表五链)</h3><h4 id="16-1-iptables命令-参数-策略规则链-动作-："><a href="#16-1-iptables命令-参数-策略规则链-动作-：" class="headerlink" title="16.1 iptables命令  参数 + 策略规则链 + 动作 ："></a>16.1 iptables命令  参数 + 策略规则链 + 动作 ：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iptables  [-t 表名]  选项 [链名]  [条件]  [-j 控制类型]</span><br><span class="line">1）默认filter表；</span><br><span class="line">2）默认表内所有链； </span><br><span class="line">3）选项、链名、控制类型使用大写字母，其余均为小写；</span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-P</td><td>设置默认策略   ✔</td></tr><tr><td>-F</td><td>清空规则链  ✔</td></tr><tr><td>-L</td><td>查看规则链  ✔</td></tr><tr><td>-A</td><td>在规则链的 末尾 添加新规则   ✔</td></tr><tr><td>-I num</td><td>在规则链的 头部 添加新规则    ✔</td></tr><tr><td>-D num</td><td>删除某一条规则  ✔ <code>iptables -t 表明 -D 链名 num</code></td></tr><tr><td>-s IP/MASK</td><td>匹配来源地址IP/MASK,加!表示除这个IP外</td></tr><tr><td>-d IP/MASK</td><td>匹配目标地址(多个IP用逗号隔开)</td></tr><tr><td>-i 网卡名称</td><td>匹配从这块网卡流入的数据(PREROUTING、INPUT、FORWARD)</td></tr><tr><td>-o 网卡名称</td><td>匹配从这块网卡流出的数据(FORWARD、OUTPUT、POSTROUTING)</td></tr><tr><td>-p Protocol</td><td>匹配协议,如:TCP/UDP/ICMP</td></tr><tr><td>–dport num</td><td>匹配目标端口号</td></tr><tr><td>–sport num</td><td>匹配来源端口号</td></tr><tr><td>-v</td><td>数据报文 字节数显示(信息更全) <code>iptables --line-number -vnL INPUT</code></td></tr><tr><td>-n</td><td>以数字形式显示IP地址、端口</td></tr><tr><td><code>--line-numbers</code></td><td>查看规则，显示序号   ✔</td></tr><tr><td>-N -E -X</td><td>自定义、重命名、删除自定义链</td></tr><tr><td>-m,–module</td><td>扩展模块</td></tr><tr><td>—</td><td>-m multiport –sport  用于匹配报文源端口,多个端口用逗号隔开</td></tr><tr><td>—</td><td>-m multiport –dport  用于匹配报文目的端口,多个端口用逗号隔开</td></tr><tr><td>—</td><td>-m iprange –src-range  IP范围</td></tr><tr><td>—</td><td>-m iprange –dst-range  IP范围</td></tr><tr><td>—</td><td>-m mac –macl-source  MAC地址</td></tr><tr><td>—</td><td>-m tcp –sport 用于匹配tcp协议报文源端口,用冒号定义连续端口</td></tr><tr><td>—</td><td>-m tcp –dport 用于匹配tcp协议报文目的端口,用冒号定义连续端口</td></tr><tr><td>-m state –state</td><td>连接状态</td></tr><tr><td>—</td><td>NEW,ESTABLISHED,RELATED -j ACCEPT</td></tr></tbody></table><h4 id="16-2-策略规则链-iptables-服务把用于处理或过滤流量的策略条目称为规则-多条规则可组成一个规则链-而规则链则依据数据包处理位置的不同进行分类-具体如下："><a href="#16-2-策略规则链-iptables-服务把用于处理或过滤流量的策略条目称为规则-多条规则可组成一个规则链-而规则链则依据数据包处理位置的不同进行分类-具体如下：" class="headerlink" title="16.2 策略规则链[iptables]服务把用于处理或过滤流量的策略条目称为规则,多条规则可组成一个规则链,而规则链则依据数据包处理位置的不同进行分类,具体如下："></a>16.2 策略规则链[iptables]服务把用于处理或过滤流量的策略条目称为规则,多条规则可组成一个规则链,而规则链则依据数据包处理位置的不同进行分类,具体如下：<a id="iptables"></a></h4><ul><li>报文路径: <ul><li>到本机某进程的报文（<code>PREROUTING --&gt; INPUT</code>）;</li><li>由本机转发的报文（<code>PREROUTING --&gt; FORWARD--&gt; POSTROUTING</code>）;</li><li>由本机的某进程发出报文，即响应报文（<code>OUTPUT --&gt; POSTROUTING</code>）;</li></ul></li></ul><table><thead><tr><th>四表(相同功能规则的集合)</th><th>说明</th></tr></thead><tbody><tr><td><code>raw表</code></td><td>关闭nat启用的连接追踪机制</td></tr><tr><td><code>mangle表</code></td><td>拆解报文，做出修改，重新封装功能</td></tr><tr><td><code>nat表</code></td><td>网络地址转换功能，内核模块</td></tr><tr><td><code>filter表</code></td><td>过滤功能，防火墙，内核模块</td></tr></tbody></table><hr><table><thead><tr><th>五链(钩子)</th><th>说明</th></tr></thead><tbody><tr><td><code>PREROUTING链</code></td><td>在进行路由选择前处理数据包(raw&gt;mangle&gt;nat)</td></tr><tr><td><code>INPUT链</code></td><td>处理流入数据包</td></tr><tr><td><code>OUTPUT链</code></td><td>处理流出数据包</td></tr><tr><td><code>FORWARD链</code></td><td>处理转发数据包</td></tr><tr><td><code>POSTROUTING链</code></td><td>在进行路由选择后处理数据包</td></tr></tbody></table><p><strong>-L 查看规则链</strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -L  # -L 查看规则链 Look  </span></span><br><span class="line">  Chain INPUT (policy ACCEPT)  </span><br><span class="line">  target     prot opt <span class="built_in">source</span>        destination           </span><br><span class="line">  ACCEPT     all  --  anywhere      anywhere             ctstate RELATED,ESTABLISHED  </span><br><span class="line">  ACCEPT     all  --  anywhere      anywhere              </span><br><span class="line">  INPUT_direct  all  --  anywhere   anywhere                         </span><br><span class="line">  ........省略部分输出信息........  </span><br><span class="line">[root@xy ~]<span class="comment"># iptables-save &gt; /home/User/iptables.bak         # 备份</span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables-restore &lt; /home/User/iptables.bak      # 还原</span></span><br></pre></td></tr></table></figure><p><strong>-F 清空规则链</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -F 　</span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -L  </span></span><br><span class="line">  Chain INPUT (policy ACCEPT)  </span><br><span class="line">  target     prot opt <span class="built_in">source</span>               destination   </span><br><span class="line"></span><br><span class="line">  Chain FORWARD (policy ACCEPT)  </span><br><span class="line">  target     prot opt <span class="built_in">source</span>               destination   </span><br><span class="line"></span><br><span class="line">  Chain OUTPUT (policy ACCEPT)  </span><br><span class="line">  target     prot opt <span class="built_in">source</span>               destination   </span><br><span class="line">  </span><br><span class="line">  ........省略部分输出信息........  </span><br></pre></td></tr></table></figure><p><strong>iptables -P参数默认策略 INPUT规则链 DROP动作</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -P INPUT DROP</span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -L  </span></span><br><span class="line">   Chain INPUT (policy DROP)    </span><br><span class="line">   ........省略部分输出信息........  </span><br></pre></td></tr></table></figure><p><strong>iptables -I头部添加新规则 INPUT规则链 -p icmp ACCEPT动作</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -I INPUT -p icmp -j ACCEPT</span></span><br></pre></td></tr></table></figure><p><strong>iptables -D删除某一条规则 INPUT规则链 序号</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -D INPUT 1</span></span><br></pre></td></tr></table></figure><p><strong>iptables -P默认策略 INPUT规则链 ACCEPT动作</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -P INPUT ACCEPT</span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -L</span></span><br><span class="line">  Chain INPUT (policy ACCEPT)</span><br><span class="line">  ........省略部分输出信息........</span><br></pre></td></tr></table></figure><h4 id="16-4-仅允许指定网段的主机访问本机的22端口-SSH"><a href="#16-4-仅允许指定网段的主机访问本机的22端口-SSH" class="headerlink" title="16.4 仅允许指定网段的主机访问本机的22端口 SSH"></a>16.4 仅允许指定网段的主机访问本机的22端口 SSH</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#iptables -I头部添加新规则 INPUT规则链 源IP -p tcp --dport 22 ACCEPT动作  </span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -I INPUT -s 192.168.37.0/24 -p tcp --dport 22 -j ACCEPT　　</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#iptables -A尾部添加新规则 INPUT规则链 -p tcp --dport 22 REJECT动作</span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -A INPUT -p tcp --dport 22 -j REJECT</span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -L</span></span><br><span class="line">  Chain INPUT (policy ACCEPT)  </span><br><span class="line">  target     prot opt <span class="built_in">source</span>               destination           </span><br><span class="line">  ACCEPT     tcp  --  192.168.37.0/24      anywhere             tcp dpt:ssh  </span><br><span class="line">  REJECT     tcp  --  anywhere             anywhere             tcp dpt:ssh   </span><br><span class="line">  reject-with icmp-port-unreachable  </span><br><span class="line">  ........省略部分输出信息........   </span><br><span class="line"></span><br><span class="line">[root@clientA ~]<span class="comment"># ssh 192.168.37.10　# 网段192.168.37.0/24 是可以的  </span></span><br><span class="line">[root@clientA ~]<span class="comment"># ssh 192.168.37.10　# 网段192.168.20.0/24 XXXXXXXX</span></span><br><span class="line">  Connecting to 192.168.37.10:22...</span><br><span class="line">  Could not connect to <span class="string">&#x27;192.168.37.10&#x27;</span>(port 22): Connection failed  </span><br></pre></td></tr></table></figure><h4 id="16-5-INPUT-规则链加入拒绝所有人访问本机12345端口的策略规则"><a href="#16-5-INPUT-规则链加入拒绝所有人访问本机12345端口的策略规则" class="headerlink" title="16.5 INPUT 规则链加入拒绝所有人访问本机12345端口的策略规则"></a>16.5 INPUT 规则链加入拒绝所有人访问本机12345端口的策略规则</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -I INPUT -p tcp --dport 12345 -j REJECT   </span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -I INPUT -p udp --dport 12345 -j REJECT  </span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -L</span></span><br><span class="line">  Chain INPUT (policy ACCEPT)  </span><br><span class="line">  target     prot opt <span class="built_in">source</span>               destination           </span><br><span class="line">  REJECT     udp  --  anywhere             anywhere             udp dpt:italk   </span><br><span class="line">  reject-with icmp-port-unreachable  </span><br><span class="line">  REJECT     tcp  --  anywhere             anywhere             tcp dpt:italk   </span><br><span class="line">  reject-with icmp-port-unreachable  </span><br><span class="line">  ACCEPT     tcp  --  192.168.37.0/24      anywhere             tcp dpt:ssh  </span><br><span class="line">  REJECT     tcp  --  anywhere             anywhere             tcp dpt:ssh   </span><br><span class="line">  reject-with icmp-port-unreachable  </span><br><span class="line">  ........省略部分输出信息........  </span><br></pre></td></tr></table></figure><h4 id="16-6-INPUT-规则链加入拒绝所有人访问本机1000-1024端口的策略规则"><a href="#16-6-INPUT-规则链加入拒绝所有人访问本机1000-1024端口的策略规则" class="headerlink" title="16.6 INPUT 规则链加入拒绝所有人访问本机1000:1024端口的策略规则"></a>16.6 INPUT 规则链加入拒绝所有人访问本机1000:1024端口的策略规则</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -A INPUT -p tcp --dport 1000:1024 -j REJECT</span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -A INPUT -p udp --dport 1000:1024 -j REJECT</span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -L</span></span><br><span class="line">  Chain INPUT (policy ACCEPT)  </span><br><span class="line">  target     prot opt <span class="built_in">source</span>               destination           </span><br><span class="line">  REJECT     udp  --  anywhere             anywhere             udp dpt:italk   </span><br><span class="line">  reject-with icmp-port-unreachable  </span><br><span class="line">  REJECT     tcp  --  anywhere             anywhere             tcp dpt:italk   </span><br><span class="line">  reject-with icmp-port-unreachable  </span><br><span class="line">  ACCEPT     tcp  --  192.168.37.0/24      anywhere             tcp dpt:ssh  </span><br><span class="line">  REJECT     tcp  --  anywhere             anywhere             tcp dpt:ssh   </span><br><span class="line">  ........省略部分输出信息........  </span><br></pre></td></tr></table></figure><h4 id="16-7-INPUT-规则链加入拒绝192-168-37-5访问本机80端口的策略规则"><a href="#16-7-INPUT-规则链加入拒绝192-168-37-5访问本机80端口的策略规则" class="headerlink" title="16.7 INPUT 规则链加入拒绝192.168.37.5访问本机80端口的策略规则"></a>16.7 INPUT 规则链加入拒绝192.168.37.5访问本机80端口的策略规则</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -I INPUT -p tcp -s 192.168.37.5 --dport 80 -j REJECT</span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -L</span></span><br><span class="line">  Chain INPUT (policy ACCEPT)  </span><br><span class="line">  target     prot opt <span class="built_in">source</span>               destination           </span><br><span class="line">  REJECT     tcp  --  192.168.37.5         anywhere             tcp dpt:http   </span><br><span class="line">  reject-with icmp-port-unreachable</span><br><span class="line">  ........省略部分输出信息........  </span><br><span class="line">[root@xy ~]<span class="comment"># service iptables save　 # 永久生效</span></span><br><span class="line">  iptables: Saving firewall rules to /etc/sysconfig/iptables:[  OK  ]</span><br></pre></td></tr></table></figure><h4 id="16-8-禁止源自192-168-10-0-24-网段的流量访问本机sshd服务："><a href="#16-8-禁止源自192-168-10-0-24-网段的流量访问本机sshd服务：" class="headerlink" title="16.8 禁止源自192.168.10.0/24 网段的流量访问本机sshd服务："></a>16.8 禁止源自192.168.10.0/24 网段的流量访问本机sshd服务：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -I INPUT -s 192.168.10.0/24 -p tcp --dport 22 -j REJECT  </span></span><br><span class="line">[root@xt ~]<span class="comment"># service iptables save</span></span><br></pre></td></tr></table></figure><h4 id="16-9-SNAT-amp-amp-DNAT"><a href="#16-9-SNAT-amp-amp-DNAT" class="headerlink" title="16.9 SNAT &amp;&amp; DNAT"></a>16.9 SNAT &amp;&amp; DNAT</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># modprobe ip_tables  </span></span><br><span class="line">[root@xy ~]<span class="comment"># modprobe</span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/sysctl.conf  # /proc/sys/net/ipv4/ip_forward  </span></span><br><span class="line">[root@xy ~]<span class="comment"># net.ipv4.ip_forward  = 1 </span></span><br><span class="line">[root@xy ~]<span class="comment"># sysctl -p /etc/sysctl.conf  </span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -F</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#网关服务器: eth0(192.168.1.1) eth1(218.29.30.31) </span></span><br><span class="line"><span class="comment">#局域网客户机(服务器): 192.168.1.6</span></span><br><span class="line"><span class="comment">#公网服务器(客户机): 58.63.236.45</span></span><br></pre></td></tr></table></figure><h4 id="16-10-SNAT-转换规则：内网访问外网-路由后交给SNAT"><a href="#16-10-SNAT-转换规则：内网访问外网-路由后交给SNAT" class="headerlink" title="16.10 SNAT 转换规则：内网访问外网(路由后交给SNAT)"></a>16.10 SNAT 转换规则：内网访问外网(路由后交给SNAT)</h4><img src="/posts/296e7ad4/SNAT.png" class title="[SNAT转换]">  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -t nat -A  POSTROUTING -s 192.168.1.0/24 -o eth1 -j SNAT --to-source 218.29.30.31     </span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -t nat -A  POSTROUTING -s 192.168.1.0/24 -o eth1 -j MASQUERADE  </span></span><br><span class="line">[root@xy ~]<span class="comment"># service iptables save</span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/sysconfig/iptables  </span></span><br><span class="line">[root@xy~]<span class="comment"># tcpdump -i eth0 -nn -X icmp</span></span><br></pre></td></tr></table></figure><h4 id="16-11-DNAT-转换规则：外网访问内网-路由前交给DNAT"><a href="#16-11-DNAT-转换规则：外网访问内网-路由前交给DNAT" class="headerlink" title="16.11 DNAT 转换规则：外网访问内网(路由前交给DNAT)"></a>16.11 DNAT 转换规则：外网访问内网(路由前交给DNAT)</h4><img src="/posts/296e7ad4/DNAT.png" class title="[DNAT转换]"> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -t nat -A  PREROUTING -d 218.29.30.31 -i eth1 -p tcp --dport 8080 -j DNAT --to-destination 192.168.1.6:80      </span></span><br><span class="line">[root@xy ~]<span class="comment"># service iptables save</span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables-save &gt; 1.iptables</span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables-restore &lt; 1.iptables</span></span><br></pre></td></tr></table></figure><h4 id="16-12-解决Windows访问Samba服务拒绝的方法"><a href="#16-12-解决Windows访问Samba服务拒绝的方法" class="headerlink" title="16.12 解决Windows访问Samba服务拒绝的方法:"></a>16.12 解决Windows访问Samba服务拒绝的方法:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># iptables -L --line-number -n    # 以带有序号形式查看规则</span></span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -t filter -I INPUT 7 -p udp -m multiport --dport 139,445 -j ACCEPT</span></span><br><span class="line">[root@xy ~]<span class="comment"># iptables -t filter -I INPUT 7 -p tcp -m multiport --dport 139,445 -m state --state NEW  -j ACCEPT</span></span><br></pre></td></tr></table></figure><h3 id="17-firewalld-Dynamic-Firewall-Manager-of-Linux-system-Linux动态防火墙管理器"><a href="#17-firewalld-Dynamic-Firewall-Manager-of-Linux-system-Linux动态防火墙管理器" class="headerlink" title="17 firewalld(Dynamic Firewall Manager of Linux system):Linux动态防火墙管理器 "></a>17 firewalld(Dynamic Firewall Manager of Linux system):Linux动态防火墙管理器 <a id="firewalld"></a></h3><p>管理方式:CLI(命令行界面) 与 GUI(图形用户界面)</p><h4 id="17-1-firewalld中常用的区域名及策略规则"><a href="#17-1-firewalld中常用的区域名及策略规则" class="headerlink" title="17.1 firewalld中常用的区域名及策略规则:"></a>17.1 firewalld中常用的区域名及策略规则:</h4><table><thead><tr><th>区域</th><th>默认规则策略</th></tr></thead><tbody><tr><td>trusted</td><td>允许所有数据包</td></tr><tr><td>home</td><td>拒绝流入的流量,除非与流出的流量相关;而如果流量与ssh、mdns、ipp-client、amba-client与dhcpv6-client服务相关,则允许流量</td></tr><tr><td>internal</td><td>等同于home区域</td></tr><tr><td>public</td><td>拒绝流入的流量,除非与流出的流量相关;而如果流量与ssh、dhcpv6-client服务相关,则允许流量</td></tr><tr><td>external</td><td>拒绝流入的流量,除非与流出的流量相关;而如果流量与ssh服务相关,则允许流量</td></tr><tr><td>dmz</td><td>拒绝流入的流量,除非与流出的流量相关;而如果流量与ssh服务相关,则允许流量</td></tr><tr><td>block</td><td>拒绝流入的流量,除非与流出的流量相关</td></tr><tr><td>drop</td><td>拒绝流入的流量,除非与流出的流量相</td></tr></tbody></table><h4 id="17-2-firewall-cmd-命令"><a href="#17-2-firewall-cmd-命令" class="headerlink" title="17.2 firewall-cmd 命令:"></a>17.2 firewall-cmd 命令:</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td><code>--get-default-zone</code></td><td>查询默认区域名称</td></tr><tr><td><code>--set-default-zone=&lt;区域名称&gt;</code></td><td>设置默认区域,使其永久生效</td></tr><tr><td><code>--get-zones</code></td><td>显示可用区域</td></tr><tr><td><code>--get-services</code></td><td>显示预先定义服务</td></tr><tr><td><code>--get-active-zones</code></td><td>显示当前正使用的区域与网卡名称</td></tr><tr><td><code>--add-source=</code></td><td>将源自此IP/子网流量导向某个指定区域</td></tr><tr><td><code>--remove-source=</code></td><td>不再将源自此IP/子网流量导向某个指定区域</td></tr><tr><td><code>--add-interface=&lt;网卡名称&gt;</code></td><td>将源自此网卡所有流量导向某个指定区域</td></tr><tr><td><code>--change-interface=&lt;网卡名称&gt;</code></td><td>将某个网卡与区域进行关联</td></tr><tr><td><code>--list-all</code></td><td>显示当前区域网卡配置参数/资源/端口/服务</td></tr><tr><td><code>--list-all-zones</code></td><td>显示所有区域网卡配置参数/资源/端口/服务</td></tr><tr><td><code>--add-service=&lt;服务名&gt;</code></td><td>设置默认区域允许该服务的流量</td></tr><tr><td><code>--add-port=&lt;端口号/协议&gt;</code></td><td>设置默认区域允许该端口的流量</td></tr><tr><td><code>--remove-service=&lt;服务名&gt;</code></td><td>设置默认区域不再允许该服务的流量</td></tr><tr><td><code>--remove-port=&lt;端口号/协议&gt;</code></td><td>设置默认区域不再允许该端口的流量</td></tr><tr><td><code>--reload</code></td><td>让永久生效的配置规则立即生效,覆盖当前配置规则</td></tr><tr><td><code>--panic-on</code></td><td>开启应急状况模式</td></tr><tr><td><code>--panic-off</code></td><td>关闭应急状况模式</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --get-default-zone  </span></span><br><span class="line">  public  </span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --get-zone-of-interface=eno16777736  </span></span><br><span class="line">  public  </span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --permanent --zone=external --change-interface=eno16777736    </span></span><br><span class="line">  success　<span class="comment"># 重启后生效</span></span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --get-zone-of-interface=eno16777736</span></span><br><span class="line">  external</span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --set-default-zone=public  # firewall当前服务设置为public  </span></span><br><span class="line">  success </span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --panic-on # 启动/关闭防火墙应急状况模式,阻断一切网络连接  </span></span><br><span class="line">  success  </span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --panic-off</span></span><br><span class="line">  success  </span><br></pre></td></tr></table></figure><p><strong>查询public区域是否允许请求SSH和HTTPS协议流量</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --zone=public --query-service=ssh</span></span><br><span class="line">  yes  </span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --zone=public --query-service=https</span></span><br><span class="line">  no   </span><br></pre></td></tr></table></figure><p><strong>firewalld服务中请求HTTPS协议流量设置永久允许,立即生效</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --zone=public --add-service=https</span></span><br><span class="line">  success  </span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --permanent --zone=public --add-service=https</span></span><br><span class="line">  success  </span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --reload  # 更改设置立即生效 </span></span><br><span class="line">  success  </span><br></pre></td></tr></table></figure><p><strong>firewalld服务中请求HTTP协议流量设置永久拒绝,立即生效</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --permanent --zone=public --remove-service=http # permanent</span></span><br><span class="line">  success  </span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">  success  </span><br></pre></td></tr></table></figure><p><strong>firewalld　服务中访问8080 8081端口流量策略设置允许,仅当前生效</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --zone=public --add-port=8080-8081/tcp</span></span><br><span class="line">  success  </span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --zone=public --list-ports 8080-8081/tcp  </span></span><br></pre></td></tr></table></figure><p><strong>流量转发 访问本机888端口的流量转发到22端口</strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --permanent --zone=public     --add-forward-port=port=888:proto=tcp:toport=22:toaddr=192.168.37.10</span></span><br><span class="line">[root@xy ~]<span class="comment"># firewall-cmd --reload  </span></span><br><span class="line">  success  </span><br></pre></td></tr></table></figure><p><strong>服务的ACL</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/hosts.deny</span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/host.allow</span></span><br></pre></td></tr></table></figure><h3 id="18-使用SSH服务管理远程主机"><a href="#18-使用SSH服务管理远程主机" class="headerlink" title="18. 使用SSH服务管理远程主机"></a>18. 使用SSH服务管理远程主机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># nmtui  # GUI配置网络参数</span></span><br><span class="line">[root@xy ~]<span class="comment"># cd /etc/sysconfig/network-scripts/</span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># vim ifcfg-eno16777736  </span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># systemctl restart network </span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># ping -c 4 192.168.37.10 </span></span><br><span class="line">  PING 192.168.37.10 (192.168.37.10) 56(84) bytes of data.  </span><br><span class="line">  64 bytes from 192.168.37.10: icmp_seq=1 ttl=64 time=31.3 ms  </span><br><span class="line">  --- 192.168.37.10 ping statistics ---  </span><br><span class="line">  4 packets transmitted, 4 received, 0% packet loss, time 3005ms  </span><br><span class="line">  rtt min/avg/max/mdev = 0.183/8.006/31.325/13.463 ms  </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@xy network-scripts]<span class="comment"># nmcli connection show　 # 管理Network Manager服务</span></span><br><span class="line">  NAME         UUID                                  TYPE            DEVICE        </span><br><span class="line">  eno16777736  e1fa8452-091b-429e-adce-ecea92a845c7  802-3-ethernet  eno16777736   </span><br><span class="line">[root@xy network-scripts]<span class="comment"># nmcli con show eno16777736    </span></span><br><span class="line">  connection.id:                          eno16777736  </span><br><span class="line">  connection.uuid:                        e1fa8452-091b-429e-adce-ecea92a845c7  </span><br><span class="line">  connection.interface-name:  </span><br><span class="line">  ........省略部分输出信息........  </span><br><span class="line">[root@xy ~]<span class="comment"># nmcli connection add con-name company ifname eno16777736</span></span><br><span class="line">  autoconnect   </span><br><span class="line">  no <span class="built_in">type</span> ethernet ip4 192.168.37.10/24 gw4 192.168.37.1  </span><br><span class="line">  Connection <span class="string">&#x27;company&#x27;</span> (a8b3a029-5c7b-4ec7-b519-69f6862e616f) successfully added.</span><br><span class="line">[root@xy ~]<span class="comment"># nmcli connection add con-name house type ethernet ifname eno16777736   </span></span><br><span class="line">  Connection <span class="string">&#x27;house&#x27;</span> (00a825ae-b1c2-4130-a1f6-c693de73783c) successfully added.</span><br><span class="line">[root@xy ~]<span class="comment"># nmcli connection show</span></span><br><span class="line">  NAME         UUID                                  TYPE            DEVICE        </span><br><span class="line">  house        00a825ae-b1c2-4130-a1f6-c693de73783c  802-3-ethernet  --             </span><br><span class="line">  company      a8b3a029-5c7b-4ec7-b519-69f6862e616f  802-3-ethernet  --             </span><br><span class="line">  eno16777736  e1fa8452-091b-429e-adce-ecea92a845c7  802-3-ethernet  eno16777736  </span><br><span class="line">[root@xy ~]<span class="comment"># nmcli connection up house</span></span><br><span class="line">  Connection successfully actived (D-Bus activ path: /org/freedesktop/NetworkManager/ActiveConnection/2)</span><br></pre></td></tr></table></figure><h3 id="19-绑定两块网卡"><a href="#19-绑定两块网卡" class="headerlink" title="19. 绑定两块网卡"></a>19. 绑定两块网卡</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-eno16777736</span></span><br><span class="line">  TYPE=Ethernet  </span><br><span class="line">  BOOTPROTO=none  </span><br><span class="line">  ONBOOT=yes  </span><br><span class="line">  USERCTL=no  </span><br><span class="line">  DEVICE=eno16777736   </span><br><span class="line">  MASTER=bond0  </span><br><span class="line">  SLAVE=yes  </span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-eno33554984      </span></span><br><span class="line">  TYPE=Ethernet</span><br><span class="line">  BOOTPROTO=none</span><br><span class="line">  ONBOOT=yes</span><br><span class="line">  USERCTL=no</span><br><span class="line">  DEVICE=eno16777736</span><br><span class="line">  MASTER=bond0</span><br><span class="line">  SLAVE=yes  </span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-bond0  </span></span><br><span class="line">  TYPE=Ethernet  </span><br><span class="line">  BOOTPROTO=none  </span><br><span class="line">  ONBOOT=yes  </span><br><span class="line">  USERCTL=no   </span><br><span class="line">  DEVICE=bond0  </span><br><span class="line">  IPADDR=192.168.37.10  </span><br><span class="line">  PREFIX=24  </span><br><span class="line">  DNS=192.168.37.1  </span><br><span class="line">  NM_CONTROLLED=no</span><br></pre></td></tr></table></figure><p><strong>常见网卡绑定驱动有三种模式</strong>  </p><ul><li>mode0:平衡负载模式,平时两块网卡同时工作,且自动备援,但需要在与服务器本地网卡相连的交换机设备上进行端口聚合来支持绑定技术  </li><li>mode1:自动备援模式,平时仅一块网卡工作,故障后自动替换为另外网卡  </li><li>mode6:平衡负载模式,平时两块网卡同时工作,自动备援,无须交换机设备提供辅助支持</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/modprobe.d/bond.conf　# 创建绑定网卡文件    </span></span><br><span class="line">  <span class="built_in">alias</span> bond0 bonding</span><br><span class="line">  options bond0 miiimon=100 mode=6  </span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart network  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ifconfig 　 # 正常情况下仅仅bond0网卡设备显示IP等信息  </span></span><br><span class="line">  bond0: flags=5187&lt;UP,BR0ADCAST,RUNNING,MASTER,MULTICAST&gt; mtu 1500  </span><br><span class="line">  inet 192.168.37.10 network 255.255.255.0 broadcast 192.168.37.255  </span><br><span class="line">  inet6 fe80:20c:29ff:fe9c:637d prefixlen 64 scopeid 0x20&lt;link&gt;  </span><br><span class="line">  ........省略部分信息........  </span><br><span class="line">  eno16777736: flags=5187&lt;UP,BR0ADCAST,RUNNING,MASTER,MULTICAST&gt; mtu 1500  </span><br><span class="line">  ........省略部分信息........  </span><br><span class="line">  eno33554984: flags=5187&lt;UP,BR0ADCAST,RUNNING,MASTER,MULTICAST&gt; mtu 1500  </span><br><span class="line">  ........省略部分信息........  </span><br><span class="line">[root@xy ~]<span class="comment"># ping 192.168.37.10 # 断开其中一块网卡,另一块会继续为用户提供服务</span></span><br></pre></td></tr></table></figure><h3 id="20-配置sshd服务"><a href="#20-配置sshd服务" class="headerlink" title="20. 配置sshd服务:    "></a>20. 配置sshd服务:    <a id="ssh"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/ssh/sshd_config</span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart sshd　# service sshd start </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable sshd　 # chkconfig sshd enable  </span></span><br></pre></td></tr></table></figure><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td>Port 22</td><td>sshd服务默认端口</td></tr><tr><td>ListenAddress 0.0.0.0</td><td>设定sshd服务监听的IP地址</td></tr><tr><td>Protocol 2</td><td>SSH协议的版本号</td></tr><tr><td>HostKey /etc/ssh/ssh_host_key</td><td>SSH协议的版本1,DES私钥存放位置</td></tr><tr><td>HostKey /etc/ssh/ssh_host_rsa_key</td><td>SSH协议的版本2,RSA私钥存放位置</td></tr><tr><td>HostKey /etc/ssh/ssh_host_dsa_key</td><td>SSH协议的版本2,DSA私钥存放位置</td></tr><tr><td>PermitRootLogin no</td><td>设定是否允许管理员直接登陆</td></tr><tr><td>StrictModes yes</td><td>当远程用户的私钥改变时直接拒接登陆</td></tr><tr><td>MaxAuthTries 6</td><td>最大密码尝试次数</td></tr><tr><td>MaxSessions 10</td><td>最大终端数</td></tr><tr><td>PasswordAuthentication yes</td><td>是否允许密码验证</td></tr><tr><td>PermitEmptyPasswords no</td><td>是否允许空密码登录</td></tr></tbody></table><p><strong>安全密钥验证</strong><br><em>客户端主机生成“密钥对”(非对称加密)</em>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># ssh-keygen -t rsa -b 2048  # 用此命令的 留下 私钥</span></span><br><span class="line">  Generating public/private rsa key pair. </span><br><span class="line">  Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa):　回车或设置密钥存储路径</span><br><span class="line">  Enter passphrase (empty <span class="keyword">for</span> no passphrase): 　直接按回车或设置密钥密码  </span><br><span class="line">  Enter same passphrase again: 再次按回车或设置密钥密码</span><br><span class="line">  Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.  </span><br><span class="line">  Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.  </span><br><span class="line">  The key fingerprint is:  </span><br><span class="line">  81:e1:46:ce:a2:1a:a2:45:e2:5e:46:05:9f:ce:c1:12 root@xy.com  </span><br><span class="line">  The key<span class="string">&#x27;s randomart image is:  </span></span><br><span class="line"><span class="string">  ....</span></span><br></pre></td></tr></table></figure><ul><li><p>客户端主机生成的<code>公钥</code>传送至远程主机上  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># ssh-copy-id 192.168.37.10  # ssh-copy-ip 只能拷贝公钥</span></span><br><span class="line">  Number of key(s) added: 1  </span><br><span class="line">  Now try logging into the machine, with:   <span class="string">&quot;ssh &#x27;192.168.37.10&#x27;&quot;</span>  </span><br><span class="line">  and check to make sure that only the key(s) you wanted were added.  </span><br></pre></td></tr></table></figure></li><li><p>对服务器进行设置只允许密钥验证  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/ssh/sshd_config  </span></span><br><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure></li></ul><h3 id="21-远程传输命令scp-secure-copy-基于SSH协议-Liunx主机之间"><a href="#21-远程传输命令scp-secure-copy-基于SSH协议-Liunx主机之间" class="headerlink" title="21. 远程传输命令scp(secure copy) 基于SSH协议 Liunx主机之间:  "></a>21. 远程传输命令scp(secure copy) 基于SSH协议 Liunx主机之间:  <a id="scp"></a></h3><ul><li>scp [参数] 本地文件 远程用户@远程IP地址:远程目录    上传到远程主机</li><li>scp [参数] 远程用户@远程IP地址:远程文件 本地目录    下载到本地主机<ul><li>-v         显示详细的链接进度</li><li>-P         指定远程主机的sshd端口号</li><li>-r         用于传送文件</li><li>-6         使用ipv6协议</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># echo &quot;Hello World&quot; &gt; readme.txt  </span></span><br><span class="line">[root@xy ~]<span class="comment"># scp /root/readme.txt 192.168.37.10:/home　　　　# 上传</span></span><br><span class="line">[root@xy ~]<span class="comment"># scp 192.168.37.10:/home/readme.txt /root　　　　# 下载</span></span><br></pre></td></tr></table></figure><p><strong>不间断会话服务screen</strong>  </p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-ls</td><td><strong>显示当前已经有的会话</strong></td></tr><tr><td>-r ID</td><td><strong>恢复指定会话</strong></td></tr><tr><td>Ctrl+a,d</td><td><strong>剥离当前会话</strong></td></tr><tr><td>-S</td><td><strong>创建会话窗口</strong></td></tr><tr><td>-x</td><td><strong>加入指定会话</strong></td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># screen -S backup 　 # 屏幕快速闪动进入会话  </span></span><br><span class="line">[root@xy ~]<span class="comment"># screen -ls</span></span><br><span class="line">  There is a screen on:  </span><br><span class="line">        3127.backup     (Attached)  </span><br><span class="line">1 Socket <span class="keyword">in</span> /var/run/screen/S-root.</span><br></pre></td></tr></table></figure><h3 id="22-Apache-服务部署静态网站"><a href="#22-Apache-服务部署静态网站" class="headerlink" title="22. Apache 服务部署静态网站  "></a>22. Apache 服务部署静态网站  <a id="apache"></a></h3><ul><li>Web 服务程序:IIS、Nginx、Apache  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># yum install httpd</span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl start httpd  </span></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl enable httpd</span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/httpd/conf/httpd.conf # 配置文件</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="22-1-httpd服务程序配置文件及存放位置"><a href="#22-1-httpd服务程序配置文件及存放位置" class="headerlink" title="22.1 httpd服务程序配置文件及存放位置"></a>22.1 httpd服务程序配置文件及存放位置</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>服务目录</td><td>/etc/httpd</td></tr><tr><td>主配置文件</td><td>/etc/httpd/conf/httpd.conf</td></tr><tr><td>网站数据目录DocumentRoot</td><td>/var/www/html</td></tr><tr><td>访问日志</td><td>/var/log/httpd/access_log</td></tr><tr><td>错误日志</td><td>/var/log/httpd/error_log</td></tr></tbody></table><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>ServerRoot</td><td>服务目录  ✔</td></tr><tr><td>ServerAdmin</td><td>管理员邮箱</td></tr><tr><td>User</td><td>运行服务的用户</td></tr><tr><td>Group</td><td>运行服务的用户组</td></tr><tr><td>ServerName</td><td>网站服务器的域名</td></tr><tr><td>DocumentRoot</td><td>网站数据目录  ✔</td></tr><tr><td>Directory</td><td>网站数据目录的权限</td></tr><tr><td>DirectoryIndex</td><td>默认索引页面  ✔</td></tr><tr><td>ErrorLog</td><td>错误日志文件</td></tr><tr><td>CustomLog</td><td>访问日志文件</td></tr><tr><td>Timeout</td><td>网页超时时间,默认300s</td></tr></tbody></table><blockquote><p>SELinux(Security-Enhances Linux),强制反问控制(MAC)安全子系统,三种服务配置模式<code>enforccing  peimissing  disabled</code>,当改变DocumentRoot路径后,违反了SELinux监管规则,所以在新的路径下Index.html无法访问；</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim  /etc/selinux/config　  # SELinux 配置文件路径</span></span><br><span class="line">  1  <span class="comment">#This file controls the state of SELinux on the system.  </span></span><br><span class="line">  2  <span class="comment"># SELINUX= can take one of these three values:  </span></span><br><span class="line">  3  <span class="comment">#     enforcing - SELinux security policy is enforced.   &#x27;enforce&#x27;  </span></span><br><span class="line">  4  <span class="comment">#     permissive - SELinux prints warnings instead of enforcing.  &#x27;permissive&#x27;  </span></span><br><span class="line">  5  <span class="comment">#     disabled - No SELinux policy is loaded.  &#x27;disabled SELINUX=enforcing  </span></span><br><span class="line">  6  <span class="comment"># SELINUXTYPE= can take one of these two values:  </span></span><br><span class="line">  7  <span class="comment">#     targeted - Targeted processes are protected,  </span></span><br><span class="line">  8  <span class="comment">#     minimum - Modification of targeted policy. Only selected processes are protected.   </span></span><br><span class="line">  9  <span class="comment">#     mls - Multi Level Security protection.</span></span><br></pre></td></tr></table></figure><h4 id="22-2-SELinux-安全上下文由用户段、角色段、类型段共同组成"><a href="#22-2-SELinux-安全上下文由用户段、角色段、类型段共同组成" class="headerlink" title="22.2 SELinux 安全上下文由用户段、角色段、类型段共同组成"></a>22.2 SELinux 安全上下文由用户段、角色段、类型段共同组成</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># setenforce 0   # setenforce  </span></span><br><span class="line">[root@xy ~]<span class="comment"># getenforce 　  # getenforce  </span></span><br><span class="line">  Permissive  </span><br><span class="line">[root@xy ~]<span class="comment"># setenforce 1    </span></span><br><span class="line">[root@xy ~]<span class="comment"># getenforce </span></span><br><span class="line">  Enforcing  </span><br><span class="line">[root@xy ~]<span class="comment"># ls -Zd /var/www/html/ 　# ls -Zd  用户段 角色段 类型段  </span></span><br><span class="line">  drwxr-xr-x. root root system_u:object_r:httpd_sys_content_t:s0 /var/www/html/  </span><br><span class="line">[root@xy ~]<span class="comment"># ls -Zd /home/wwwroot/</span></span><br><span class="line">  drwxr-xr-x. root root unconfined_u:object_r:home_root_t:s0 /home/wwwroot/</span><br></pre></td></tr></table></figure><h4 id="22-3-semanage-参数-选项-文件"><a href="#22-3-semanage-参数-选项-文件" class="headerlink" title="22.3 semanage [参数] [选项] [文件]"></a>22.3 semanage [参数] [选项] [文件]</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-l</td><td>用于查询</td></tr><tr><td>-a</td><td>用于添加</td></tr><tr><td>-m</td><td>用于修改</td></tr><tr><td>-d</td><td>用于删除</td></tr><tr><td>semanage fcontext -a -t</td><td>用于添加新的SELinux安全上下文✔</td></tr><tr><td>restorcon -Rv</td><td>更新安全上下文</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># semanage fcontext -a -t httpd_sys_content_t /home/wwwroot   </span></span><br><span class="line">[root@xy ~]<span class="comment"># semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/*  </span></span><br><span class="line">[root@xy ~]<span class="comment"># restorecon -Rv /home/wwwroot/    </span></span><br><span class="line">  restorecon reset /home/wwwroot context unconfined_u:object_r:home_root_t:s0-&gt;  </span><br><span class="line">  unconfined_u:object_r:httpd_sys_content_t:s0  </span><br><span class="line">  restorecon reset /home/wwwroot/index.html context   </span><br><span class="line">  unconfined_u:object_r:home_root_t:s0-&gt;unconfined_u:object_r:httpd_sys_content_t:s0</span><br></pre></td></tr></table></figure><h4 id="22-4-个人用户主页功能"><a href="#22-4-个人用户主页功能" class="headerlink" title="22.4 个人用户主页功能"></a>22.4 个人用户主页功能</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/httpd/conf.d/userdir.conf</span></span><br><span class="line">  <span class="comment">#UserDir disabled  </span></span><br><span class="line">  UserDir public_html　　24行 去掉<span class="comment">#   网站在用户家目录中保存的名称 </span></span><br><span class="line">[root@xy ~]<span class="comment"># su - xy  </span></span><br><span class="line">[xy@xy ~]$ mkdir public_html  </span><br><span class="line">[xy@xy ~]$ <span class="built_in">echo</span> <span class="string">&quot;This is xy&#x27;s website&quot;</span> &gt; public_html/index.html </span><br><span class="line">[xy@xy ~]$ chmod -Rf 755 /home/xy</span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># getsebool -a | grep http　# getsebool -a 获取安全策略  </span></span><br><span class="line">  httpd_enable_homedirs --&gt; off  </span><br><span class="line">[root@xy ~]<span class="comment"># setsebool -P httpd_enable_homedirs=on　 # setsebool -P  </span></span><br><span class="line">[root@xy ~]<span class="comment"># htpasswd -c /etc/httpd/passwd xy </span></span><br><span class="line">  New password:  </span><br><span class="line">  Re-type new password:  </span><br><span class="line">  Adding password <span class="keyword">for</span> user xy  </span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/httpd/conf.d/userdir.conf  # 31-35 </span></span><br><span class="line">  &lt;Directory <span class="string">&quot;/home/*/public_html&quot;</span>&gt;  </span><br><span class="line">     AllowOverride all  </span><br><span class="line">     authuserfile <span class="string">&quot;/etc/httpd/passwd&quot;</span>  </span><br><span class="line">     authname <span class="string">&quot;My privately website&quot;</span>  </span><br><span class="line">     authtype basic  </span><br><span class="line">     require user xy  </span><br><span class="line">  &lt;/Directory&gt;</span><br></pre></td></tr></table></figure><h4 id="22-5-虚拟主机-VPS-Virtual-Private-Server-功能"><a href="#22-5-虚拟主机-VPS-Virtual-Private-Server-功能" class="headerlink" title="22.5 虚拟主机(VPS:Virtual Private Server)功能"></a>22.5 虚拟主机(VPS:Virtual Private Server)功能</h4><p><strong>利用该功能可以把一台物理服务器分割为多个”虚拟服务器”,VPS共享物理服务器硬件</strong><br><strong>资源,Apache的VPS是基于用户请求不同IP、主机域名、端口号,实现提供多个网站同时为外部提供访问服务技术</strong>   </p><h5 id="1-基于多个IP地址-192-168-37-10-192-168-37-20-192-168-37-30"><a href="#1-基于多个IP地址-192-168-37-10-192-168-37-20-192-168-37-30" class="headerlink" title="1. 基于多个IP地址(192.168.37.10 ; 192.168.37.20 ; 192.168.37.30)"></a>1. 基于多个IP地址(192.168.37.10 ; 192.168.37.20 ; 192.168.37.30)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mkdir -p /home/wwwroot/10  </span></span><br><span class="line">[root@xy ~]<span class="comment"># echo &quot;IP:192.168.37.10&quot; &gt; /home/wwwroot/10/index.html  </span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/httpd/conf/httpd.conf       </span></span><br><span class="line">  &lt;VirtualHost 192.168.37.10&gt;  </span><br><span class="line">  &lt;DocumentRoot <span class="string">&quot;/home/wwwroot/10&quot;</span>&gt;  </span><br><span class="line">    ServerName tech.xy.com  </span><br><span class="line">  &lt;Directory <span class="string">&quot;/home/wwwroot/10&quot;</span>&gt;  </span><br><span class="line">    AllowOverride None  </span><br><span class="line">    Require all granted  </span><br><span class="line">  &lt;/Directory&gt;  </span><br><span class="line">  &lt;/VirtualHost&gt; </span><br></pre></td></tr></table></figure><h5 id="2-基于主机域名-192-168-37-10-www-xy-com-bbs-xy-com-tech-xy-com-●ˇ∀ˇ●"><a href="#2-基于主机域名-192-168-37-10-www-xy-com-bbs-xy-com-tech-xy-com-●ˇ∀ˇ●" class="headerlink" title="2. 基于主机域名(192.168.37.10 www.xy.com bbs.xy.com tech.xy.com)  (●ˇ∀ˇ●)"></a>2. 基于主机域名(192.168.37.10 <a href="http://www.xy.com/">www.xy.com</a> bbs.xy.com tech.xy.com)  (●ˇ∀ˇ●)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/hosts     </span></span><br><span class="line">  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4  </span><br><span class="line">  ::1 localhost localhost.localdomain localhost6 localhost6.localdomain6  </span><br><span class="line">  192.168.37.10 www.xy.com bbs.xy.com tech.xy.com  </span><br><span class="line">[root@xy ~]<span class="comment"># mkdir -p /home/wwwroot/www</span></span><br><span class="line">  &lt;VirtualHost 192.168.37.10&gt;  </span><br><span class="line">  DocumentRoot <span class="string">&quot;/home/wwwroot/www&quot;</span>  </span><br><span class="line">  ServerName tech.xy.com  </span><br><span class="line">  &lt;Directory <span class="string">&quot;/home/wwwroot/www&quot;</span>&gt;  </span><br><span class="line">AllowOverride None  </span><br><span class="line">Require all granted  </span><br><span class="line">  &lt;/Directory&gt;  </span><br><span class="line">  &lt;/VirtualHost&gt; </span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart httpd</span></span><br><span class="line">[root@xy ~]<span class="comment"># semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/ </span></span><br><span class="line">[root@xy ~]<span class="comment"># semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/bbs </span></span><br><span class="line">[root@xy ~]<span class="comment"># semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/bbs/*</span></span><br><span class="line">[root@xy ~]<span class="comment"># restorecon -Rv /home/wwwroot</span></span><br></pre></td></tr></table></figure><h5 id="3-基于端口号80-443-8080比较合理-测试-6111-6222"><a href="#3-基于端口号80-443-8080比较合理-测试-6111-6222" class="headerlink" title="3. 基于端口号80 443 8080比较合理  (测试:6111 6222)"></a>3. 基于端口号80 443 8080比较合理  (测试:6111 6222)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mkdir -p /home/wwwroot/6111</span></span><br><span class="line">[root@xy ~]<span class="comment"># echo &quot;port:6111&quot; &gt; /home/wwwroot/6111/index.html</span></span><br><span class="line">[root@xy ~]<span class="comment"># vim /etc/httpd/conf/httpd.conf </span></span><br><span class="line">  Listen 6111  </span><br><span class="line">    &lt;VirtualHost 192.168.37.10:6111&gt;  </span><br><span class="line">    DocumentRoot <span class="string">&quot;/home/wwwroot/6111&quot;</span>  </span><br><span class="line">    ServerName www.xy.com  </span><br><span class="line">    &lt;Directory <span class="string">&quot;/home/wwwroot/6111&quot;</span>&gt;  </span><br><span class="line">        AllowOverride None  </span><br><span class="line">        Require all granted  </span><br><span class="line">    &lt;/Directory&gt;  </span><br><span class="line">    &lt;/VirtualHost&gt;    </span><br><span class="line">[root@xy ~]<span class="comment"># semanage fcontext -a -t httpd_sys_content_t /home/wwwroot </span></span><br><span class="line">[root@xy ~]<span class="comment"># semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/6111 </span></span><br><span class="line">[root@xy ~]<span class="comment"># semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/6111/*  </span></span><br><span class="line">[root@xy ~]<span class="comment"># restorecon -Rv /home/wwwroot </span></span><br><span class="line">[root@xy ~]<span class="comment"># semanage port -l | grep http   # semanage port -l 查询端口</span></span><br><span class="line">    http_cache_port_t            tcp      8080, 8118, 8123, 10001-10010  </span><br><span class="line">    http_cache_port_t            udp      3130  </span><br><span class="line">    http_port_t                  tcp      80, 81, 443, 488, 8008, 8009, 8443, 9000  </span><br><span class="line">    pegasus_http_port_t          tcp      5988  </span><br><span class="line">    pegasus_https_port_t         tcp      5989  </span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># semanage port -a -t http_port_t -p tcp 6111  # semanage port -a -t  </span></span><br><span class="line">[root@xy ~]<span class="comment"># semanage port -l | grep http</span></span><br><span class="line">    http_cache_port_t    tcp   8080, 8118, 8123, 10001-10010  </span><br><span class="line">    http_cache_port_t    udp   3130  </span><br><span class="line">    http_port_t          tcp   6111, 80, 81, 443, 488, 8008, 8009, 8443, 9000  </span><br><span class="line">    pegasus_http_port_t  tcp   5988  </span><br><span class="line">    pegasus_https_port_t tcp   5989  </span><br><span class="line">[root@xy ~]<span class="comment"># systemctl restart httpd</span></span><br></pre></td></tr></table></figure><h4 id="22-6-构建基于HTTP的网络YUM源"><a href="#22-6-构建基于HTTP的网络YUM源" class="headerlink" title="22.6 构建基于HTTP的网络YUM源"></a>22.6 构建基于HTTP的网络YUM源</h4><ol><li>挂在光盘镜像并拷贝光盘下Packages目录所有软件包到 /var/www/html/centos;  </li><li>创建本地源，构建缓存，<code>yum install createrepo; createrepo centos/</code>;</li><li>安装httpd并<code>useradd apache -g apache</code>，重启服务并关闭防火墙;</li><li>配置网络yum源/etc/yum.repo.d/http.repo:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[base]</span><br><span class="line">name = <span class="string">&quot;CentOS7 HTTP YUM&quot;</span></span><br><span class="line">baseurl = http://192.168.37.10/centos/</span><br><span class="line">gpgcheck = 0</span><br><span class="line">enabled = 1</span><br><span class="line">[update]</span><br><span class="line">name = <span class="string">&quot;CentOS7 HTTP YUM&quot;</span></span><br><span class="line">baseurl = http://192.168.37.10/centos/</span><br><span class="line">gpgcheck = 0</span><br><span class="line">enabled = 1</span><br></pre></td></tr></table></figure></li><li>更新软件包，<code>createrepo --update centos/</code>   </li><li>同步外网YUM源reposync:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repo.d/ http://mirrors.163.com/.<span class="built_in">help</span>/CentOS7-Base-163.repo </span><br><span class="line">yum install yum-utils createrepo -y</span><br><span class="line">yum repolist</span><br><span class="line">reposync -r base -p /var/www/html/centos</span><br><span class="line">createrepo /var/www/html/centos</span><br></pre></td></tr></table></figure></li></ol><h4 id="返回目录"><a href="#返回目录" class="headerlink" title="返回目录"></a><a href="#back" target="_self">返回目录</a></h4>]]></content>
      
      
      <categories>
          
          <category> Devops, linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> Devops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础命令</title>
      <link href="/posts/4ac0a166.html"/>
      <url>/posts/4ac0a166.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-11-Linux基础命令</p><a id="more"></a><p>199 238 106</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录 "></a>目录 <a id="back"></a></h2><ul><li><a href="#mbr" target="_self">首扇区知识</a></li><li><a href="#rpm" target="_self">RPM</a></li><li><a href="#yum" target="_self">Yum</a></li><li><a href="#chkconfig" target="_self">启动模式</a></li><li><a href="#service" target="_self">管理服务</a></li><li><a href="#date" target="_self">日期命令</a></li><li><a href="#pidof" target="_self">查看进程IDpidof</a></li><li><a href="#kill" target="_self">杀死进程IDkill</a></li><li><a href="#killall" target="_self">杀死进程服务killall</a></li><li><a href="#tar" target="_self">打包压缩与搜索命令</a></li><li><a href="#director" target="_self">重定向操作</a></li><li><a href="#yumku" target="_self">配置yum库</a></li><li><a href="#shell" target="_self">Shell脚本</a></li><li><a href="#crontab" target="_self">crontab</a></li></ul><h2 id="分区方案："><a href="#分区方案：" class="headerlink" title="分区方案："></a>分区方案：</h2><h3 id="背景知识："><a href="#背景知识：" class="headerlink" title="背景知识："></a>背景知识：</h3><h4 id="硬盘建立分区"><a href="#硬盘建立分区" class="headerlink" title="硬盘建立分区"></a>硬盘建立分区</h4><ul><li>主分区-&gt; 扩展分区-&gt; 逻辑分区-&gt; 激活主分区-&gt; 格式化所有分区；</li><li>虚拟机的三种网络模式：<strong>桥接网络</strong>，<strong>NAT网络地址转换(VMnet8)**，</strong>仅主机模式(VMnet1)**；其中，主机模式仅仅与物理主机通信，不能访问外网，而其它两种可以通过物理主机进行外网的访问。</li></ul><h4 id="主引导记录-MBR-Master-Boot-Record"><a href="#主引导记录-MBR-Master-Boot-Record" class="headerlink" title="主引导记录 MBR (Master Boot Record): "></a>主引导记录 MBR (Master Boot Record): <a id="mbr"></a></h4><ul><li>硬盘由大量扇区构成，以首扇区最重要，<strong>硬盘0号(首)扇区共512B</strong>，<strong>结束符占2B</strong>，<strong>主引导记录占446B</strong>，所以<strong>分区表就只有64B</strong>，分区表记录一个分区信息需要16B，所以做多记录4个分区信息；</li><li>为了解决分区不够的问题，可将其中的分区信息指向另外一个分区，称为<strong>扩展分区(扩展分区0扇区)**，在扩展分区里划分逻辑分区，</strong>一块硬盘只能有一个扩展分区，1/2/3/4号只能给主分区，5/6开始为逻辑分区**;   </li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dd <span class="keyword">if</span>=/dev/sda of=MBR bs=1 count=64 skip=446 &amp;&amp; hexdump -C /dev/sda -n 512 <span class="comment"># 备份分区表:以字节为单位 </span></span><br><span class="line"><span class="comment"># 测试: </span></span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=/dev/sda bs=1 count=64 seek=446 &amp;&amp; dd <span class="keyword">if</span>=MBR of=/dev/sda bs=1 count=64 seek=446 &amp;&amp; sync  </span><br></pre></td></tr></table></figure><img src="/posts/4ac0a166/%E9%A6%96%E6%89%87%E5%8C%BA%E5%9B%BE%E7%A4%BA.png" class title="[首扇区图示]">       <img src="/posts/4ac0a166/%E9%80%BB%E8%BE%91%E5%88%86%E5%8C%BA.png" class title="[分区图示]"> <h4 id="Linux-下的分区方案"><a href="#Linux-下的分区方案" class="headerlink" title="Linux 下的分区方案"></a>Linux 下的分区方案</h4><table><thead><tr><th>分区</th><th>说明</th></tr></thead><tbody><tr><td>/</td><td>用于存放系统，划为主分区 ✔</td></tr><tr><td>/boot</td><td>引导分区，划为主分区，大概200M即可； ✔</td></tr><tr><td>/swap</td><td>充当虚拟内存，划为逻辑分区，大致为电脑内存； ✔</td></tr><tr><td>/home</td><td>划为逻辑分区，用于存放用户文件； ✔</td></tr><tr><td>/tmp</td><td>存放临时文件，可有可无，划为逻辑分区；</td></tr></tbody></table><img src="/posts/4ac0a166/%E5%88%86%E5%8C%BA%E6%96%B9%E6%A1%88.png" class title="[分区方案]"><h4 id="RPM-红帽软件包管理器-相当于windows-的控制面板的软件管理"><a href="#RPM-红帽软件包管理器-相当于windows-的控制面板的软件管理" class="headerlink" title="RPM:(红帽软件包管理器) 相当于windows 的控制面板的软件管理 "></a>RPM:(红帽软件包管理器) 相当于windows 的控制面板的软件管理 <a id="rpm"></a></h4><table><thead><tr><th>RPM -选项</th><th>说明</th></tr></thead><tbody><tr><td>rpm -ivh filename.rpm</td><td>-v:verbose -h:进度 安装软件✔, -i,–info</td></tr><tr><td>rpm -Uvh filename.rpm</td><td>升级</td></tr><tr><td>rpm -e filename.rpm</td><td>--nodeps 不检查依赖性 卸载软件✔, -e,–erase</td></tr><tr><td>rpm -qa | grep filename</td><td>查询所安装的包的名称✔</td></tr><tr><td>rpm -qc filename</td><td>查询所安装的包的配置文件✔</td></tr><tr><td>rpm -qd filename</td><td>查询所安装的包的帮助文件✔</td></tr><tr><td>rpm -qi filename.rpm</td><td>查询包描述信息 -p(查未安装,包全名)</td></tr><tr><td>rpm -ql filename.rpm</td><td>列出包文件信息 -p(查未安装)</td></tr><tr><td>rpm -qf filename</td><td>查询文件属于哪个包</td></tr><tr><td>rpm -V filename</td><td>验证</td></tr></tbody></table><h4 id="程序包来源"><a href="#程序包来源" class="headerlink" title="程序包来源"></a>程序包来源</h4><ul><li>Fedora-EPEL: Extra PAckages for Enterprise Linux</li><li>Rpmforge: RHEL推荐</li><li><a href="http://pkgs.org/">http://pkgs.org</a> <a href="http://rpmfind.net/">http://rpmfind.net</a> <a href="http://rpm.pbone.net/">http://rpm.pbone.net</a> <a href="https://sourceforge.net/">https://sourceforge.net</a>  </li><li><code>rpm2cpio tree</code></li><li><code>rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6</code> # 导入密钥</li><li><code>rpm2cpio Package.rpm |cpio -idv .文件绝对路径</code>  # RPM包文件提取   </li><li><code>patch -pnumber &lt;文件</code></li></ul><h4 id="Yum软件仓库-解决包的依赖性"><a href="#Yum软件仓库-解决包的依赖性" class="headerlink" title="Yum软件仓库(解决包的依赖性): "></a>Yum软件仓库(解决包的依赖性): <a id="yum"></a></h4><table><thead><tr><th>yum 选项</th><th>说明</th></tr></thead><tbody><tr><td>yum repolist all</td><td>列出软件仓库  ✔</td></tr><tr><td>yum list all/installed</td><td>列出仓库所有软件/已安装的 ✔</td></tr><tr><td>yum info 包名称</td><td>查看包信息  ✔</td></tr><tr><td>yum history</td><td>info undo redo查看历史</td></tr><tr><td>yum search Package</td><td>查寻包</td></tr><tr><td>yum install 包名称</td><td>安装包 ✔</td></tr><tr><td>yum reinstall 包名称</td><td>卸载包  ✔</td></tr><tr><td>yum update 包名称</td><td>升级包  ✔</td></tr><tr><td>yum remove 包名称</td><td>移除包 ✔</td></tr><tr><td>yum clean all</td><td>清除所有仓库缓存 ✔</td></tr><tr><td>yum check-update</td><td>检查可更新的包  ✔</td></tr><tr><td>yum grouplist</td><td>查看系统中已经安装的包组</td></tr><tr><td>yum groupinstall</td><td>包组 安装指的包组</td></tr><tr><td>yum groupremove</td><td>包组 移除指定的包组</td></tr><tr><td>yum groupinfo</td><td>包组 查询指定的包组信息</td></tr><tr><td>yum deplist httpd</td><td>列出依赖包</td></tr><tr><td>yum provides rz</td><td>查找命令rz的提供者</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BIOS-&gt; Boot Loader-&gt; 内核-&gt; 内核初始化-&gt; 启动初始化进程(systemd) ✔</span><br><span class="line"><span class="built_in">command</span> [options] [arguments]  <span class="comment"># 命令 选项 参数</span></span><br></pre></td></tr></table></figure><h4 id="启用多用户"><a href="#启用多用户" class="headerlink" title="启用多用户   "></a>启用多用户   <a id="chkconfig"></a></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># ln -sf /lib/systemd/system/multi-user.target /etc/systemd/system/default.target # 无图形模式 </span></span><br><span class="line">[root@xy ~]<span class="comment"># ln -sf /lib/systemd/system/graphical.target /etc/systemd/system/default.target # 图形模式</span></span><br></pre></td></tr></table></figure><h3 id="3-管理服务"><a href="#3-管理服务" class="headerlink" title="3. 管理服务  "></a>3. 管理服务  <a id="service"></a></h3><h4 id="3-1-RPM-包安装"><a href="#3-1-RPM-包安装" class="headerlink" title="3.1 RPM 包安装"></a>3.1 RPM 包安装</h4><ul><li><p>独立服务:</p><ul><li><p>服务启动:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/rc.d/init.d/httpd start</span><br><span class="line">service httpd start</span><br></pre></td></tr></table></figure></li><li><p>服务自启动:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --levle 2345 httpd on |off</span><br><span class="line">vim /etc/rc.d/rc.local     <span class="comment"># 添加: /etc/rc.d/init.d/httpd start</span></span><br><span class="line">ntsysv</span><br></pre></td></tr></table></figure></li></ul></li><li><p>基于xinetd 的非独立服务:</p><ul><li><p>服务启动:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/xinetd/telnet    <span class="comment"># disable = no, 重启xinetd</span></span><br></pre></td></tr></table></figure></li><li><p>服务自启动:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chkconfig httpd on|off</span><br><span class="line">ntsysv</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="3-2-源码安装"><a href="#3-2-源码安装" class="headerlink" title="3.2 源码安装"></a>3.2 源码安装</h4><blockquote><p>service 命令其实只是在<code>/etc/init.d/</code>目录中寻找是否有服务<strong>启动脚本</strong>, 通过源码安装的服务, 需要要把<strong>启动脚本</strong>软连接到此目录; <code>ln -s /usr/local/apache2/bin/apachectl /etc/init.d/httpd</code>  </p></blockquote><blockquote><p>chkconfig 需要修改<code>/etc/init.d/httpd </code>, <code>chkconfig --add apachectl</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># chkconfig: 35 86 76 </span></span><br><span class="line"><span class="comment"># 指定httpd在3和5级别能被chkconfig命令管理, 启动顺序Start 86, 关闭顺序Kill 76</span></span><br><span class="line"><span class="comment"># (顺序自定, 和系统不冲突)</span></span><br><span class="line"><span class="comment"># description: source package apache</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>System V init</th><th>systemctl</th></tr></thead><tbody><tr><td>service foo start</td><td>systemctl start foo.service</td></tr><tr><td>service foo restar</td><td>systemctl restart foo.service</td></tr><tr><td>service foo stop</td><td>systemctl stop foo.service</td></tr><tr><td>service foo reload</td><td>systemctl reload foo.service</td></tr><tr><td>service foo status</td><td>systemctl status foo.service</td></tr><tr><td>—</td><td>journalctl -xe</td></tr></tbody></table><h3 id="4-设置服务开机启动、不启动"><a href="#4-设置服务开机启动、不启动" class="headerlink" title="4. 设置服务开机启动、不启动"></a>4. 设置服务开机启动、不启动</h3><table><thead><tr><th>System V init</th><th>systemctl</th></tr></thead><tbody><tr><td>chkconfig foo on</td><td>systemctl enable foo.service</td></tr><tr><td>chkconfig foo off</td><td>systemctl disable foo.service</td></tr><tr><td>chkconfig foo list</td><td>systemctl list-unit-files –type=service</td></tr><tr><td>–level默认级别2345</td><td>—</td></tr></tbody></table><h3 id="5-重置密码操作"><a href="#5-重置密码操作" class="headerlink" title="5. 重置密码操作"></a>5. 重置密码操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/redhat-release  　　<span class="comment"># 查看redhat-realease version</span></span><br><span class="line">  linux16 追加 rd.break ctrl+x运行  </span><br><span class="line">mount -o remount, rw /sysroot  </span><br><span class="line">chroot /sysroot </span><br><span class="line">passwd</span><br><span class="line">touch /.autorelable </span><br><span class="line"><span class="built_in">exit</span> </span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="6-解决piix4-smbus-0000-00-007-3-Host-SMBus-controller-not-enabled"><a href="#6-解决piix4-smbus-0000-00-007-3-Host-SMBus-controller-not-enabled" class="headerlink" title="6. 解决piix4_smbus 0000:00:007:3:Host SMBus controller not enabled!"></a>6. 解决piix4_smbus 0000:00:007:3:Host SMBus controller not enabled!</h3><ul><li><p>modprobe</p><ul><li>modprobe MOD_NAME: 装载模块  </li><li>modprobe -r MOD_NAME: 卸载模块  </li><li>modinfo MOD_NAME: 查看模块具体信息  </li></ul></li><li><p>insmod /PATH/TO/MODULE_FILE: 装载模块</p></li><li><p>rmmod MOD_NAME</p></li><li><p>depmod /PATH/TO/MODULE_FILE</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xy Desktop]<span class="comment"># lsmod |grep i2c　　 # lsmod 查看模块  </span></span><br><span class="line">  i2c_piix4              22106  0   </span><br><span class="line">  i2c_core               40325  2 drm,i2c_piix4  </span><br><span class="line">[root@xy Desktop]<span class="comment"># vim /etc/modprobe.d/blacklist.conf    </span></span><br><span class="line">  blacklist i2c-piix4 　　　　 <span class="comment"># 加黑名单  </span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="7-常用系统工作命令"><a href="#7-常用系统工作命令" class="headerlink" title="7. 常用系统工作命令"></a>7. 常用系统工作命令</h3><h4 id="7-1-man"><a href="#7-1-man" class="headerlink" title="7.1 man"></a>7.1 man</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># whatis motd    </span></span><br><span class="line">[root@xy ~]<span class="comment"># man 5 motd　　# 帮助 n N ?   </span></span><br><span class="line">[root@xy ~]<span class="comment"># man -w issue  </span></span><br></pre></td></tr></table></figure><h4 id="7-2-echo-字符串-变量"><a href="#7-2-echo-字符串-变量" class="headerlink" title="7.2 echo  　　# 字符串 / $变量"></a>7.2 echo  　　# 字符串 / $变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># echo xy</span></span><br><span class="line">  xy  </span><br><span class="line">[root@xy ~]<span class="comment"># echo $SHELL </span></span><br><span class="line">  /bin/bash</span><br></pre></td></tr></table></figure><h4 id="7-3-date"><a href="#7-3-date" class="headerlink" title="7.3 date  "></a>7.3 date  <a id="date"></a></h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>%t</td><td>跳格</td></tr><tr><td>%H</td><td>小时(00~23)</td></tr><tr><td>%S</td><td>秒(00~59)</td></tr><tr><td>%I</td><td>小时(00~12)</td></tr><tr><td>%M</td><td>分钟(00~59)</td></tr><tr><td>%F</td><td>Year-Month-Day</td></tr><tr><td>hwclock -w / -s</td><td>以软件/硬件时间为基准, 覆盖硬件/软件时间</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># date</span></span><br><span class="line">  Thu Jul  5 22:44:59 EDT 2018  </span><br><span class="line">[root@xy ~]<span class="comment"># date &quot;+%Y-%M-%m-%d %H:%M:%S&quot;  </span></span><br><span class="line">  2018-45-07-05 22:45:56  </span><br><span class="line">[root@xy ~]<span class="comment"># date -s &quot;20180706 10:49:00&quot;   --set=STRING  </span></span><br><span class="line">  Fri Jul  6 10:49:00 EDT 2018  </span><br><span class="line">[root@xy ~]<span class="comment"># touch `date +%F`.log</span></span><br></pre></td></tr></table></figure><h5 id="CentOS-6-x-7-x"><a href="#CentOS-6-x-7-x" class="headerlink" title="CentOS 6.x  / 7.x"></a>CentOS 6.x  / 7.x</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># ntpd -p  # 时间同步  </span></span><br><span class="line">[root@xy ~]<span class="comment"># /etc/sysconfig/clock  # 修改时区  </span></span><br><span class="line">[root@xy ~]<span class="comment"># /etc/sysconfig/il8n  # 修改语言 </span></span><br><span class="line">---</span><br><span class="line">[root@xy ~]<span class="comment"># chronyc source  # 时间同步  </span></span><br><span class="line">[root@xy ~]<span class="comment"># timedatectl set-timezone Asia/Shanghai  # 修改时区  </span></span><br><span class="line">[root@xy ~]<span class="comment"># localectl set-locale LANG=zh_UTF-8  # 修改语言</span></span><br></pre></td></tr></table></figure><h4 id="7-4-wget"><a href="#7-4-wget" class="headerlink" title="7.4 wget"></a>7.4 wget</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-b</td><td>后台下载</td></tr><tr><td>-P</td><td>下载至指定目录</td></tr><tr><td>-O</td><td>指定目录并重命名</td></tr><tr><td>-c</td><td>断点续传</td></tr><tr><td>-p</td><td>下载页面搜有资源</td></tr><tr><td>-r</td><td>递归下载</td></tr><tr><td>-np</td><td>不追溯至父级</td></tr><tr><td>-k</td><td>make links in downloaded HTML point to local files</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># wget -r -p http://www.linuxprobe.com  </span></span><br><span class="line">[root@xy ~]<span class="comment"># wget -r -p -np -k http://www.linuxprobe.com</span></span><br></pre></td></tr></table></figure><h4 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-i, –include</td><td>响应头部信息,连同body</td></tr><tr><td>-I, –head</td><td>仅仅显示响应头部信息</td></tr><tr><td>-X, –request</td><td>指定请求方式</td></tr><tr><td>-v</td><td>显示响应结果</td></tr><tr><td>-u</td><td>携带用户名/密码</td></tr></tbody></table><h4 id="7-5-ps-pstree-p"><a href="#7-5-ps-pstree-p" class="headerlink" title="7.5 ps(pstree -p)"></a>7.5 ps(pstree -p)</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-a</td><td>显示所有终端下执行的进程sysV</td></tr><tr><td>-u</td><td>显示指定用户相关的进程信息sysV</td></tr><tr><td>-x</td><td>显示没有控制终端进程sysV</td></tr><tr><td>-e</td><td>显示所有进程</td></tr><tr><td>-f</td><td>额外显示UID PPID(父进程ID) C与STIME栏位</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># ps -aux  </span></span><br><span class="line">USER        PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND  </span><br><span class="line">root          1  0.8  0.3  53784  7716 ?        Ss   10:37   0:09 /usr/lib/  systetemd    </span><br><span class="line">root          2  0.0  0.0      0     0 ?        S    10:37   0:00 [kthreadd]  <span class="comment"># 内核线程    </span></span><br><span class="line">root          3  0.0  0.0      0     0 ?        S    10:37   0:00 [ksoftirqd/0]       </span><br><span class="line">root       3041  0.0  0.0 125440  1436 pts/0    R+   10:55   0:00 ps -aux   </span><br><span class="line">.......省略部分信息........ </span><br><span class="line"></span><br><span class="line">5种常见进程状态:R(运行) S(中断) D(不可中断) Z(僵死) T(停止)</span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># mpstat -P ALL; sar -P ALL # 查看多核CPU</span></span><br><span class="line">[root@xy ~]<span class="comment"># top     # 动态显示进程活动  </span></span><br><span class="line">  top - 11:00:06 up 23 min,  2 users,  load average: 0.96, 0.59, 0.53   <span class="comment"># 1min 5min 15min    </span></span><br><span class="line">  Tasks: 486 total,   1 running, 485 sleeping,   0 stopped,   0 zombie</span><br><span class="line">  %Cpu(s): 21.9 us, 11.8 sy,  0.0 ni, 66.3 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">  KiB Mem:   2035648 total,  1280152 used,   755496 free,     1084 buffers</span><br><span class="line">  KiB Swap:  2113532 total,        0 used,  2113532 free.   342864 cached Mem</span><br><span class="line">.......省略部分信息........  </span><br></pre></td></tr></table></figure><h4 id="7-7-pidof"><a href="#7-7-pidof" class="headerlink" title="7.7 pidof 　　　  "></a>7.7 pidof 　　　  <a id="pidof"></a></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># pidof sshd　　　# 查询PID值 ，pidof 服务名称 </span></span><br><span class="line">1552</span><br></pre></td></tr></table></figure><h4 id="7-8-kill-l"><a href="#7-8-kill-l" class="headerlink" title="7.8 kill -l  "></a>7.8 kill -l  <a id="kill"></a></h4><ul><li>进程间通信(IPC)：<code>共享内存；信号；Semaphore</code>；</li><li>信号：   <ul><li><code>1  SIGHUB</code>  (进程不用重启，可以重读配置文件并生效)  </li><li><code>2  SIGINT</code>  (Ctrl+c 中断)  </li><li><code>9  SIGKILL</code> (杀死进程)  </li><li><code>15 SIGTERM</code> (终止进程，默认) </li></ul></li></ul><h4 id="7-9-killall"><a href="#7-9-killall" class="headerlink" title="7.9 killall   "></a>7.9 killall   <a id="killall"></a></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># pidof httpd  # pid open file  </span></span><br><span class="line">13581 13580 13579 13578 13577 13576 </span><br><span class="line">[root@xy ~]<span class="comment"># killall httpd    　# killall 服务名称  </span></span><br><span class="line">[root@xy ~]<span class="comment"># pidof httpd</span></span><br><span class="line">[root@xy ~]<span class="comment"># kill PID　　        # kill PID号 </span></span><br></pre></td></tr></table></figure><h3 id="8-系统状态检测命令"><a href="#8-系统状态检测命令" class="headerlink" title="8. 系统状态检测命令"></a>8. 系统状态检测命令</h3><h4 id="8-1-ifconfig-ip"><a href="#8-1-ifconfig-ip" class="headerlink" title="8.1 ifconfig(ip)"></a>8.1 ifconfig(ip)</h4><blockquote><p>RedHat/CentOS: /etc/sysconfig/network-scripts<br>Debian/Ubuntu: /etc/network/interfaces    </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1&quot;</span>&gt; cat /proc/sys/net/ipv4/ip_forward  <span class="comment">#临时开启路由转发  </span></span><br><span class="line">/etc/sysctl.conf  <span class="comment">#net.ipv4.ip_forward = 0  #永久修改  sysctl -p</span></span><br><span class="line">[root@xy ~]<span class="comment"># ifconfig  </span></span><br><span class="line">eno16777736: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        ether 00:0c:29:11:26:05  txqueuelen 1000  (Ethernet)  </span><br><span class="line">        RX packets 496  bytes 46407 (45.3 KiB)  </span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0  </span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)  </span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0  </span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536  </span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0  </span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;  </span><br><span class="line">        loop  txqueuelen 0  (Local Loopback)  </span><br><span class="line">        RX packets 770  bytes 62348 (60.8 KiB)  </span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0  </span><br><span class="line">        TX packets 770  bytes 62348 (60.8 KiB)   </span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0    </span><br><span class="line">[root@xy ~]<span class="comment"># ifconfig eno16777736 IP       # 临时测试更改IP  </span></span><br><span class="line">[root@xy ~]<span class="comment"># yum install quagga -y    </span></span><br><span class="line">[root@xy ~]<span class="comment"># ifconfig eth0:1 192.168.10.131 netmask 255.255.255.0 up  # eth0:1 虚拟网络接口</span></span><br></pre></td></tr></table></figure><h4 id="8-2-uname"><a href="#8-2-uname" class="headerlink" title="8.2 uname"></a>8.2 uname</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># uname -a 　　　# 查看系统内核与版本信息    </span></span><br><span class="line">  Linux xy.com 3.10.0-123.el7.x86_64 <span class="comment">#1 SMP Mon May 5 11:16:57 EDT 2014 x86_64 x86_64 x86_64 GNU/Linux  </span></span><br><span class="line">[root@xy ~]<span class="comment"># cat /etc/redhat-release   　　　 # 系统版本详细信息文件路径  </span></span><br><span class="line">  Red Hat Enterprise Linux Server release 7.0 (Maipo)</span><br></pre></td></tr></table></figure><h4 id="8-3-uptime"><a href="#8-3-uptime" class="headerlink" title="8.3 uptime"></a>8.3 uptime</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># uptime　　　# 5min 10min15min系统负载状况 </span></span><br><span class="line">  11:08:55 up 31 min,  2 users,  load average: 0.48, 0.42, 0.46    </span><br></pre></td></tr></table></figure><h4 id="8-4-free"><a href="#8-4-free" class="headerlink" title="8.4. free"></a>8.4. free</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># free -h       　　　# 内存使用情况    </span></span><br><span class="line">             total       used       free     shared    buffers     cached  </span><br><span class="line">Mem:          1.9G       1.2G       732M       9.8M       1.1M       335M  </span><br><span class="line">-/+ buffers/cache:       919M       1.0G  </span><br><span class="line">Swap:         2.0G         0B       2.0G  </span><br></pre></td></tr></table></figure><h4 id="8-5-who"><a href="#8-5-who" class="headerlink" title="8.5 who"></a>8.5 who</h4><blockquote><p>-r 显示当前运行级别<br>console pty(物理终端) tty(虚拟终端) ttyS(串行终端) pts(伪终端)   </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># who      　　　　　# 当前登录主机用户信息</span></span><br><span class="line">xy       :0           2018-07-05 22:38 (:0)  </span><br><span class="line">xy       pts/0        2018-07-06 11:06 (:0)  </span><br></pre></td></tr></table></figure><h4 id="8-6-last-显示用户登录历史及系统重启历史"><a href="#8-6-last-显示用户登录历史及系统重启历史" class="headerlink" title="8.6 last: 显示用户登录历史及系统重启历史"></a>8.6 last: 显示用户登录历史及系统重启历史</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># last     　　　　 # /var/log/wtmp    </span></span><br><span class="line">xy       pts/0        :0               Fri Jul  6 11:06   still logged <span class="keyword">in</span>     </span><br><span class="line">xy       pts/0        :0               Thu Jul  5 22:41 - 11:06  (12:24)      </span><br><span class="line">xy       :0           :0               Thu Jul  5 22:38   still logged <span class="keyword">in</span>        </span><br><span class="line">reboot   system boot  3.10.0-123.el7.x Fri Jul  6 06:37 - 11:11  (04:33)  </span><br><span class="line">.......省略部分信息........   </span><br><span class="line"></span><br><span class="line">lastb -n      <span class="comment"># /var/log/btmp   # 显示错误的登录尝试信息  </span></span><br><span class="line">lastlog -u username           <span class="comment"># 显示每一个用户最近登录信息    </span></span><br></pre></td></tr></table></figure><h4 id="8-7-history"><a href="#8-7-history" class="headerlink" title="8.7 history"></a>8.7 history</h4><table><thead><tr><th>调用</th><th>说明</th></tr></thead><tbody><tr><td>!!</td><td>重复执行上一条</td></tr><tr><td>!n</td><td>重复执行第n条</td></tr><tr><td>!$</td><td>重复上一条命令的最后一个参数</td></tr><tr><td>!string</td><td>重复执行最后一条以该字串开头的</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># history      　　　      # 命令使用历史     </span></span><br><span class="line">[root@xy ~]<span class="comment"># history -c      　　 # clean    </span></span><br><span class="line">[root@xy ~]<span class="comment"># cat ~/.bash_history  </span></span><br><span class="line">  lsmod|grep i2c  </span><br><span class="line">  vim /etc/modprobe.d/blacklist.conf      </span><br><span class="line">  reboot  </span><br><span class="line">  lsmod|grep i2c  </span><br><span class="line">.......省略部分信息........  </span><br></pre></td></tr></table></figure><h4 id="8-8-sosreport"><a href="#8-8-sosreport" class="headerlink" title="8.8 sosreport"></a>8.8 sosreport</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># sosreport    </span></span><br><span class="line">    sosreport (version 3.0)    </span><br><span class="line">    This <span class="built_in">command</span> will collect diagnostic and configuration information from  </span><br><span class="line">    this Red Hat Enterprise Linux system and installed applications.  </span><br><span class="line">    Your sosreport has been generated and saved <span class="keyword">in</span>:  </span><br><span class="line">      /var/tmp/sosreport-xy.com-20180706113138.tar.xz</span><br></pre></td></tr></table></figure><h3 id="9-工作目录切换命令"><a href="#9-工作目录切换命令" class="headerlink" title="9. 工作目录切换命令"></a>9. 工作目录切换命令</h3><h4 id="9-1-pwd"><a href="#9-1-pwd" class="headerlink" title="9.1 pwd"></a>9.1 pwd</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># pwd          　　# 当前所处工作目录  </span></span><br><span class="line">/root</span><br></pre></td></tr></table></figure><h4 id="9-2-cd"><a href="#9-2-cd" class="headerlink" title="9.2 cd"></a>9.2 cd</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># cd /etc  </span></span><br><span class="line">[root@xy etc]<span class="comment"># cd -       　　# cd - 返回到上一次所处目录  </span></span><br><span class="line">/root  </span><br><span class="line">[root@xy ~]<span class="comment"># cd /etc  </span></span><br><span class="line">[root@xy etc]<span class="comment"># cd ~       　　# 进入当前用户的home目录  </span></span><br><span class="line">[root@xy ~]<span class="comment"># cd ..      　　  # cd .. 进入上级目录 </span></span><br><span class="line">[root@xy /]<span class="comment"># cd /etc  </span></span><br></pre></td></tr></table></figure><h4 id="9-3-ls"><a href="#9-3-ls" class="headerlink" title="9.3 ls"></a>9.3 ls</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-a</td><td>全部文件(包括隐藏文件)</td></tr><tr><td>-l</td><td>查看文件属性、大小等详细信息</td></tr><tr><td>-d</td><td>查看目录属性信息</td></tr><tr><td>-h,–human</td><td>–</td></tr><tr><td>-Z</td><td>查看安全上下文</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># ls -al   </span></span><br><span class="line">total 64  </span><br><span class="line">dr-xr-x---. 14 root root 4096 Jul  6 11:06 .   </span><br><span class="line">-rw-------.  1 root root  378 Jul  6 11:06 .bash_history  </span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># ls -ld /etc   </span></span><br><span class="line">drwxr-xr-x. 132 root root 8192 Jul  6 06:37 /etc</span><br></pre></td></tr></table></figure><h3 id="10-文本编辑命令"><a href="#10-文本编辑命令" class="headerlink" title="10. 文本编辑命令"></a>10. 文本编辑命令</h3><h4 id="10-1-cat"><a href="#10-1-cat" class="headerlink" title="10.1 cat"></a>10.1 cat</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-n</td><td>显示行号</td></tr><tr><td>-E</td><td>显示所有符号</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># cat -n initial-setup-ks.cfg     　　# 短篇文本查看 Number  </span></span><br><span class="line">  1  <span class="comment">#version=RHEL7  </span></span><br><span class="line">  2  <span class="comment"># X Window System configuration information  </span></span><br><span class="line">  3  xconfig  --startxonboot  </span><br></pre></td></tr></table></figure><h4 id="10-2-more"><a href="#10-2-more" class="headerlink" title="10.2 more"></a>10.2 more</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># more initial-setup-ks.cfg#长篇文本查看 翻滚 空格键  </span></span><br><span class="line">  1  <span class="comment">#version=RHEL7  </span></span><br><span class="line">  2  <span class="comment"># X Window System configuration information  </span></span><br><span class="line">  3  xconfig  --startxonboot   </span><br></pre></td></tr></table></figure><h4 id="10-3-head"><a href="#10-3-head" class="headerlink" title="10.3 head"></a>10.3 head</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-n</td><td>显示文本前n行</td></tr><tr><td>-c</td><td>指定获取前n字符数</td></tr><tr><td>-2</td><td>指定查看前2行</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># head -n 5 initial-setup-ks.cfg       </span></span><br><span class="line">  1  <span class="comment">#version=RHEL7  </span></span><br><span class="line">  2  <span class="comment"># X Window System configuration information</span></span><br></pre></td></tr></table></figure><h4 id="10-4-tail-默认后10行"><a href="#10-4-tail-默认后10行" class="headerlink" title="10.4 tail(默认后10行)"></a>10.4 tail(默认后10行)</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-c</td><td>指定获取后n字符数</td></tr><tr><td>-n</td><td>指定获取后n行</td></tr><tr><td>-f</td><td>查看文件尾部等待显示后续新追加内容</td></tr><tr><td>-F</td><td>同-f, 删除跟踪后会提醒</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># tail -n 5 initial-setup-ks.cfg  # tail -n 查看后10行  </span></span><br><span class="line">  @guest-agents  </span><br><span class="line">  @guest-desktop-agents     </span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># tail -f /var/log/messages　# tail -f 动态显示log信息 </span></span><br><span class="line">  Jul  6 11:51:43 xy dbus[1068]: [system] Activating via systemd: service   name=<span class="string">&#x27;net.reactivated.Fprint&#x27;</span> unit=<span class="string">&#x27;fprintd.service&#x27;</span>  </span><br><span class="line">  Jul  6 11:51:43 xy systemd: Starting Fingerprint Authentication Daemon...</span><br></pre></td></tr></table></figure><h4 id="10-3-diff"><a href="#10-3-diff" class="headerlink" title="10.3 diff"></a>10.3 diff</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@xy diff]<span class="comment"># cat diff_A.txt  </span></span><br><span class="line">  Welcom to RedHat 7  </span><br><span class="line">  RedHat certified  </span><br><span class="line">  Free Linux Lessons  </span><br><span class="line">  Professional guidance  </span><br><span class="line">  Linux Course  </span><br><span class="line">[root@xy diff]<span class="comment"># cat diff_B.txt  </span></span><br><span class="line">  Welcom tooo RedHat7  </span><br><span class="line"></span><br><span class="line">  RedHat certified  </span><br><span class="line">  Free Linux LessonS  </span><br><span class="line">  //////////...../////////  </span><br><span class="line">  Professional guidance  </span><br><span class="line">  Linux Course  </span><br><span class="line">[root@xy diff]<span class="comment"># diff --brief diff_A.txt diff_B.txt         　　# 比较文本差异  </span></span><br><span class="line">  Files diff_A.txt and diff_B.txt differ  </span><br><span class="line">[root@xy diff]<span class="comment"># diff -c -Naur diff_A.txt diff_B.txt &gt;patch.txt  </span></span><br><span class="line">  *** diff_A.txt2018-07-06 12:06:35.889958037 -0400  </span><br><span class="line">  --- diff_B.txt2018-07-06 12:10:58.818955667 -0400  </span><br><span class="line">  ***************  </span><br><span class="line">  *** 1,5 ***  </span><br><span class="line">  ! Welcom to RedHat 7  </span><br><span class="line">    RedHat certified  </span><br><span class="line">  ! Free Linux Lessons  </span><br><span class="line">    Professional guidance  </span><br><span class="line">    Linux Course  </span><br><span class="line">  --- 1,8 ----  </span><br><span class="line">  ! Welcom tooo RedHat7  </span><br><span class="line">  !   </span><br><span class="line">  !   </span><br><span class="line">    RedHat certified  </span><br><span class="line">  ! Free Linux LessonS  </span><br><span class="line">  ! //////////...../////////  </span><br><span class="line">    Professional guidance  </span><br><span class="line">    Linux Course</span><br></pre></td></tr></table></figure><h4 id="10-4-wc-统计指定文本的行数-字数-字节数-word-count"><a href="#10-4-wc-统计指定文本的行数-字数-字节数-word-count" class="headerlink" title="10.4 wc   统计指定文本的行数, 字数, 字节数 word count"></a>10.4 wc   <strong>统计指定文本的行数, 字数, 字节数 word count</strong></h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-l</td><td>只显示行数line</td></tr><tr><td>-w</td><td>只显示单词数word</td></tr><tr><td>-c</td><td>只显示字节数</td></tr><tr><td>-m</td><td>只统计数字字(节)符总数</td></tr><tr><td>-L</td><td>最长的行包含字符数</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># wc -l /etc/passwd </span></span><br><span class="line">  38 /etc/passwd  </span><br><span class="line">[root@xy ~]<span class="comment"># wc -w /etc/passwd  </span></span><br><span class="line">  66 /etc/passwd  </span><br><span class="line">[root@xy ~]<span class="comment"># wc -c /etc/passwd</span></span><br><span class="line">  1902 /etc/passwd</span><br></pre></td></tr></table></figure><h4 id="10-5-stat"><a href="#10-5-stat" class="headerlink" title="10.5 stat"></a>10.5 stat</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># stat anaconda-ks.cfg 　　# 查看文件具体存储信息与时间  </span></span><br><span class="line">    File: ‘anaconda-ks.cfg’  </span><br><span class="line">    Size: 1071      Blocks: 8          IO Block: 4096   regular file  </span><br><span class="line">  Device: fd00h/64768dInode: 68521005    Links: 1  </span><br><span class="line">  Access: (0600/-rw-------)  Uid: (    0/    root)   Gid: (    0/    root)  </span><br><span class="line">  Context: system_u:object_r:admin_home_t:s0  </span><br><span class="line">  Access: 2018-07-06 14:25:45.099882788 -0400  <span class="comment"># atime</span></span><br><span class="line">  Modify: 2018-07-06 05:36:00.000000000 -0400  <span class="comment"># mtime</span></span><br><span class="line">  Change: 2018-07-06 12:21:08.983950168 -0400  <span class="comment"># ctime</span></span><br><span class="line">  Birth: -</span><br></pre></td></tr></table></figure><h4 id="10-6-cut-提取列-字符串-不识别空格"><a href="#10-6-cut-提取列-字符串-不识别空格" class="headerlink" title="10.6 cut 提取列 字符串,不识别空格"></a>10.6 cut 提取列 字符串,不识别空格</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-d</td><td>分隔符,默认为Tab</td></tr><tr><td>-f,--filed</td><td>指定列数(1,3 1-3)</td></tr><tr><td>-c</td><td>按字符提取</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># head -n 2 /etc/passwd</span></span><br><span class="line">  root:x:0:0:root:/root:/bin/bash </span><br><span class="line">  bin:x:1:1:bin:/bin:/sbin/nologin  </span><br><span class="line">[root@xy ~]<span class="comment"># cut -d: -f1 /etc/passwd  # 按列提取文本字符</span></span><br><span class="line">  root   </span><br><span class="line">  ...    </span><br><span class="line">  sshd  </span><br><span class="line">  xy</span><br></pre></td></tr></table></figure><h4 id="10-7-tr-替换文本字符串"><a href="#10-7-tr-替换文本字符串" class="headerlink" title="10.7 tr　替换文本字符串"></a>10.7 tr　<strong>替换文本字符串</strong></h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-s</td><td>将重复出现字符串压缩为一个字符串替换</td></tr><tr><td>-d</td><td>删除出现在字符集中的所有字符</td></tr><tr><td>-c</td><td>反选</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># cat anaconda-ks.cfg | tr [a-z] [A-Z]  </span></span><br><span class="line">[root@xy ~]<span class="comment"># echo &#x27;xt.,l 1 jr#!$mn2 c*/fe3 uz4&#x27; |tr -dc [0-9]  # -d 删除 -c 取反  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ifconfig eno16777736 |head -n2 |tail -n1 |tr -dc &#x27;[0-9]. &#x27; |tr -s &#x27; &#x27;|cut -d&quot; &quot; -f2 </span></span><br><span class="line">  192.168.137.10</span><br></pre></td></tr></table></figure><h4 id="sort-取列排序"><a href="#sort-取列排序" class="headerlink" title="sort(取列排序)"></a>sort(取列排序)</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-n</td><td>按数字排序</td></tr><tr><td>-r</td><td>倒序排序</td></tr><tr><td>-t</td><td>分隔符</td></tr><tr><td>-k,--key=POSL</td><td>指定某列进行排序(默认字符)</td></tr><tr><td>-u,--unique</td><td>重复内容只排一次</td></tr><tr><td>-f</td><td>忽略大小写</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># df |grep sd | tr -s &quot; &quot; &quot;%&quot; |cut -d% -f5 |sort -nr |head -n1</span></span><br></pre></td></tr></table></figure><h4 id="uniq-相邻相同的字符"><a href="#uniq-相邻相同的字符" class="headerlink" title="uniq(相邻相同的字符)"></a>uniq(相邻相同的字符)</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-c,–count</td><td>统计每行重复出现次数</td></tr><tr><td>-d,–repeated</td><td>统计重复过的行(交)</td></tr><tr><td>-u,–unique</td><td>显示不曾重复的行(并)</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># cut -d&quot; &quot; -f1 /var/log/httpd/access_log |sort |uniq -c |sort -nr # 统计客户端访问IP次数  </span></span><br><span class="line">[root@xy ~]<span class="comment"># cat f1 f2 | sort |uniq -d # 交集  </span></span><br><span class="line">[root@xy ~]<span class="comment"># grep -f f1 f2             # 交集  </span></span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># cat f1 f2| sort |uniq -u  # 不同</span></span><br><span class="line">[root@xy ~]<span class="comment"># cat f1 f2 |sort -u        # 并集</span></span><br></pre></td></tr></table></figure><h3 id="11-文件目录管理命令"><a href="#11-文件目录管理命令" class="headerlink" title="11. 文件目录管理命令"></a>11. 文件目录管理命令</h3><h4 id="11-1-touch"><a href="#11-1-touch" class="headerlink" title="11.1 touch"></a>11.1 touch</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-a</td><td>仅仅修改读取时间atime</td></tr><tr><td>-m</td><td>仅仅修改修改时间mtime</td></tr><tr><td>-d</td><td>都修改</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># ls -l anaconda-ks.cfg  </span></span><br><span class="line">  -rw-------. 1 root root 1024 Jul  6 05:36 anaconda-ks.cfg  </span><br><span class="line">[root@xy ~]<span class="comment"># echo &quot;Visit the LinuxProbe.com to learn linux skills&quot; &gt;&gt;anaconda-ks  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ls -l anaconda-ks.cfg </span></span><br><span class="line">  -rw-------. 1 root root 1071 Jul  6 12:18 anaconda-ks.cfg  </span><br><span class="line">[root@xy ~]<span class="comment"># touch -d &quot;2018-07-06 05:36&quot; anaconda-ks.cfg   </span></span><br><span class="line">[root@xy ~]<span class="comment"># ls -l anaconda-ks.cfg   </span></span><br><span class="line">  -rw-------. 1 root root 1071 Jul  6 05:36 anaconda-ks.cfg</span><br></pre></td></tr></table></figure><h4 id="11-2-mkdir"><a href="#11-2-mkdir" class="headerlink" title="11.2 mkdir"></a>11.2 mkdir</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># cd /tmp </span></span><br><span class="line">[root@xy tmp]<span class="comment"># mkdir diff  </span></span><br><span class="line">[root@xy tmp]<span class="comment"># cd diff    </span></span><br><span class="line">[root@xy diff]<span class="comment"># mkdir -p a/b/c/d/e 　　　 # 递归创建目录  </span></span><br><span class="line">[root@xy ~] mkdir mkdir -p base/&#123;<span class="built_in">cd</span>,fd&#125;  <span class="comment"># 创建多个同级目录   </span></span><br><span class="line">[root@xy diff]<span class="comment"># cd a  </span></span><br><span class="line">[root@xy a]<span class="comment"># </span></span><br><span class="line">[root@xy ~]<span class="comment"># touch install.log  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ls  </span></span><br><span class="line">  anaconda-ks.cfg  Documents  initial-setup-ks.cfg  Music     Public     Videos  </span><br><span class="line">  Desktop          Downloads  install.log           Pictures  Templates  </span><br><span class="line">[root@anyue <span class="built_in">test</span>]<span class="comment"># mkdir -pv /testdir/dir1/&#123;x,y&#125;/&#123;a,b&#125;</span></span><br><span class="line">  /testdir/</span><br><span class="line">  └── dir1</span><br><span class="line">      ├── x</span><br><span class="line">      │   ├── a</span><br><span class="line">      │   └── b</span><br><span class="line">      └── y</span><br><span class="line">          ├── a</span><br><span class="line">          └── b</span><br><span class="line">[root@anyue <span class="built_in">test</span>]<span class="comment"># mkdir -pv ./testdir/dir2/&#123;x/&#123;a,b&#125;,y&#125;</span></span><br><span class="line">  ./testdir/dir2/</span><br><span class="line">  ├── x</span><br><span class="line">  │   ├── a</span><br><span class="line">  │   └── b</span><br><span class="line">  └── y</span><br><span class="line">[root@anyue <span class="built_in">test</span>]<span class="comment"># mkdir -pv ./testdir/dir&#123;3,4,5/dir&#123;6,7&#125;&#125;</span></span><br><span class="line">  mkdir: created directory ‘./testdir/dir3’  </span><br><span class="line">  mkdir: created directory ‘./testdir/dir4’  </span><br><span class="line">  mkdir: created directory ‘./testdir/dir5’  </span><br><span class="line">  mkdir: created directory ‘./testdir/dir5/dir6’  </span><br><span class="line">  mkdir: created directory ‘./testdir/dir5/dir7’  </span><br><span class="line">[root@anyue <span class="built_in">test</span>]<span class="comment"># tree ./testdir/ </span></span><br><span class="line">    </span><br><span class="line">    ./testdir/</span><br><span class="line">    ├── dir3</span><br><span class="line">    ├── dir4</span><br><span class="line">    └── dir5</span><br><span class="line">        ├── dir6</span><br><span class="line">        └── dir7</span><br></pre></td></tr></table></figure><h4 id="11-3-cp-a-r-v"><a href="#11-3-cp-a-r-v" class="headerlink" title="11.3 cp  (-a -r -v)"></a>11.3 cp  (-a -r -v)</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-a</td><td>复制目录时使用,保留链接/文件属性/并复制目录下的所有内容,等于dpR参数组合</td></tr><tr><td>-r</td><td>复制该目录下所有的子目录和文件</td></tr><tr><td>-v</td><td>显示过程</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># cp -a install.log x.log  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ls</span></span><br><span class="line">  anaconda-ks.cfg  Documents  initial-setup-ks.cfg  Music     Public     Videos  </span><br><span class="line">  Desktop          Downloads  install.log           Pictures  Templates  x.log</span><br></pre></td></tr></table></figure><h4 id="11-4-mv"><a href="#11-4-mv" class="headerlink" title="11.4 mv"></a>11.4 mv</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># mv install.log linux.log </span></span><br><span class="line">[root@xy ~]<span class="comment"># ls  </span></span><br><span class="line">  anaconda-ks.cfg  Documents  initial-setup-ks.cfg  Music     Public     Videos  </span><br><span class="line">  Desktop          Downloads  linux.log            Pictures  Templates  </span><br></pre></td></tr></table></figure><h4 id="11-5-rm"><a href="#11-5-rm" class="headerlink" title="11.5 rm"></a>11.5 rm</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># rm linux.log</span></span><br><span class="line">  rm: remove regular empty file ‘diff’? y  </span><br><span class="line">[root@xy ~]<span class="comment"># rm -f linux.log              # -f,强制删除文件或目录</span></span><br><span class="line">  anaconda-ks.cfg  Documents  initial-setup-ks.cfg  Music     Public     Videos  </span><br><span class="line">  Desktop          Downloads  Pictures              Templates  </span><br><span class="line">[root@xy ~]<span class="comment"># mkdir diff  </span></span><br><span class="line">[root@xy ~]<span class="comment"># cd diff  </span></span><br><span class="line">[root@xy diff]<span class="comment"># cd -</span></span><br><span class="line">  /root  </span><br><span class="line">[root@xy ~]<span class="comment"># rm -rf diff  # -r,递归处理，将指定目录下的所有文件与子目录一并处理</span></span><br><span class="line">[root@xy ~]<span class="comment"># ls  </span></span><br><span class="line">  anaconda-ks.cfg  Documents  initial-setup-ks.cfg  Pictures  Templates  </span><br><span class="line">  Desktop          Downloads  Music                 Public    Video</span><br></pre></td></tr></table></figure><h4 id="11-6-dd-按照指定大小和个数的数据块复制文件或转换文件"><a href="#11-6-dd-按照指定大小和个数的数据块复制文件或转换文件" class="headerlink" title="11.6 dd   按照指定大小和个数的数据块复制文件或转换文件"></a>11.6 dd   按照指定大小和个数的数据块复制文件或转换文件</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>if</td><td>输入文件名称</td></tr><tr><td>of</td><td>输出文件名称</td></tr><tr><td>bs</td><td>设置块大小</td></tr><tr><td>count</td><td>设置复制块的个数</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># dd if=/dev/zero of=10_file bs=10M count=1</span></span><br><span class="line">[root@xy ~]<span class="comment"># dd if=/dev/cdrom of=RHEL-server-7.0-x86_64.iso  </span></span><br><span class="line">[root@xy ~]<span class="comment"># file anaconda-ks.cfg  </span></span><br><span class="line">  anaconda-ks.cfg: ASCII text</span><br></pre></td></tr></table></figure><h4 id="11-7-file"><a href="#11-7-file" class="headerlink" title="11.7 file"></a>11.7 file</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># file /dev/sda  </span></span><br><span class="line">  /dev/sda: block special </span><br></pre></td></tr></table></figure><h3 id="12-打包压缩与搜索命令"><a href="#12-打包压缩与搜索命令" class="headerlink" title="12. 打包压缩与搜索命令  "></a>12. 打包压缩与搜索命令  <a id="tar"></a></h3><h4 id="12-1-tar"><a href="#12-1-tar" class="headerlink" title="12.1 tar"></a>12.1 tar</h4><p><a href="https://www.cnblogs.com/lhm166/articles/6604852.html">tar相关命令参考1</a></p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-c</td><td>创建压缩文档</td></tr><tr><td>-x</td><td>解开压缩文档</td></tr><tr><td>-t</td><td>查看压缩包内容</td></tr><tr><td>-z</td><td>用Gzip压缩/解压, *.tar.gz</td></tr><tr><td>-j</td><td>用bzip2压缩/解压, *.tar.bz2</td></tr><tr><td>-J</td><td>用xz压缩或解压</td></tr><tr><td>-v</td><td>显示压缩/解压过程</td></tr><tr><td>-f</td><td>目标文件名</td></tr><tr><td>-p</td><td>保留原文件的权限属性</td></tr><tr><td>-P</td><td>使用绝对路径来压缩</td></tr><tr><td>-C</td><td>指定目录</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@xy tmp]<span class="comment"># tar -czvf diff.tar.gz /diff     </span></span><br><span class="line">  diff/  </span><br><span class="line">  diff/diff_A.txt  </span><br><span class="line">  diff/diff_B.txt  </span><br><span class="line">  diff/diff_B.txt~  </span><br><span class="line">  diff/diff.tar.gz  </span><br><span class="line">[root@xy diff]<span class="comment"># tar -xzvf diff.tar.gz -C /diff    # 指定解压目录 -C   </span></span><br><span class="line">[root@xy diff]<span class="comment"># tar -g /data/backup/snapshot -czvf /data/backup/2017.tar.gz *  # -g 增量备份  </span></span><br><span class="line">[root@xy diff]<span class="comment"># tar -g /data/backup/snapshot -czvf /data/backup/2017-1.tar.gz *</span></span><br></pre></td></tr></table></figure><h4 id="12-2-grep-提取行-字符串搜索常用"><a href="#12-2-grep-提取行-字符串搜索常用" class="headerlink" title="12.2 grep   # 提取行  字符串搜索常用"></a>12.2 grep   # 提取行  字符串搜索常用</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-n</td><td>显示行号</td></tr><tr><td>-i</td><td>忽略大小写</td></tr><tr><td>-v</td><td>反向选择，仅列出没有关键词的行</td></tr><tr><td>-c</td><td>仅显示找到的行数</td></tr><tr><td>-E</td><td>支持扩展正则</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># grep -n /sbin/nologin /etc/passwd</span></span><br><span class="line">  1:bin:x:1:1:bin:/bin:/sbin/nologin  </span><br><span class="line">  2:daemon:x:2:2:daemon:/sbin:/sbin/nologin  </span><br><span class="line">  3:adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br></pre></td></tr></table></figure><h4 id="12-3-find-文件搜索-实用"><a href="#12-3-find-文件搜索-实用" class="headerlink" title="12.3 find   # 文件搜索 实用"></a>12.3 find   # 文件搜索 实用</h4><img src="/posts/4ac0a166/find.jpg" class title="[find时间轴]"><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-name</td><td>匹配名称</td></tr><tr><td>-perm</td><td>匹配权限</td></tr><tr><td>-user</td><td>匹配所有者</td></tr><tr><td>-group</td><td>匹配所有组</td></tr><tr><td>-mtime -n +n</td><td>匹配修改内容的时间</td></tr><tr><td>-atime -n +n</td><td>匹配访问文件的时间</td></tr><tr><td>-nouser  -nogroup</td><td>匹配没有所有者/所有组</td></tr><tr><td>-inum n</td><td>匹配节点编号</td></tr><tr><td>-maxdepth / -mindepth level</td><td>定义搜索深度</td></tr><tr><td>-exec 后续命令 {} dst ;</td><td>后可跟进 执行的命令</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># find /etc/ -name &quot;host*&quot; -print</span></span><br><span class="line">  /etc/avahi/hosts  </span><br><span class="line">  /etc/host.conf  </span><br><span class="line">  /etc/hosts  </span><br><span class="line">  /etc/hosts.allow  </span><br><span class="line">  /etc/hosts.deny  </span><br><span class="line">  /etc/selinux/targeted/modules/active/modules/hostname.pp  </span><br><span class="line">  /etc/hostname  </span><br><span class="line">[root@xy ~]<span class="comment"># find / -perm -4000 -print    # -perm 匹配权限     </span></span><br><span class="line">  /usr/bin/fusermount  </span><br><span class="line">  /usr/bin/su  </span><br><span class="line">  /usr/bin/chage  </span><br><span class="line">  /usr/bin/gpasswd  </span><br><span class="line">  /usr/bin/newgrp  </span><br><span class="line">[root@xy ~]<span class="comment"># find /tmp \(-not -user root -a -not -name &#x27;f*&#x27;\) -ls # 属主非root且不以f开头的文件  </span></span><br><span class="line">[root@xy ~]<span class="comment"># find /etc \(-path &quot;/etc/sane.d&quot; -o -path &quot;/etc/fonts&quot;\) -a -prune -o -name &quot;*.conf&quot;   # 查找etc下除了/etc/sane.d /etc/fonts 目录的所有.conf后缀的文件  </span></span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># find / -user xy -exec cp -a &#123;&#125; /root/findresults/ \;    </span></span><br><span class="line">[root@xy ~]<span class="comment"># find linux-4.18.13/ -name &quot;*.c&quot; -exec cat &#123;&#125; \; |grep -v &quot;^$&quot; |wc -l</span></span><br></pre></td></tr></table></figure><h3 id="13-重定向操作符"><a href="#13-重定向操作符" class="headerlink" title="13. 重定向操作符 "></a>13. 重定向操作符 <a id="director"></a></h3><blockquote><p><code>标准输入重定向</code>（STDIN, 文件描述符为 0）<br><code>标准输出重定向</code>（STDOUT, 文件描述符为 1）<br><code>错误输出重定向</code>（STDERR, 文件描述符为 2）   </p></blockquote><ul><li><p>输入重定向 O-I  </p><ul><li>命令 &lt;  文件              </li><li>命令 &lt;&lt; 分界符        <strong>遇见分界符为止</strong>  </li><li>命令 &lt; 文件1 &gt; 文件2  <strong>将文件1作为命令的标准输入并将标准输出到文件2</strong>  </li></ul></li><li><p>输出重定向 I-O</p><ul><li>命令 &gt;   文件         <strong>清空原有文件</strong>  </li><li>命令 2&gt;  文件         </li><li>命令 &gt;&gt;  文件         <strong>追加到原有文件内容的后面</strong>  </li><li>命令 2&gt;&gt; 文件</li><li>命令 &gt;&gt;  文件 2&gt;&amp;1    <strong>将标准输出与错误输出共同写到文件</strong>     </li><li>命令 &amp;&gt;&gt; 文件   </li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># man bash &gt; readme.txt  </span></span><br><span class="line">[root@xy ~]<span class="comment"># echo &quot;Welcome to Linuxprobe.Com&quot; &gt; readme.txt  </span></span><br><span class="line">[root@xy ~]<span class="comment"># echo &quot;Quality linux learning materials&quot; &gt;&gt; readme.txt   </span></span><br><span class="line">[root@xy ~]<span class="comment"># cat readme.txt</span></span><br><span class="line">  Welcome to anyue967.Com  </span><br><span class="line">  Quality linux learning materials </span><br><span class="line"> </span><br><span class="line">[root@xy ~]<span class="comment"># ls -l xxxxxxx &gt; readme.txt </span></span><br><span class="line">  ls: cannot access xxxxxxx: No such file or directory  </span><br><span class="line">[root@xy ~]<span class="comment"># ls -l  xxxxxxx 2&gt; readme.txt #2的用法      </span></span><br><span class="line">[root@xy ~]<span class="comment"># cat readme.txt</span></span><br><span class="line">  ls: cannot access xxxxxxx: No such file or directory  </span><br><span class="line">[root@xy ~]<span class="comment"># wc -l &lt; readme.txt  </span></span><br><span class="line">  1      </span><br><span class="line">[root@xy ~]<span class="comment"># cat readme.txt | wc -l    </span></span><br><span class="line">  1</span><br><span class="line"></span><br><span class="line">cat &gt;&gt;README.txt &lt;&lt;EOF</span><br><span class="line">...</span><br><span class="line">EOF </span><br><span class="line"></span><br><span class="line">ls /data /noexist 2&gt;/root/out.log 1&gt;&amp;2</span><br><span class="line">ls /data/ /noexist &gt;/root/out.log 2&gt;&amp;1</span><br><span class="line">ls /data/ /noexist &amp;&gt;/root/out.log</span><br><span class="line"><span class="comment">#小测试</span></span><br><span class="line">    A.cmd &amp;&gt;/dev/null</span><br><span class="line">    B.cmd &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">    C.cmd 2&gt;&amp;1 &gt;/dev/null  ✔ <span class="comment">#屏幕显示错误信息,标准输出至/dev/null</span></span><br><span class="line">    D.cmd 2&gt;/dev/null 1&gt;&amp;2</span><br></pre></td></tr></table></figure><h3 id="14-管道符"><a href="#14-管道符" class="headerlink" title="14. 管道符 |"></a>14. 管道符 |</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># grep &quot;/sbin/nologin&quot; /etc/passwd |wc -l  </span></span><br><span class="line">  33  </span><br><span class="line">[root@xy ~]<span class="comment"># ls -l /etc/ |more</span></span><br><span class="line">  total 1396  </span><br><span class="line">  drwxr-xr-x.  3 root root       97 Jul  6 05:01 abrt  </span><br><span class="line">  -rw-r--r--.  1 root root       16 Jul  6 05:33 adjtime  </span><br><span class="line">  -rw-r--r--.  1 root root     1518 Jun  7  2013 aliases  </span><br><span class="line">  .......省略部分输出内容.......  </span><br><span class="line">[root@xy ~]<span class="comment"># echo &quot;19937100xy&quot; |passwd --stdin root    </span></span><br><span class="line">  Changing password <span class="keyword">for</span> user root.  </span><br><span class="line">  passwd: all authentication tokens updated successfully.  </span><br><span class="line">[root@xy ~]<span class="comment"># who |tee -a /test/who.log  # tee 命令</span></span><br></pre></td></tr></table></figure><h3 id="15-命令行的通配符"><a href="#15-命令行的通配符" class="headerlink" title="15. 命令行的通配符  *  []  ?"></a>15. 命令行的通配符  *  []  ?</h3><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>*</td><td>任意长度的任意字符</td></tr><tr><td>?</td><td>任意单个字符</td></tr><tr><td>[0-9]</td><td>匹配0~9之间的单个数字的字符</td></tr><tr><td>[abc]</td><td>匹配a、b、c三个字符中个任意一个</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># touch &#123;a..z&#125;.txt </span></span><br><span class="line">[root@xy ~]<span class="comment"># ls -l /dev/sda*  </span></span><br><span class="line">  brw-rw----. 1 root disk 8, 0 Jul  6  2018 /dev/sda  </span><br><span class="line">  brw-rw----. 1 root disk 8, 1 Jul  6  2018 /dev/sda1  </span><br><span class="line">  brw-rw----. 1 root disk 8, 2 Jul  6  2018 /dev/sda2  </span><br><span class="line">[root@xy ~]<span class="comment"># ls -l /dev/sda?  </span></span><br><span class="line">  brw-rw----. 1 root disk 8, 1 Jul  6  2018 /dev/sda1  </span><br><span class="line">  brw-rw----. 1 root disk 8, 2 Jul  6  2018 /dev/sda2  </span><br><span class="line">[root@xy ~]<span class="comment"># ls -l /dev/sda[0-9]  </span></span><br><span class="line">  brw-rw----. 1 root disk 8, 1 Jul  6  2018 /dev/sda1  </span><br><span class="line">  brw-rw----. 1 root disk 8, 2 Jul  6  2018 /dev/sda2</span><br></pre></td></tr></table></figure><h3 id="16-常用的转义字符"><a href="#16-常用的转义字符" class="headerlink" title="16. 常用的转义字符"></a>16. 常用的转义字符</h3><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>\</td><td>使反斜杠后的一个变量变为单纯的字符串</td></tr><tr><td>‘’</td><td>转义其中所有的变量为单纯的字符串</td></tr><tr><td>“”</td><td>保留其中的变量属性,不进行转义处理</td></tr><tr><td>``</td><td>命令执行后并返回结果</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># PRICE=5</span></span><br><span class="line">[root@xy ~]<span class="comment"># echo &quot;Price is $PRICE&quot;        　　# $ 取变量的值</span></span><br><span class="line">  Price is 5  </span><br><span class="line">[root@xy ~]<span class="comment"># echo &quot;Price is $$PRICE&quot;  </span></span><br><span class="line">  Price is 7982PRICE  </span><br><span class="line">[root@xy ~]<span class="comment"># echo &quot;Price is \$$PRICE&quot; </span></span><br><span class="line">  Price is <span class="variable">$5</span>  </span><br><span class="line">[root@xy ~]<span class="comment"># echo `uname -a` 　　              # 执行命令返回结果</span></span><br><span class="line">  Linux xy.com 3.10.0-123.el7.x86_64 <span class="comment">#1 SMP Mon May 5 11:16:57 EDT 2014 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure><h3 id="17-重要的环境变量"><a href="#17-重要的环境变量" class="headerlink" title="17. 重要的环境变量"></a>17. 重要的环境变量</h3><table><thead><tr><th>系统变量</th><th>说明</th></tr></thead><tbody><tr><td>HOME</td><td>—</td></tr><tr><td>SHELL</td><td>—</td></tr><tr><td>HISTSIZE</td><td>—</td></tr><tr><td>HISTFILESIZE</td><td>—</td></tr><tr><td>MAILL</td><td>—</td></tr><tr><td>LANG</td><td>—</td></tr><tr><td>RANDOM</td><td>—</td></tr><tr><td>PS1</td><td>—</td></tr><tr><td>PATH</td><td>—</td></tr><tr><td>EDITOR</td><td>—</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># touch xy.txt</span></span><br><span class="line">[root@xy ~]<span class="comment"># ls  </span></span><br><span class="line">  anaconda-ks.cfg  Documents  initial-setup-ks.cfg  Pictures  readme.txt  Videos  </span><br><span class="line">  Desktop          Downloads  Music                 Public    Templates   xy.txt  </span><br><span class="line">[root@xy ~]<span class="comment"># rm xy.txt  </span></span><br><span class="line">  rm: remove regular empty file ‘xy.txt’?  y  </span><br><span class="line">[root@xy ~]<span class="comment"># alias rm          　　#alias 的用法  </span></span><br><span class="line">  <span class="built_in">alias</span> rm=<span class="string">&#x27;rm -i&#x27;</span>                 <span class="comment">#inter  </span></span><br><span class="line">[root@xy ~]<span class="comment"># unalias rm          　#unalias 的用法  </span></span><br><span class="line">[root@xy ~]<span class="comment"># rm xy.txt</span></span><br><span class="line">[root@xy ~]<span class="comment"># alias rm=&#x27;mv -t /data&#x27;   #-t -target-directory</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># export # 变量名, 提升变量为全局变量   </span></span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># type -a true   #type 命令名称 内部还是外部   </span></span><br><span class="line">  <span class="literal">true</span> is a shell <span class="built_in">builtin</span>  </span><br><span class="line">  <span class="literal">true</span> is /bin/<span class="literal">true</span>  </span><br><span class="line">  <span class="literal">true</span> is /usr/bin/<span class="literal">true</span>  </span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># type true  </span></span><br><span class="line">  <span class="literal">true</span> is a shell <span class="built_in">builtin</span>  </span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># env   #env  查看所有的环境变量  </span></span><br><span class="line">[root@xy ~]<span class="comment"># echo $PATH  </span></span><br><span class="line">/usr/<span class="built_in">local</span>/bin:/usr/<span class="built_in">local</span>/sbin:/usr/bin:/usr/sbin:/bin:/sbin   </span><br><span class="line">[root@xy ~]<span class="comment"># PATH=$PATH:/root/bin      #增加PATH   </span></span><br><span class="line">[root@xy ~]<span class="comment"># echo $PATH</span></span><br><span class="line">/usr/<span class="built_in">local</span>/bin:/usr/<span class="built_in">local</span>/sbin:/usr/bin:/usr/sbin:/bin:/sbin:　<span class="comment"># /root/bin</span></span><br></pre></td></tr></table></figure><h3 id="19-配置主机名"><a href="#19-配置主机名" class="headerlink" title="19. 配置主机名"></a>19. 配置主机名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># vim /etc/hostname  </span></span><br><span class="line">  xy.com  </span><br><span class="line">[root@xy ~]<span class="comment"># hostname</span></span><br><span class="line">  xy.com</span><br></pre></td></tr></table></figure><h3 id="20-配置网卡信息"><a href="#20-配置网卡信息" class="headerlink" title="20. 配置网卡信息"></a>20. 配置网卡信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># cd /etc/sysconfig/network-scripts/  </span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># ls </span></span><br><span class="line">  ifcfg-eno16777736  　ifdown-ppp      　ifup-eth     ifup-sit    </span><br><span class="line">  ifcfg-lo             ifdown-routes    ifup-ippp    ifup-Team  </span><br><span class="line">  ifdown               ifdown-sit       ifup-ipv6    ifup-TeamPort  </span><br><span class="line">  ifdown-bnep          ifdown-Team      ifup-isdn    ifup-tunnel   </span><br><span class="line">[root@xy network-scripts]<span class="comment"># vim  ifcfg-eno16777736  　# RHEL5，6 ifcfg-eth  </span></span><br><span class="line">  TYPE=Ethernet  </span><br><span class="line">  BOOTPROTO=static  </span><br><span class="line">  NAME=eno16777736  </span><br><span class="line">  ONBOOT=yes  </span><br><span class="line">  HWADDR=00:0C:29:11:26:05  </span><br><span class="line">  IPADDR0=192.168.37.10  </span><br><span class="line">  PREFIX0=24  </span><br><span class="line">  GATEWAY0=192.168.37.1  </span><br><span class="line">  DNS1=192.168.37.1  </span><br><span class="line">[root@xy network-scripts]<span class="comment"># systemctl restart network </span></span><br><span class="line">[root@xy network-scripts]<span class="comment"># ping 192.168.37.10 </span></span><br><span class="line">[root@xy ~]<span class="comment"># dmesg |grep -i eno# 查看网卡模块  </span></span><br><span class="line">[root@xy ~]<span class="comment"># modprobe -r e1000# 卸载网卡模块  </span></span><br><span class="line">[root@xy ~]<span class="comment"># modprobe e1000# 装载网卡模块</span></span><br></pre></td></tr></table></figure><h3 id="21-配置Yum软件仓库"><a href="#21-配置Yum软件仓库" class="headerlink" title="21. 配置Yum软件仓库  "></a>21. 配置Yum软件仓库  <a id="yumku"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ]<span class="comment"># vim /etc/yum.repos.d/rhel7.repo # 创建本地yum源 </span></span><br><span class="line">  [rhel-media]  </span><br><span class="line">  name=xy  </span><br><span class="line">  baseurl=file:///media/cdromfile:ftp://file:http://file:///  </span><br><span class="line">  enabled=1   　<span class="comment"># 启用         </span></span><br><span class="line">  gpgcheck=1  </span><br><span class="line">  gpgkey=file:///media/cdrom/RPM-GPG-KEY-redhat-release  </span><br><span class="line"></span><br><span class="line">[root@xy yum.repos.d]<span class="comment"># mkdir -p /media/cdrom  </span></span><br><span class="line">[root@xy yum.repos.d]<span class="comment"># mount /dev/cdrom /media/cdrom   　# mount 设备 挂载目录 </span></span><br><span class="line">  mount: /dev/sr0 is write-protected,mounting <span class="built_in">read</span>-only  </span><br><span class="line"></span><br><span class="line">[root@xy yum.repos.d]<span class="comment"># vim /etc/fstab   </span></span><br><span class="line">  /dev/cdrom /media/cdrom iso9660 default 0 0   <span class="comment"># fstab 文件写法</span></span><br><span class="line">[root@xy yum.repos.d]<span class="comment"># yum install httpd  　# 测试  </span></span><br><span class="line">  Dependencies Resolved  </span><br><span class="line">  ........省略部分信息........  </span><br><span class="line">  Install  1 Package (+4 Dependent packages)  </span><br><span class="line">  ........省略部分信息........  </span><br><span class="line">  Is this ok [y/d/N]: y          </span><br><span class="line">  ........省略部分信息........ </span><br><span class="line">  Complete!</span><br></pre></td></tr></table></figure><h3 id="22-编写简单的shell脚本"><a href="#22-编写简单的shell脚本" class="headerlink" title="22. 编写简单的shell脚本    "></a>22. 编写简单的shell脚本    <a id="shell"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行成功返回值：0，否则返回值为非 0 数字</span></span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># vim example.sh    # bash -n file.sh 检测语法错误</span></span><br><span class="line">  <span class="comment">#!/bin/bash  </span></span><br><span class="line">  <span class="comment">#For Example BY xy.com  </span></span><br><span class="line">  <span class="built_in">pwd</span>  </span><br><span class="line">  ls -al  </span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># bash example.sh  </span></span><br><span class="line">  /root/<span class="built_in">test</span>  </span><br><span class="line">  total 8  </span><br><span class="line">  drwxr-xr-x.  2 root root   23 Jul  7 18:29 .  </span><br><span class="line">  dr-xr-x---. 15 root root 4096 Jul  7 18:29 ..  </span><br><span class="line">  -rw-r--r--.  1 root root   46 Jul  7 18:29 example.sh  </span><br><span class="line">[root@xy ShellExample]<span class="comment"># ./example01.sh</span></span><br><span class="line">  -bash: ./example01.sh: Permission denied  </span><br><span class="line">[root@xy ShellExample]<span class="comment"># chmod u+x example01.sh</span></span><br></pre></td></tr></table></figure><h3 id="23-接收用户的参数"><a href="#23-接收用户的参数" class="headerlink" title="23. 接收用户的参数"></a>23. 接收用户的参数</h3><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>$0</td><td>对应当前Shell脚本名称</td></tr><tr><td>$#</td><td>对应总共有几个参数</td></tr><tr><td>$*</td><td>对应所有位置参数值</td></tr><tr><td>$?</td><td>对应显示上一次命令的执行返回值</td></tr><tr><td>$1 /$2 /$3</td><td>对应第N个位置的参数值</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># vim example02.sh </span></span><br><span class="line">  <span class="comment">#!/bin/bash  </span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;当前脚本名称为<span class="variable">$0</span>&quot;</span><span class="comment"># $0 当前Shell脚本名称 </span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;总共有<span class="variable">$#</span>个参数,分别是$*.&quot;</span><span class="comment"># $# 参数个数</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;第一个参数为<span class="variable">$1</span>,第五个参数为<span class="variable">$5</span>.&quot;</span><span class="comment"># $ 所以位置的参数值  </span></span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># sh example02.sh one two three four five six  </span></span><br><span class="line">  当前脚本名称为example02.sh  </span><br><span class="line">  总共有6个参数,分别是one two three four five six.</span><br><span class="line">  第一个参数为one,第五个参数为five.</span><br></pre></td></tr></table></figure><h3 id="24-判断用户的参数"><a href="#24-判断用户的参数" class="headerlink" title="24. 判断用户的参数"></a>24. 判断用户的参数</h3><h4 id="24-1-文件"><a href="#24-1-文件" class="headerlink" title="24.1 文件"></a>24.1 文件</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-d</td><td>测试文件是否为目录类型</td></tr><tr><td>-e</td><td>测试文件是否存在</td></tr><tr><td>-f</td><td>判断文件是否为一般文件</td></tr><tr><td>-r</td><td>测试当前用户是否有读权限</td></tr><tr><td>-w</td><td>当前用户是否有写权限</td></tr><tr><td>-x</td><td>当前用户是否有执行权限</td></tr><tr><td>$?</td><td>显示上一次命令的执行返回值</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># [ -d /etc/fstab ]# 测试文件是否为目录类型</span></span><br><span class="line">[root@xy ~]<span class="comment"># echo $?</span></span><br><span class="line">  1        </span><br><span class="line">[root@xy ~]<span class="comment"># [ -f /etc/fstab ]# 判断是否为一般文件    </span></span><br><span class="line">[root@xy ~]<span class="comment"># echo $?   </span></span><br><span class="line">  0        </span><br><span class="line">[root@xy ~]<span class="comment"># [ -e /dev/cdrom ] &amp;&amp; echo &quot;Exist&quot;# 当前面执行成功则执行后面，整个表达式返回值 为 0 </span></span><br><span class="line">  Exist    </span><br><span class="line">[root@xy ~]<span class="comment"># su - xy    </span></span><br><span class="line">[xy@xy ~]$ [ <span class="variable">$USER</span> = root ] || <span class="built_in">echo</span> <span class="string">&quot;user&quot;</span><span class="comment"># 当前执行失败则执行后面  </span></span><br><span class="line">user  </span><br><span class="line">[xy@xy ~]$ <span class="built_in">exit</span> </span><br><span class="line">  <span class="built_in">logout</span>  </span><br><span class="line">[root@xy ~]<span class="comment"># [ ! $USER = root ] || echo &quot;administrator&quot;</span></span><br><span class="line">  administrator</span><br></pre></td></tr></table></figure><h4 id="24-2-数字"><a href="#24-2-数字" class="headerlink" title="24.2 数字"></a>24.2 数字</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-eq</td><td>是否相等</td></tr><tr><td>-ne</td><td>是否不等于</td></tr><tr><td>-gt</td><td>是否大于</td></tr><tr><td>-lt</td><td>是否小于</td></tr><tr><td>-le</td><td>是否等于/小于</td></tr><tr><td>-ge</td><td>是否等于/大于</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># [ 10 -gt 10 ]    </span></span><br><span class="line">[root@xy ~]<span class="comment"># echo $? </span></span><br><span class="line">  1     </span><br><span class="line">[root@xy ~]<span class="comment"># [ 10 -eq 10 ]    </span></span><br><span class="line">[root@xy ~]<span class="comment"># echo $? </span></span><br><span class="line">  0    </span><br><span class="line">[root@xy ~]<span class="comment"># free -m  </span></span><br><span class="line">             total       used       free     shared    buffers     cached  </span><br><span class="line">Mem:          1987       1197        789          9          0        280  </span><br><span class="line">-/+ buffers/cache:        916       1071  </span><br><span class="line">Swap:         2063          0       2063  </span><br><span class="line">[root@xy ~]<span class="comment"># free -m | grep Mem:  </span></span><br><span class="line">Mem:          1987       1198        789          9          0        280  </span><br><span class="line">[root@xy ~]<span class="comment"># free -m |grep Mem: |awk &#x27;&#123;print $4&#125;&#x27;  </span></span><br><span class="line">789  </span><br><span class="line">[root@xy ~]<span class="comment"># FreeMem=`free -m |grep Mem: |awk &#x27;&#123;print $4&#125;&#x27;`</span></span><br><span class="line">[root@xy ~]<span class="comment"># echo $FreeMem  </span></span><br><span class="line">789  </span><br><span class="line">[root@xy ~]<span class="comment"># [ $FreeMem -lt 1024 ] &amp;&amp; echo &quot;Insufficient Memory&quot;  </span></span><br><span class="line">Insufficient Memory</span><br></pre></td></tr></table></figure><h4 id="24-3-字符串"><a href="#24-3-字符串" class="headerlink" title="24.3 字符串"></a>24.3 字符串</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>=</td><td><strong>比较字符串内容是否相同</strong></td></tr><tr><td>!=</td><td><strong>比较字符串内容是否不同</strong></td></tr><tr><td>-z</td><td><strong>判断字符串内容是否为空</strong></td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># [ -z $String ] </span></span><br><span class="line">[root@xy ~]<span class="comment"># echo $?</span></span><br><span class="line">  0    </span><br><span class="line">[root@xy ~]<span class="comment"># echo $LANG </span></span><br><span class="line">  en_US.UTF-8  </span><br><span class="line">[root@xy ~]<span class="comment"># [ $LANG != &quot;en.US&quot; ] &amp;&amp; echo &quot;Not en.US&quot; </span></span><br><span class="line">  Not en.US</span><br></pre></td></tr></table></figure><h3 id="25-流程控制语句"><a href="#25-流程控制语句" class="headerlink" title="25. 流程控制语句"></a>25. 流程控制语句</h3><h4 id="25-1-if条件测试语句"><a href="#25-1-if条件测试语句" class="headerlink" title="25.1 if条件测试语句"></a>25.1 if条件测试语句</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># vim mkcdrom.sh  </span></span><br><span class="line">  <span class="comment">#!/bin/bash  </span></span><br><span class="line">  DIR=<span class="string">&quot;/media/cdrom&quot;</span>  </span><br><span class="line">  <span class="keyword">if</span> [ ! -e <span class="variable">$DIR</span> ]; <span class="keyword">then</span>  </span><br><span class="line">   mkdir -p <span class="variable">$DIR</span>  </span><br><span class="line">  <span class="keyword">fi</span>  </span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># bash mkcdrom.sh   </span></span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># ls -d /media/cdrom/ </span></span><br><span class="line">  /media/cdrom/  </span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># vim chkhost.sh </span></span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># bash mkcdrom.sh</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># vim chkhost.sh</span></span><br><span class="line">  <span class="comment">#!/bin/bash  </span></span><br><span class="line">  ping -c 3 -i 0.2 -W 3 <span class="variable">$1</span> &amp;&gt; /dev/null   <span class="comment"># /dev/null 没有回收功能的垃圾箱  </span></span><br><span class="line">  <span class="keyword">if</span> [ $? -eq 0 ]</span><br><span class="line">  <span class="keyword">then</span>  </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Host <span class="variable">$1</span> is On-line.&quot;</span>  </span><br><span class="line">  <span class="keyword">else</span>  </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Host <span class="variable">$1</span> is Off-line.&quot;</span>  </span><br><span class="line">  <span class="keyword">fi</span>  </span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># bash chkhost.sh 192.168.37.10  </span></span><br><span class="line">  Host 192.168.37.10 is On-line.  </span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># bash chkhost.sh 192.168.37.20  </span></span><br><span class="line">  Host 192.168.37.20 is Off-line. </span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># vim chkscore.sh</span></span><br><span class="line">  <span class="comment">#!/bin/bash  </span></span><br><span class="line">  <span class="built_in">read</span> -p <span class="string">&quot;Enter your score (0-100):&quot;</span> GRADE  </span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$GRADE</span> -ge 85 ] &amp;&amp; [ <span class="variable">$GRADE</span> -le 100 ]; <span class="keyword">then</span>  </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$GRADE</span> is Excellent&quot;</span>  </span><br><span class="line">  <span class="keyword">elif</span> [ <span class="variable">$GRADE</span> -ge 70 ] &amp;&amp; [ <span class="variable">$GRADE</span> -le 84 ]; <span class="keyword">then</span>  </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$GRADE</span> is Pass&quot;</span>  </span><br><span class="line">  <span class="keyword">else</span>  </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$GRADE</span> is Fail&quot;</span>  </span><br><span class="line">  <span class="keyword">fi</span>  </span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># bash chkscore.sh  </span></span><br><span class="line">  Enter your score (0-100): 88  </span><br><span class="line">  88 is Excellent</span><br></pre></td></tr></table></figure><h4 id="26-2-for条件循环语句-for-变量名-in-取值列表-do-命令序列-done"><a href="#26-2-for条件循环语句-for-变量名-in-取值列表-do-命令序列-done" class="headerlink" title="26.2 for条件循环语句(for 变量名 in 取值列表 do 命令序列 done)"></a>26.2 for条件循环语句(for 变量名 in 取值列表 do 命令序列 done)</h4><p><strong>说明:/dev/null 是一个被称作Linux黑洞的文件,把输出信息重定向到这个文件等同于删除数据(类似于没有回收功能的垃圾箱),可以让用户的屏幕窗口保持清洁.</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># vim users.txt  </span></span><br><span class="line">  andy  </span><br><span class="line">  barry  </span><br><span class="line">  carll  </span><br><span class="line">  duck  </span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># vim usersadd.sh </span></span><br><span class="line">  <span class="comment">#!/bin/bash  </span></span><br><span class="line">  <span class="built_in">read</span> -p <span class="string">&quot;Enter The Users Password:&quot;</span> PASSWD<span class="comment">#read 读取用户输入信息  </span></span><br><span class="line">  <span class="keyword">for</span> UNAME <span class="keyword">in</span> `cat users.txt`<span class="comment">#$(cat users.txt)</span></span><br><span class="line">  <span class="keyword">do</span>  </span><br><span class="line">    id <span class="variable">$UNAME</span> &amp;&gt; /dev/null                      <span class="comment">#id 用户名</span></span><br><span class="line">    <span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span>  </span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Already exists&quot;</span>  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">        useradd <span class="variable">$UNAME</span> &amp;&gt; /dev/null   </span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$PASSWD</span>&quot;</span> | passwd --stdin <span class="variable">$UNAME</span> &amp;&gt; /dev/null  </span><br><span class="line">    <span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span>  </span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$UNAME</span> , Create success&quot;</span>  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$UNAME</span> , Create failure&quot;</span>  </span><br><span class="line">    <span class="keyword">fi</span>  </span><br><span class="line">    <span class="keyword">fi</span>  </span><br><span class="line">  <span class="keyword">done</span>  </span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># bash usersadd.sh  </span></span><br><span class="line">  Enter The Users Password: 19937100xy  </span><br><span class="line">  andy ,Create success  </span><br><span class="line">  barry ,Create success  </span><br><span class="line">  carl ,Create success  </span><br><span class="line">  duck ,Create success  </span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># tail -6 /etc/passwd </span></span><br><span class="line">  andy:x:1001:1001::/home/andy:/bin/bash  </span><br><span class="line">  barry:x:1002:1002::/home/barry:/bin/bash  </span><br><span class="line">  carl:x:1003:1003::/home/carl:/bin/bash  </span><br><span class="line">  duck:x:1004:1004::/home/duck:/bin/bash</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># vim ipadds.txt  </span></span><br><span class="line">  192.168.37.10  </span><br><span class="line">  192.168.37.11  </span><br><span class="line">  192.168.37.12  </span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># vim CheckHosts.sh </span></span><br><span class="line">  <span class="comment">#!/bin/bashHLIST=$(cat ~/ipadds.txt)  </span></span><br><span class="line">  <span class="keyword">for</span> IP <span class="keyword">in</span> `cat ipadds.txt`<span class="comment"># for IP in $HLIST </span></span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">      ping -c 3 -i 0.2 -W 3 <span class="variable">$IP</span> &amp;&gt; /dev/null  </span><br><span class="line">      <span class="keyword">if</span> [ $? -eq 0 ] ; <span class="keyword">then</span></span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;Host <span class="variable">$IP</span> is On-line.&quot;</span>   </span><br><span class="line">      <span class="keyword">else</span>   </span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;Host <span class="variable">$IP</span> is Off-line.&quot;</span>  </span><br><span class="line">      <span class="keyword">fi</span>  </span><br><span class="line">  <span class="keyword">done</span>  </span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># bash CheckHosts.sh   </span></span><br><span class="line">  Host 192.168.37.10 is On-line.  </span><br><span class="line">  Host 192.168.37.11 is Off-line.  </span><br><span class="line">  Host 192.168.37.12 is Off-line.</span><br></pre></td></tr></table></figure><h4 id="26-3-while条件循环语句-while-条件测试操作-do-命令序列-done"><a href="#26-3-while条件循环语句-while-条件测试操作-do-命令序列-done" class="headerlink" title="26.3 while条件循环语句(while 条件测试操作 do 命令序列 done)"></a>26.3 while条件循环语句(while 条件测试操作 do 命令序列 done)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># vim Guess.sh  </span></span><br><span class="line">  <span class="comment">#!/bin/bash  </span></span><br><span class="line">  PRICE=$(expr <span class="variable">$RANDOM</span> % 1000)  </span><br><span class="line">  TIMES=0  </span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;商品的实际价格在0-999之间,猜猜看是多少?&quot;</span>  </span><br><span class="line">  <span class="keyword">while</span> <span class="literal">true</span>  </span><br><span class="line">  <span class="keyword">do</span>  </span><br><span class="line">      <span class="built_in">read</span> -p <span class="string">&quot;请输入您猜测的价格:&quot;</span> INT  </span><br><span class="line">      <span class="built_in">let</span> TIMES++  </span><br><span class="line">      <span class="keyword">if</span> [ <span class="variable">$INT</span> -eq <span class="variable">$PRICE</span> ] ; <span class="keyword">then</span>  </span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;恭喜您答对了,实际价格是 <span class="variable">$PRICE</span>&quot;</span>  </span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;您总共猜测了 <span class="variable">$TIMES</span> 次&quot;</span>  </span><br><span class="line">          <span class="built_in">exit</span> 0  </span><br><span class="line">      <span class="keyword">elif</span> [ <span class="variable">$INT</span> -gt <span class="variable">$PRICE</span> ] ; <span class="keyword">then</span>  </span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;太高了!&quot;</span>  </span><br><span class="line">      <span class="keyword">else</span>  </span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;太低了!&quot;</span>  </span><br><span class="line">      <span class="keyword">fi</span>  </span><br><span class="line">  <span class="keyword">done</span>  </span><br></pre></td></tr></table></figure><h4 id="26-4-case条件测试语句"><a href="#26-4-case条件测试语句" class="headerlink" title="26.4 case条件测试语句"></a>26.4 case条件测试语句</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ShellExample]<span class="comment"># vim checkkeys.sh </span></span><br><span class="line">  <span class="comment">#!/bin/bash  </span></span><br><span class="line">  <span class="built_in">read</span> -p <span class="string">&quot;请输入一个字符，并按Enter键确认：&quot;</span> KEY  </span><br><span class="line">  <span class="keyword">case</span> <span class="string">&quot;<span class="variable">$KEY</span>&quot;</span> <span class="keyword">in</span>  </span><br><span class="line">  [a-z] | [A-Z])  </span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;您输入的是<span class="variable">$KEY</span>字母。&quot;</span>  </span><br><span class="line">      ;;  </span><br><span class="line">  [0-9])  </span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;您输入的是<span class="variable">$KEY</span>数字。&quot;</span>  </span><br><span class="line">      ;;  </span><br><span class="line">  *)  </span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;您输入的是空格、功能健或其他控制字符。&quot;</span> </span><br><span class="line">      ;; </span><br><span class="line">  <span class="keyword">esac</span>  </span><br><span class="line">[root@xy ShellExample]<span class="comment"># bash checkkeys.sh  </span></span><br><span class="line">  请输入一个字符，并按Enter键确认：4  </span><br><span class="line">  您输入的是4数字。</span><br></pre></td></tr></table></figure><h4 id="27-计划任务服务程序-一次性、长期性计划任务"><a href="#27-计划任务服务程序-一次性、长期性计划任务" class="headerlink" title="27. 计划任务服务程序 (一次性、长期性计划任务)    "></a>27. 计划任务服务程序 (一次性、长期性计划任务)    <a id="corntab"></a></h4><img src="/posts/4ac0a166/crontab.png" class title="[crontab]"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1 <span class="comment"># Example of job definition:  </span></span><br><span class="line">2 <span class="comment"># .---------------- minute (0 - 59)  </span></span><br><span class="line">3 <span class="comment"># |  .------------- hour (0 - 23)  </span></span><br><span class="line">4 <span class="comment"># |  |  .---------- day of month (1 - 31)  </span></span><br><span class="line">5 <span class="comment"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...  </span></span><br><span class="line">6 <span class="comment"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR   sun,mon,tue,wed,thu,fri,sat  </span></span><br><span class="line">7 <span class="comment"># |  |  |  |  |</span></span><br><span class="line">8 <span class="comment"># *  *  *  *  * user-name command to be executed </span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># at 23:30  </span></span><br><span class="line">  at &gt; systemctl restart httpd<span class="comment">#echo &quot;systemctl restart httpd&quot; |at 23:30 </span></span><br><span class="line">  at &gt; 此处按下Ctrl+d 组合键来结束编写任务计划  </span><br><span class="line">  job 3 at Mon Apr 27 23:30:00 2017 </span><br><span class="line">[root@xy ~]<span class="comment"># at -l                 #查看一次性计划任务   </span></span><br><span class="line">  3 Mon Apr 27 23:30:00 2017 a root</span><br><span class="line">[root@xy ~]<span class="comment"># at -d 3               # 同 atrm</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># crontab -e   </span></span><br><span class="line">[root@xy ~]<span class="comment"># crontab -l     　# crontab - l 查看  crontab -r 删除</span></span><br><span class="line">  00 3 * * * cp /var/<span class="built_in">log</span>/alternatives.log /home/shiyanlou/tmp/$(date +%F)   </span><br><span class="line">  25  3  *  * 1,3,5 /usr/bin/tar -czvf backup.tar.gz /home/wwwroot  </span><br><span class="line">  分  时 日 月 周    任务     <span class="comment"># 没有设置的用*占位，表示每  </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注:分字段必须有, 每分钟用* 或者 */1表示; 日、周不能同时有,否则会冲突 </span></span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># whereis rm       　# whereis 命令 查询命令所在路径</span></span><br><span class="line">  rm: /usr/bin/rm /usr/share/man/man1/rm.1.gz /usr/share/man/man1p/rm.1p.gz  </span><br><span class="line">[root@xy ~]<span class="comment"># crontab -e  </span></span><br><span class="line">  crontab: installing new crontab  </span><br><span class="line">[root@xy ~]<span class="comment"># crontab -l  </span></span><br><span class="line">  25 3 * * 1,3,5 /usr/bin/tar -czvf backup-tar.gz /home/wwwroot  </span><br><span class="line">  0 1 * * 1-5 /usr/bin/rm -rf /tmp/*</span><br></pre></td></tr></table></figure><h3 id="28-用户身份"><a href="#28-用户身份" class="headerlink" title="28. 用户身份"></a>28. 用户身份</h3><h4 id="相关文件"><a href="#相关文件" class="headerlink" title="相关文件:"></a>相关文件:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/etc/passwd </span><br><span class="line">用户名  :密码标识位   :UID  :GID  :组名   :家目录  :shell     </span><br><span class="line"></span><br><span class="line">/etc/shadow            </span><br><span class="line">用户名 :MD5paswd :密码修改时间(19700101) :两次修改密码时间间隔 :密码有效期 :密码到期前的警告天数  :密码过期后的宽限天数  :密码失效时间 </span><br><span class="line"></span><br><span class="line">/etc/group  /etc/gshadow /etc/skel</span><br><span class="line">  root:x:0:</span><br><span class="line">  组名:密码:GID:附加组  </span><br></pre></td></tr></table></figure><h4 id="28-1-useradd"><a href="#28-1-useradd" class="headerlink" title="28.1 useradd:"></a>28.1 useradd:</h4><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-u</td><td><strong>指定该用户默认UID</strong></td></tr><tr><td>-g</td><td><strong>指定一个初始用户基本组,须存在</strong></td></tr><tr><td>-G</td><td>指定附加组, 须存在</td></tr><tr><td>-d</td><td><strong>指定用户家目录(默认/home/username)</strong></td></tr><tr><td>-s</td><td><strong>指定该用户默认Shell解释器</strong></td></tr><tr><td>-m</td><td>创建家目录, 用于系统用户</td></tr><tr><td>-M</td><td>不创建家目录, 用于非系统用户</td></tr><tr><td>-r</td><td>设置系统账号 #不会自动生成家目录</td></tr><tr><td>-c,comment</td><td>描述信息</td></tr><tr><td>-e,expire_date</td><td>账户到期时间(YYYY-MM-DD)</td></tr></tbody></table><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>-u -g -G -n</td></tr><tr><td>finger</td><td>username</td></tr><tr><td>chsh</td><td>修改shell</td></tr><tr><td>chfn</td><td>修改注释信息</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># getent shadow xy   # getent passwd xy  </span></span><br><span class="line">[root@xy ~]<span class="comment"># useradd -d /home/xy -u 8888 -s /sbin/nologin xy    </span></span><br><span class="line">[root@xy ~]<span class="comment"># id xy         </span></span><br><span class="line">uid=8888(xy) gid=8888(xy) groups=8888(xy)</span><br></pre></td></tr></table></figure><h4 id="28-2-passwd"><a href="#28-2-passwd" class="headerlink" title="28.2 passwd"></a>28.2 passwd</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>--stdin 允许标准输入改密码</td><td>`echo “NewPassWord”</td></tr><tr><td>-l</td><td>锁定用户</td></tr><tr><td>-u</td><td>解锁用户</td></tr><tr><td>-e</td><td>使用户密码立即过期,下次登录强制修改密码</td></tr><tr><td>-d</td><td>使该用户可以用空密码登陆系统</td></tr><tr><td>-n</td><td>设置修改密码的最短天数</td></tr><tr><td>-x</td><td>设置修改密码的最长天数</td></tr><tr><td>-k</td><td>为密码已经过期的用户更新有效期</td></tr><tr><td>-w</td><td>设置密码过期前告警的天数</td></tr><tr><td>-i</td><td>设置密码过期后多少天禁用该用户</td></tr><tr><td>-S</td><td>显示用户密码相关描述</td></tr></tbody></table><table><thead><tr><th>chage</th><th>修改用户密码策略</th></tr></thead><tbody><tr><td>-d</td><td>最近一次修改时间</td></tr><tr><td>-E</td><td>过期时间</td></tr><tr><td>-I</td><td>非活动时间</td></tr><tr><td>-m</td><td>最短使用期限</td></tr><tr><td>-M</td><td>最长使用期限</td></tr><tr><td>-w</td><td>警告时间</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># passwd xy </span></span><br><span class="line">  Changing password <span class="keyword">for</span> user xy.  </span><br><span class="line">  New password:   </span><br><span class="line">  Retype new password:  </span><br><span class="line">  asswd: all authentication tokens updated successfully.   </span><br><span class="line">[root@xy ~]<span class="comment"># passwd -l xy </span></span><br><span class="line">  Locking password <span class="keyword">for</span> user xy.  </span><br><span class="line">  passwd: Success  </span><br><span class="line">[root@xy ~]<span class="comment"># passwd -u xy</span></span><br><span class="line">  Unlocking password <span class="keyword">for</span> user xy.  </span><br><span class="line">  passwd: Success  </span><br><span class="line">[root@xy ~]<span class="comment"># passwd -S xy   # -S --ststus</span></span><br><span class="line">  xy PS 2018-07-06 0 99999 7 -1 (Password <span class="built_in">set</span>, SHA512 crypt.)  </span><br><span class="line">[root@xy ~]<span class="comment"># passwd -n 7 -x 60 -w 10 -i 30 xy  # 7天内不能更改密码，60天后必须改密，过期前10天通知，过期后30天禁用该用户  </span></span><br><span class="line">[root@xy ~]<span class="comment"># groupadd ronny               # groupadd -g ID    groupdel    </span></span><br><span class="line">[root@xy ~]<span class="comment"># gpasswd -a / -d user group   # 把用户从组中加入/删除</span></span><br></pre></td></tr></table></figure><h4 id="28-3-userdel"><a href="#28-3-userdel" class="headerlink" title="28.3 userdel"></a>28.3 userdel</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-f</td><td>强制删除用户</td></tr><tr><td>-r</td><td>同时删除用户及家目录</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># id xy  </span></span><br><span class="line">  uid=8888(xy) gid=1000(xy) groups=1000(xy),0(root)  </span><br><span class="line">[root@xy ~]<span class="comment"># userdel -r xy  </span></span><br><span class="line">[root@xy ~]<span class="comment"># id xy</span></span><br><span class="line">  id: xy: no user  </span><br></pre></td></tr></table></figure><h4 id="28-4-usermod"><a href="#28-4-usermod" class="headerlink" title="28.4 usermod"></a>28.4 usermod</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-u</td><td><strong>修改用户UID</strong></td></tr><tr><td>-g</td><td><strong>修改用户初始组</strong></td></tr><tr><td>-aG</td><td><strong>修改用户附加组,追加不覆盖</strong></td></tr><tr><td>-l</td><td>修改用户名</td></tr><tr><td>-s</td><td><strong>变更默认终端</strong></td></tr><tr><td>-c,--comment</td><td><strong>填写用户备注信息</strong></td></tr><tr><td>-d -m</td><td><strong>重新指定用户的家目录并自动迁移数据</strong></td></tr><tr><td>-e,–expire_date</td><td><strong>账户到期时间(YYYY-MM-DD)</strong></td></tr><tr><td>-L,–Lock</td><td><strong>锁定用户禁止登陆系统</strong></td></tr><tr><td>-U,–Unlock</td><td><strong>解锁用户,允许登陆系统</strong></td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># usermod -aG root xy  # 用户xy追加附加组root  </span></span><br><span class="line">[root@xy ~]<span class="comment"># id xy  </span></span><br><span class="line">  uid=1000(xy) gid=1000(xy) groups=1000(xy),0(root)</span><br><span class="line">[root@xy ~]<span class="comment"># usermod -u 8888 xy  </span></span><br><span class="line">[root@xy ~]<span class="comment"># id xy</span></span><br><span class="line">  uid=8888(xy) gid=1000(xy) groups=1000(xy),0(root)</span><br><span class="line">[root@xy ~]<span class="comment"># gpasswd -a xy root</span></span><br><span class="line">[root@xy ~]<span class="comment"># gpasswd -d xy root</span></span><br></pre></td></tr></table></figure><h4 id="28-5-chmod"><a href="#28-5-chmod" class="headerlink" title="28.5 chmod"></a>28.5 chmod</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">who: u g o a</span><br><span class="line">opt: + - =</span><br><span class="line">per: r=4 w=2 x=1<span class="comment">#r,可浏览文件列表; w,可创建删除文件; x,访问目录的内容;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#umask </span></span><br><span class="line"><span class="built_in">umask</span>: 0002 (掩码)</span><br><span class="line">目录: 777=<span class="built_in">umask</span>+default</span><br><span class="line">文件: 666=<span class="built_in">umask</span>+default</span><br><span class="line">当文件权限通过666-umask计算后,某位有奇数,则将其权限+1;</span><br><span class="line"><span class="comment">#特殊权限</span></span><br><span class="line">SUID: 作用于二进制程序,执行此文件,临时具有所有者的权限, /bin/passwd</span><br><span class="line">chmod u+s<span class="comment">#s=4</span></span><br><span class="line">SGID: 作用于二进制程序,执行此文件,临时具有所属组的权限, /bin/passwd</span><br><span class="line">  作用于目录上,创建的新文件,文件的所属组继承目录的所属组</span><br><span class="line">Sticky: 作用与目录,只能删除此目录中自己文件, /tmp<span class="comment">#s=2</span></span><br><span class="line">chmod o+t<span class="comment">#t=1</span></span><br></pre></td></tr></table></figure><h3 id="29-netstat-atlnp"><a href="#29-netstat-atlnp" class="headerlink" title="29. netstat(-atlnp)"></a>29. netstat(-atlnp)</h3><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-t, --tcp</td><td>指明显示TCP端口</td></tr><tr><td>-u, --udp</td><td>指明显示UDP端口</td></tr><tr><td>-a, --all</td><td>–</td></tr><tr><td>-r, --route</td><td>显示核心路由信息</td></tr><tr><td>-l, --listen</td><td>仅显示监听套接字</td></tr><tr><td>-p, --PID</td><td>显示进程标识符</td></tr><tr><td>-n, --numeric</td><td>不解析服务的名称</td></tr></tbody></table><h3 id="30-ss-antlp"><a href="#30-ss-antlp" class="headerlink" title="30. ss(-antlp)"></a>30. ss(-antlp)</h3><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-t, --tcp</td><td>显示 TCP 协议的 sockets</td></tr><tr><td>-u, --udp</td><td>显示 UDP 协议的 sockets</td></tr><tr><td>-n, --numeric</td><td>不解析服务的名称，如 “22” 端口不会显示成 “ssh”</td></tr><tr><td>-l, --listening</td><td>只显示处于监听状态的端口</td></tr><tr><td>-p, --processes</td><td>显示监听端口的进程(Ubuntu 上需要 sudo)</td></tr><tr><td>-a, --all</td><td>对 TCP 协议来说，既包含监听的端口，也包含建立的连接</td></tr><tr><td>-r, --resolve</td><td>把 IP 解释为域名，把端口号解释为协议名称</td></tr></tbody></table><h3 id="31-lsof-list-open-files"><a href="#31-lsof-list-open-files" class="headerlink" title="31. lsof: list open files"></a>31. lsof: list open files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:8022 </span><br><span class="line">lsof -i tcp     </span><br></pre></td></tr></table></figure><h3 id="32-文件归属与权限"><a href="#32-文件归属与权限" class="headerlink" title="32. 文件归属与权限"></a>32. 文件归属与权限</h3><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-</td><td>普通文件</td></tr><tr><td>d</td><td>目录文件</td></tr><tr><td>l</td><td>链接文件</td></tr><tr><td>b</td><td>块设备文件,按块为单位,随机访问的设备(硬盘)</td></tr><tr><td>c</td><td>字符设备文件,按字符为单位,线性设备(键盘)</td></tr><tr><td>p</td><td>管道文件</td></tr><tr><td>r</td><td>(可读)-4</td></tr><tr><td>w</td><td>(可写:编辑、新增、修改、删除文件实际内容) -2</td></tr><tr><td>x</td><td>(执行)-1</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># ls -l initial-setup-ks.cfg</span></span><br><span class="line">  drwxr-xr-x. 2 anyue anyue  6 Jul 27 14:59 Videos</span><br><span class="line">  | 文件类型 | 7 | 5 | 5 | 属主 | 属组 | 大小 | 修改时间 | 文件名 |</span><br></pre></td></tr></table></figure><p><strong>SUID是一种对<code>二进制程序</code>进行设置的特殊权限, 可以让二进制程序的执行者临时拥有属主的权限(仅对拥有执行权限的二进制程序有效), 相应进程的属主是程序文件自身的属主, 而不是调用者</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># ll /bin/cat  </span></span><br><span class="line">  -rwxr-xr-x  1 root root 23260 Jan 30 2014 /bin/cat  </span><br><span class="line">[root@xy ~]<span class="comment"># chmod u+s /bin/cat  # chmod u-s FILE</span></span><br><span class="line">  -rwxsr-xr-x  1 root root 23260 Jan 30 2014 /bin/cat  </span><br><span class="line"></span><br><span class="line">[anyue@xy ~]<span class="comment"># cat /etc/shadow  # 可以查看shadow  </span></span><br></pre></td></tr></table></figure><p><strong>SGID:让执行者临时拥有属组的权限(对拥有执行权限的二进制程序进行设置)在<code>某个目录</code>中创建的文件自动集成该目录的用户组(只可以对目录进行设置)</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]<span class="comment"># useradd hadoop; useradd hbase;    </span></span><br><span class="line">[root@xy ~]<span class="comment"># mkdir /tmp/project </span></span><br><span class="line">[root@xy ~]<span class="comment"># groupadd deve; chown -R :deve /tmp/project/  </span></span><br><span class="line">[root@xy ~]<span class="comment"># usermod -aG  deve hadoop; usermod -aG  deve habase  </span></span><br><span class="line">[hadoop@xy project]<span class="comment"># ls -ld       </span></span><br><span class="line">  drwxr-xr-x 2 root deve 4096 Jan 8 18:55 .  <span class="comment"># hadoop 无写权限</span></span><br><span class="line">[root@xy tmp]<span class="comment"># chmod g+w /tmp/project  # 添加写权限  </span></span><br><span class="line">[hadoop@xy project]<span class="comment"># ls -l  </span></span><br><span class="line">  -rw-rw-r-- 1 hadoop hadoop 0 Jan 8 18:58 a.hadoop    </span><br><span class="line">  -rw-rw-r-- 1 habase habse 0 Jan 8 18:58 a.habase    </span><br><span class="line">[root@xy ~]<span class="comment"># chmod g+s /tmp/project  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ls -ld /tmp/project        </span></span><br><span class="line">  drwxrwsr-x 2 root deve 4096 Jan 8 18:59 /tmp/project   </span><br><span class="line">[hadoop@xy project]<span class="comment"># touch b.hadoop  </span></span><br><span class="line">  -rw-rw-r-- 1 hadoop deve 0 Jan 8 19:00 b.hadoop   </span><br><span class="line"></span><br><span class="line">chmod 权限 文件或目录名称  u g o + - = rwx       </span><br><span class="line">chown 所有者:所属组 文件或目录名称   --reference=/path/file modFile,...</span><br></pre></td></tr></table></figure><p><strong>SBIT(Sticky Bit):特殊权限位可确保用户只能删除自己的文件,而不能删除其它用户的文件.即当<code>对某个目录设置</code>了SBIT粘滞位权限后,那么该目录中的文件就只能被其所有者执行删除操作了</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@xy ~]$ chmod o+t /tmp/project  </span><br><span class="line">[root@xy ~]<span class="comment"># ls -ld /tmp/project </span></span><br><span class="line">  drwxrwsr-t 2 root deve 4096 Jan 8  19:05 /tmp/project  </span><br><span class="line">[root@xy ~]$ chmod 3755 /tmp/project  <span class="comment"># SUID SGUID Sticky(000-111)</span></span><br></pre></td></tr></table></figure><h3 id="33-文件的隐藏属性"><a href="#33-文件的隐藏属性" class="headerlink" title="33. 文件的隐藏属性"></a>33. 文件的隐藏属性</h3><h4 id="33-1-chattr-参数-参数"><a href="#33-1-chattr-参数-参数" class="headerlink" title="33.1 chattr(+参数 -参数)"></a>33.1 chattr(+参数 -参数)</h4><ul><li>i: 不能删除、改名、更改  </li><li>a: 只能追加内容  </li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># chattr +a linuxprobe   # Append Only </span></span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># rm linuxprobe   </span></span><br><span class="line">  rm: remove regular file ‘linuxprobe’? y  </span><br><span class="line">  rm: cannot remove ‘linuxprobe’: Operation not permitted  </span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># chattr -a linuxprobe   </span></span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># rm linuxprobe</span></span><br><span class="line">  rm: remove regular file ‘linuxprobe’? y  </span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># lsattr linuxprobe   # 隐藏权限  </span></span><br><span class="line">[root@xy <span class="built_in">test</span>]<span class="comment"># -----a--------- linuxprobe  </span></span><br></pre></td></tr></table></figure><h4 id="33-2-文件访问控制表-ACL"><a href="#33-2-文件访问控制表-ACL" class="headerlink" title="33.2 文件访问控制表(ACL)"></a>33.2 文件访问控制表(ACL)</h4><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-m</td><td>设定权限</td></tr><tr><td>-x</td><td>取消权限</td></tr><tr><td>-b, –remove all</td><td>移除所有</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[xy@xy ~]$ <span class="built_in">cd</span> /root  </span><br><span class="line">  -bash: <span class="built_in">cd</span>: /root: Permission denied  </span><br><span class="line">[xy@xy root]$ <span class="built_in">exit</span>  </span><br><span class="line">[root@xy ~]<span class="comment"># setfacl -Rm u:xy:rwx /root  </span></span><br><span class="line">[root@xy ~]<span class="comment"># su -xy  </span></span><br><span class="line">  Last login: Sat Mar 21 21:45:04 CST 2018 on pts/1  </span><br><span class="line">[xy@xy ~]$ <span class="built_in">cd</span> /root  </span><br><span class="line">[xy@xy root]$ ls  </span><br><span class="line">  anaconda-ks.cfg Downloads Pictures Public  </span><br><span class="line">[xy@xy ~]<span class="comment"># cat anaconda-ks.cfg  </span></span><br><span class="line">[xy@xy ~]<span class="comment"># exit  </span></span><br><span class="line">[root@xy ~]<span class="comment"># ls ld /root  </span></span><br><span class="line">  dr-xrwx---+ 14 root root 4096 May 4 2018 /root  </span><br><span class="line">[root@xy ~]<span class="comment"># setfacl -x u:xy /root </span></span><br><span class="line">[root@xy ~]<span class="comment"># getfacl /root        # getfacl 显示ACL信息  </span></span><br><span class="line">  getfacl: Removing leading <span class="string">&#x27;/&#x27;</span> from absolute path names   </span><br><span class="line">  1 <span class="comment"># file: root  </span></span><br><span class="line">  2 <span class="comment"># owner: root  </span></span><br><span class="line">  3 <span class="comment"># group: root  </span></span><br><span class="line">  user::r-x  </span><br><span class="line">  user:xy:rwx  </span><br><span class="line">  group::r-x  </span><br><span class="line">  mask::rwx  </span><br><span class="line">  other::---</span><br><span class="line"></span><br><span class="line">[root@xy ~]<span class="comment"># whereis ps  # 搜索命令所在位置及帮助文档</span></span><br><span class="line">  ps: /usr/bin/ps /usr/share/man/man1/ps.1.gz /usr/share/man/man1p/ps.1p.gz</span><br></pre></td></tr></table></figure><h3 id="补充小知识："><a href="#补充小知识：" class="headerlink" title="补充小知识："></a>补充小知识：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">locate     <span class="comment"># 文件名搜索   </span></span><br><span class="line">快捷的在`locatedb`中搜索文件名, 因为是在本地数据库中搜索`/var/lib/mlocate`, 所以速度很快, 但数据库更新为1天, 所以使用`updatedb`更新数据库;   </span><br><span class="line">whoami     <span class="comment"># 当前登陆用户  </span></span><br><span class="line">whatis ls  <span class="comment"># 查看命令作用</span></span><br><span class="line"><span class="built_in">which</span> ls   <span class="comment"># 查看命令所在位置及别名 whereis 更详细</span></span><br></pre></td></tr></table></figure><p>:link:<a href="https://www.cnblogs.com/wlzjdm/p/8687745.html">Rhel-7-yum源配置-1</a><br>:link:<a href="https://blog.csdn.net/qq_36119192/article/details/82222175">Rhel-7-yum源配置-2</a><br>:link:<a href="https://blog.csdn.net/u013605322/article/details/79726564">Rhel-7-yum源配置-3</a><br>:link:<a href="https://blog.csdn.net/tantexian/article/details/38895449">RHEL-7-yum优先级设置-1</a><br>:link:<a href="https://blog.csdn.net/conling_/article/details/70399694">RHEL-7-yum优先级设置-2</a> </p><p>:link:<a href="https://www.cnblogs.com/sench/p/8933638.html">umask 命令参考</a>    </p><blockquote><p><strong>文件的默认权限</strong>为 <code>666</code>, 创建目录的默认权限 <code>777</code>, 而umask值则表明了需要从默认权限中去掉哪些权限来成为最终的默认权限值, 文件默认不能具有执行权限，如果算的结果中右执行权限，则将其权限加1;  </p><p>权限 = 默认权限 - umask  </p></blockquote><img src="/posts/4ac0a166/umask.jpg" class title="[umask]"><h4 id="文件系统命令补充："><a href="#文件系统命令补充：" class="headerlink" title="文件系统命令补充："></a>文件系统命令补充：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dumpe2fs -h /dev/sd*<span class="comment">#查看分区概览信息</span></span><br><span class="line">fdisk -l<span class="comment">#显示磁盘信息</span></span><br><span class="line">fdisk -t<span class="comment">#更改分区系统的ID</span></span><br><span class="line">fsck -y /dev/sdb1<span class="comment">#文件系统修复命令</span></span><br><span class="line"></span><br><span class="line">partx -a /dev/DEVICE   partx -d --nr number /dev/device<span class="comment">#CentOS6</span></span><br><span class="line">partprobe /dev/DEVICE<span class="comment">#CentOS5,7</span></span><br></pre></td></tr></table></figure><h4 id="相关解压压缩命令"><a href="#相关解压压缩命令" class="headerlink" title="相关解压压缩命令"></a>相关解压压缩命令</h4><h4 id="link-参考2"><a href="#link-参考2" class="headerlink" title=":link:参考2"></a>:link:<a href="https://www.cnblogs.com/machangwei-8/p/9572227.html">参考2</a></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">1、gzip gunzip:</span><br><span class="line">gzip /PATH/SOMEFILE<span class="comment">#压缩后会删除源文件(不支持目录压缩) </span></span><br><span class="line">    -d 解压缩</span><br><span class="line">    -<span class="comment"># 1-9(压缩率)</span></span><br><span class="line">    gunzip  /PATH/SOMEFILE.gz <span class="comment">#解压后会删除源文件  </span></span><br><span class="line">    zcat /PATH/SOMEFILE.gz    <span class="comment">#不解压查看文本文件内容</span></span><br><span class="line"></span><br><span class="line">2、bzip2 bunzip2</span><br><span class="line">bzip2 /PATH/SOMEFILE</span><br><span class="line">-d 解压缩</span><br><span class="line">        -k 保留源文件</span><br><span class="line">        -<span class="comment"># 1-9(压缩率)</span></span><br><span class="line">    bunzip2 /PATH/SOMEFILE.bz2</span><br><span class="line">    bzcat /PATH/SOMEFILE.bz2     <span class="comment">#不解压查看文本文件内容</span></span><br><span class="line"></span><br><span class="line">3、xz unxz </span><br><span class="line">xz /PATH/SOMEFILE</span><br><span class="line">-d 解压缩</span><br><span class="line">        -k 保留源文件</span><br><span class="line">        -<span class="comment"># 1-9(压缩率)</span></span><br><span class="line">    unxz /PATH/SOMEFILE.xz</span><br><span class="line">    xzcat /PATH/SOMEFILE.xz</span><br><span class="line">4、zip unzip:  </span><br><span class="line">zip FILENAME.zip FILE1 FILE2 ...    </span><br><span class="line">unzip tmp.zip    <span class="comment">#指定解压目录</span></span><br></pre></td></tr></table></figure><h4 id="bash快捷键"><a href="#bash快捷键" class="headerlink" title="bash快捷键"></a>bash快捷键</h4><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>Tab</td><td>命令补全</td></tr><tr><td>Ctrl+E</td><td>移动到行尾</td></tr><tr><td>Ctrl+C</td><td>移动到行首</td></tr><tr><td>Ctrl+L</td><td>清屏</td></tr><tr><td>Ctrl+U</td><td>删除/剪切</td></tr><tr><td>Ctrl+Y</td><td>粘贴</td></tr></tbody></table><h5 id="查询文件的第几行-第几行命令"><a href="#查询文件的第几行-第几行命令" class="headerlink" title="查询文件的第几行-第几行命令"></a>查询文件的第几行-第几行命令</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat file.txt |tail -n +10 |head -n20   <span class="comment"># 从10行开始, 显示20行, 10~29</span></span><br><span class="line">sed -n <span class="string">&#x27;5,10p&#x27;</span> file.txt</span><br></pre></td></tr></table></figure><h5 id="命令提示符颜色更改"><a href="#命令提示符颜色更改" class="headerlink" title="命令提示符颜色更改"></a>命令提示符颜色更改</h5><p>:link:<a href="https://www.cnblogs.com/menlsh/archive/2012/08/27/2659101.html">PS1参考博文</a></p><p>:link:<a href="https://www.cnblogs.com/wt645631686/p/6868694.html">Shell脚本的颜色样式及属性控制</a>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$PS1</span></span><br><span class="line">vim /etc/profile.d/color.sh</span><br><span class="line">PS1=<span class="string">&quot;\[\033[1;5;41;33m\][\u@\h\W\t\!]\\$\[\033[0m\]&quot;</span></span><br><span class="line">\u 当前用户  \H 主机名  \h 主机名简称  \w 当前工作目录</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\e[字体格式;背景色;前景色m字符串\e[0m&quot;</span>  <span class="comment"># \e[0m 关闭所有属性</span></span><br></pre></td></tr></table></figure><img src="/posts/4ac0a166/colorBash.jpg" class title="[PS1]"><h5 id="总结：1位数表示字体显示格式"><a href="#总结：1位数表示字体显示格式" class="headerlink" title="总结：1位数表示字体显示格式"></a>总结：1位数表示字体显示格式</h5><table><thead><tr><th>背景色(4)</th><th>字体色/前景色(3)</th><th>结束其他功能</th></tr></thead><tbody><tr><td>40 黑色</td><td>30m 黑色</td><td>\033[0m 关闭所有属性</td></tr><tr><td>41 红色</td><td>31m 红色</td><td>\033[1m 设置高亮度</td></tr><tr><td>42 绿色</td><td>32m 绿色</td><td>\033[4m 下划线</td></tr><tr><td>43 黄色</td><td>33m 黄色</td><td>\033[5m 闪烁</td></tr><tr><td>44 蓝色</td><td>34m 蓝色</td><td>\033[7m 反显，显示为白底黑字，或黑底白字</td></tr><tr><td>45 紫色</td><td>35m 紫色</td><td>\033[8m 消隐，字符色与背景色相同</td></tr><tr><td>46 浅蓝色</td><td>36m 浅蓝色</td><td>\033[K 清除从光标到行尾的内容</td></tr><tr><td>47 灰色</td><td>37m 灰色</td><td>—</td></tr></tbody></table><h5 id="visudo-man-5-sudoers"><a href="#visudo-man-5-sudoers" class="headerlink" title="visudo (man 5 sudoers)"></a>visudo (man 5 sudoers)</h5><ul><li>用户名/%组名  被管理主机地址=(可使用的身份)   授权命令(绝对路径)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root    ALL=(ALL)    ALL</span><br><span class="line">hadoop  ALL=(root)   NOPASSWD: /usr/sbin/useradd, PASSWD: /usr/sbin/usermod</span><br></pre></td></tr></table></figure><ul><li>alias:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">User_Alias USERADMIN = hadoop, %hadoop, %useradmin</span><br><span class="line">Cmnd_Alias USERADMINCMND = /usr/sbin/useradd, /usr/sbin/usermod, /usr/bin/passwd [a-zA-Z]*, ! /usr/bin/passwd root</span><br><span class="line">USERADMIN  ALL=(root) NOPASSWD: USERADMINCMND</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>ldd(列出文件依赖库文件)  </p><h3 id="返回目录"><a href="#返回目录" class="headerlink" title="返回目录"></a><a href="#back">返回目录</a></h3></li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于开源协议</title>
      <link href="/posts/b83b20cb.html"/>
      <url>/posts/b83b20cb.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-11-关于开源协议</p><a id="more"></a><h3 id="关于开源协议："><a href="#关于开源协议：" class="headerlink" title="关于开源协议："></a>关于开源协议：</h3><ul><li>:point_right: **GNU GPL(GNU General Public License，GNU通用公共许可证)**，协议规则：    </li></ul><img src="/posts/b83b20cb/Gnu-GPL.png" class title="Gnu-GPL"><p><strong><a href="http://www.gnu.org/home.en.html">GNU官方网址</a></strong></p><ul><li><strong>复制自由：</strong>允许把软件复制到任何人的电脑中，并且不限制复制的数量。</li><li><strong>传播自由：</strong>允许软件以各种形式进行传播。</li><li><strong>收费传播：</strong>允许在各种媒介上出售该软件，但必须提前让买家知道这个软件是可以免费获得的；因此，一般来讲，开源软件都是通过为用户提供有偿服务的形式来盈利的。</li><li><strong>修改自由：</strong>允许开发人员增加或删除软件的功能，但软件修改后必须依然基于GPL许可协议授权。</li></ul><ul><li><p>:point_right:**BSD(Berkeley software Distribution，伯克利软件分销)**，协议规则：  </p><img src="/posts/b83b20cb/bsd.png" class title="bsd">  <ul><li>如果再发布的软件中包含源代码，则源代码必须继续遵循BSD许可协议。</li><li>如果再发布的软件中只有二进制程序，则需要在相关文档或版权文件中声明原始代码遵循了BSD协议。</li><li>若软件是基于他人的源代码编写而成的，则需要保留原始代码的协议、商标、专利声明及其他原作者声明的内容信息。</li></ul></li><li><p>A**pache Liscense Version(Apache 许可证版本)**，协议规则：  </p><img src="/posts/b83b20cb/apache.jpg" class title="Apache"><ul><li>该软件及其衍生品必须继续使用Apache许可协议。</li><li>如果修改了程序源代码，需要在文档中进行声明。</li><li>若软件是基于他人的源代码编写而成的，则需要保留原始代码的协议、商标、专利声明及其他原作者声明的内容信息。</li><li>如果再发布的软件中有声明文件，则需在此文件中标注Apache许可协议及其他许可协议。</li></ul></li><li><p>**MPL(Mozliia Public Liscense，Mozliia 公共许可协议)**，相较于GPL许可协议，MPL更加注重对开发者的源代码需求和收益之间的平衡。</p></li><li><p>**MIT(Massachusetts Institute of Technology 许可协议)**，目前限制最少的开源许可协议之一，只要程序的开发者在修改后的源代码中保留原作者的许可信息即可，因此普遍被商业软件所使用。</p></li></ul><h3 id="关于Linux发行版本类型："><a href="#关于Linux发行版本类型：" class="headerlink" title="关于Linux发行版本类型："></a>关于Linux发行版本类型：</h3><ul><li><p><strong>RedHat Enterprise Linux，RHEL</strong>(红帽企业版Linux)：红帽公司是全球最大的开源技术厂商，RHEL是全世界内使用最广泛的Linux系统。  </p><img src="/posts/b83b20cb/redhat.png" class title="RedHat"></li><li><p><strong>Community Enterprise Operating System，CentOS</strong>(社区企业操作系统)：通过把RHEL系统重新编译并发布给用户免费使用的Linux系统。  </p><img src="/posts/b83b20cb/centos-150x150.jpg" class title="CentOS">  </li><li><p><strong>Fedora</strong>：由红帽公司发布的桌面版系统套件，用户可免费体验到最新的技术或工具，这些技术或工具在成熟后会被加入到RHEL系统中，因此Fedora也称为RHEL系统的“试验田”。  </p><img src="/posts/b83b20cb/fedora-e1422160855872.png" class title="Fedora">  </li><li><p><strong>openSUSE</strong>：源自德国的一款著名的Linux系统。  </p><img src="/posts/b83b20cb/OpenSUSE-300x193.png" class title="openSUSE">    </li><li><p><strong>Gentoo</strong>：具有极高的自定制性，操作复杂，因此适合有经验的人员使用。  </p><img src="/posts/b83b20cb/Gentoo-287x300.png" class title="Gentoo">    </li><li><p><strong>Debian</strong>：稳定性、安全性强，提供了免费的基础支持，可以<strong>良好地支持各种硬件架构</strong>，以及提供近十万种不同的开源软件，在国外拥有很高的认可度和使用率。  </p><img src="/posts/b83b20cb/debian.png" class title="Debian">  </li><li><p><strong>Ubuntu</strong>：<em>一款派生自Debian的操作系统</em>，<em>对新款硬件具有极强的兼容能力</em>。Ubuntu与Fedora都是极其出色的Linux桌面系统，而且Ubuntu也可用于服务器领域。  </p><img src="/posts/b83b20cb/ubuntu.png" class title="Ubuntu">  </li></ul>]]></content>
      
      
      <categories>
          
          <category> 开源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 开源协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim</title>
      <link href="/posts/104c461b.html"/>
      <url>/posts/104c461b.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-10-VIM</p><a id="more"></a><h3 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h3><h4 id="移动光标："><a href="#移动光标：" class="headerlink" title="移动光标："></a>移动光标：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">h 左  ✔      </span><br><span class="line">j 下  ✔  </span><br><span class="line">k 上  ✔   <span class="comment">#9k 向上移动9行   </span></span><br><span class="line">l 右  ✔</span><br></pre></td></tr></table></figure><h4 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">w 跳至下一个单词词首           <span class="comment"># 3w  ✔</span></span><br><span class="line">b 跳至当前或前一个单词词首      <span class="comment"># backword  ✔</span></span><br><span class="line">e 跳至当前或后一个单词词首      <span class="comment"># end of word  ✔</span></span><br><span class="line">ge: 移动到前一个word的最后一个字符上  </span><br><span class="line">W 空白为分界的WORDs为单位进行移动  </span><br><span class="line">gg 移动到文件头  ✔</span><br><span class="line">G 移动到文件尾  ✔</span><br><span class="line"></span><br><span class="line">0 移动到当前行的第一个字符上   ✔  </span><br><span class="line">^ 移动到当前行的第一个非空白字符上</span><br><span class="line">$ 移动到当前行行尾             <span class="comment"># 2$  ✔</span></span><br><span class="line">:start_pos,end_pos 指定到第n行  ✔  </span><br><span class="line"></span><br><span class="line">fx 单字符搜索命令                <span class="comment"># 3fh ✔  </span></span><br></pre></td></tr></table></figure><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x<span class="comment">#3x 删除3个字符 ✔</span></span><br><span class="line">dd  ✔  </span><br><span class="line">  :n1,n2d  </span><br><span class="line">  dw</span><br><span class="line">y yy 复制  </span><br><span class="line">p 粘贴到光标后(小写)   </span><br><span class="line">P 粘贴到光标前(大写) </span><br></pre></td></tr></table></figure><h4 id="撤销和重做："><a href="#撤销和重做：" class="headerlink" title="撤销和重做："></a>撤销和重做：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">u 撤销最后一次删除  ✔   </span><br><span class="line">U 一次撤消对一行的全部操  </span><br><span class="line">Ctrl+r 反转撤销</span><br><span class="line">. 重复前一次编辑操作</span><br></pre></td></tr></table></figure><h4 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#当前页跳转</span></span><br><span class="line">H<span class="comment">#页首</span></span><br><span class="line">M<span class="comment">#页中</span></span><br><span class="line">L<span class="comment">#页底</span></span><br><span class="line">ZZ<span class="comment">#保存退出</span></span><br><span class="line">ZQ<span class="comment">#不保存退出   </span></span><br></pre></td></tr></table></figure><h4 id="扩展命令模式"><a href="#扩展命令模式" class="headerlink" title="扩展命令模式"></a>扩展命令模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">:q:q!</span><br><span class="line">:wq:x</span><br><span class="line">r filename<span class="comment">#读文件到当前文件</span></span><br><span class="line">w filename<span class="comment">#当前文件写入另一个文件</span></span><br><span class="line">!<span class="built_in">command</span><span class="comment">#执行命令</span></span><br><span class="line">r!<span class="built_in">command</span><span class="comment">#读入命令的输出</span></span><br></pre></td></tr></table></figure><h4 id="查找-替换："><a href="#查找-替换：" class="headerlink" title="查找/替换："></a>查找/替换：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">:/string<span class="comment">#搜索一个字符串(向尾部)   </span></span><br><span class="line">:?string<span class="comment">#(向头部) </span></span><br><span class="line">  n<span class="comment">#与命令同方向</span></span><br><span class="line">  N<span class="comment">#与命令反方向</span></span><br><span class="line">:1,10s/old/new/g   </span><br><span class="line">  :%s@^[^<span class="comment">#]@#&amp;@     #注释</span></span><br><span class="line">  :%s/old/new/g     <span class="comment">#% 全文, g 全局</span></span><br><span class="line">  <span class="comment">#查找替换中的分隔符/可替换为其他字符</span></span><br><span class="line">  :s/xyz/&amp;er/g</span><br><span class="line">r<span class="comment">#替换光标所在处的字符</span></span><br></pre></td></tr></table></figure><h4 id="多窗口操作"><a href="#多窗口操作" class="headerlink" title="多窗口操作"></a>多窗口操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">多文件分割:</span><br><span class="line">  vim -o|-O FILE1 FILE2...</span><br><span class="line">  -o<span class="comment">#水平分割</span></span><br><span class="line">  -O<span class="comment">#垂直分割</span></span><br><span class="line">  :next :prev :last :first</span><br><span class="line">  Ctrl+w, Arrow<span class="comment">#在窗口间切换</span></span><br><span class="line">单文件窗口切换:</span><br><span class="line">  Ctrl+w,s split<span class="comment">#水平分割</span></span><br><span class="line">  Ctrl+w,v vertical<span class="comment">#垂直分割</span></span><br><span class="line">  Ctrl+w,q<span class="comment">#取消相邻窗口</span></span><br><span class="line">  Ctrl+w,o<span class="comment">#取消全部窗口</span></span><br><span class="line">  :wqall<span class="comment">#退出</span></span><br></pre></td></tr></table></figure><h4 id="VIM配置文件-vimrc"><a href="#VIM配置文件-vimrc" class="headerlink" title="VIM配置文件.vimrc"></a>VIM配置文件.vimrc</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">全局: /etc/vimrc</span><br><span class="line">局部: ~/.vimrc</span><br><span class="line"><span class="built_in">set</span> nu<span class="comment">#显示行号</span></span><br><span class="line"><span class="built_in">set</span> ic<span class="comment">#忽略字符的大小写</span></span><br><span class="line"><span class="built_in">set</span> ai<span class="comment">#自动缩进,autoindent</span></span><br><span class="line"><span class="built_in">set</span> si<span class="comment">#智能缩进,smartindent</span></span><br><span class="line"><span class="built_in">set</span> hlsearch<span class="comment">#高亮搜索显示</span></span><br><span class="line"><span class="built_in">set</span> syntax on <span class="comment">#语法高亮</span></span><br><span class="line"><span class="built_in">set</span> list <span class="comment">#显示Tab和换行符</span></span><br><span class="line"><span class="built_in">set</span> fileformat=dos<span class="comment">#启用win文件格式</span></span><br><span class="line"><span class="built_in">set</span> fileformat=unix</span><br><span class="line"><span class="built_in">set</span> ff=dos|unix</span><br><span class="line"><span class="built_in">set</span> textwidth=65<span class="comment">#设置文本宽度</span></span><br><span class="line"><span class="built_in">set</span> wrapmargin=15</span><br><span class="line"><span class="built_in">set</span> cursorline<span class="comment">#设置光标所在行的标识线</span></span><br><span class="line"><span class="built_in">set</span> paste <span class="comment">#复制保留格式</span></span><br><span class="line"></span><br><span class="line">:<span class="built_in">help</span> <span class="built_in">command</span></span><br><span class="line">vimtutor</span><br></pre></td></tr></table></figure><img src="/posts/104c461b/VIM01.jpg" class title="[VIM01]"> <img src="/posts/104c461b/vim%E5%91%BD%E4%BB%A4%E5%B0%8F%E6%8A%84.jpg" class title="[VIM02]"> <img src="/posts/104c461b/VIM03.png" class title="[VIM03]">   ]]></content>
      
      
      <categories>
          
          <category> vim </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Adobe</title>
      <link href="/posts/3e6df65f.html"/>
      <url>/posts/3e6df65f.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-09-Adobe</p><a id="more"></a><h3 id="1-关于-Adobe-Photoshop-快捷键"><a href="#1-关于-Adobe-Photoshop-快捷键" class="headerlink" title="1.关于 Adobe Photoshop 快捷键"></a>1.关于 Adobe Photoshop 快捷键</h3><h4 id="应用程序菜单："><a href="#应用程序菜单：" class="headerlink" title="应用程序菜单："></a>应用程序菜单：</h4><ul><li><p>编辑：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">自由变换：Ctrl+T</span><br><span class="line">常规：Ctrl+K</span><br></pre></td></tr></table></figure></li><li><p>图像：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">色阶：Ctrl+L</span><br><span class="line">曲线：Ctrl+M</span><br><span class="line">反相：Ctrl+I</span><br><span class="line">色相&#x2F;饱和度：Ctrl+U</span><br><span class="line">色彩平衡：Ctrl+B</span><br></pre></td></tr></table></figure></li><li><p>图层：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">新建图层：Shift+Ctrl+N</span><br><span class="line">通过拷贝的图层：Ctrl+J</span><br><span class="line">图层编组：Ctrl+G</span><br><span class="line">取消图层编组：Shift+Ctrl+G</span><br><span class="line">合并图层：Ctrl+E</span><br></pre></td></tr></table></figure></li><li><p>选择：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">取消选择：Ctrl+D</span><br><span class="line">反选：Shift+Ctrl+I  </span><br><span class="line">单独查看图层：Alt+Eye</span><br></pre></td></tr></table></figure></li><li><p>工具：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">移动工具：V</span><br><span class="line">矩形工具：M</span><br><span class="line">魔棒工具：W</span><br><span class="line">吸管工具：I</span><br><span class="line">抓手工具：H</span><br><span class="line">默认前景色&#x2F;背景色：D</span><br><span class="line">切换前景色&#x2F;背景色：X</span><br><span class="line">切换屏幕模式：F</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> CRH </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Adobe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL基础命令</title>
      <link href="/posts/5b397e67.html"/>
      <url>/posts/5b397e67.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-09-SQL基础命令</p><a id="more"></a><h3 id="Basic-SQL-Commands"><a href="#Basic-SQL-Commands" class="headerlink" title="Basic SQL Commands:"></a>Basic SQL Commands:</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span><span class="keyword">SELECT</span>  <span class="keyword">INSERT</span>  <span class="keyword">CREATE</span>  <span class="keyword">UPDATE</span>  <span class="keyword">DELETE</span>  <span class="keyword">GRANT</span><span class="keyword">REVOKE</span><span class="keyword">CREATE</span>  </span><br></pre></td></tr></table></figure><h4 id="CREATE"><a href="#CREATE" class="headerlink" title="CREATE"></a>CREATE</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> [<span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] db_name [<span class="keyword">DEFAULT</span>] <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> [=] charset_name;</span><br></pre></td></tr></table></figure><h4 id="SHOW"><a href="#SHOW" class="headerlink" title="SHOW"></a>SHOW</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">databases</span>;</span><br><span class="line"><span class="comment">/* The SQL SHOW statement displays information contained in the database and its tables.*/</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">TABLES</span>;</span><br><span class="line"><span class="comment">/* The SHOW TABLES command is used to display all of the tables in the currently selected MySQL database.*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tbl_name;<span class="comment">#查看创建表的语句</span></span><br></pre></td></tr></table></figure><h4 id="SELECT"><a href="#SELECT" class="headerlink" title="SELECT"></a>SELECT</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* The SELECT statement is used to select data from a database.*/</span></span><br><span class="line"><span class="keyword">SELECT</span> column_list <span class="keyword">FROM</span> tbl_name;</span><br><span class="line">  <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> &lt;表名&gt;;</span><br><span class="line">  eg1. <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> customers;</span><br><span class="line">  | ID | FirstName | LastName |     City    | ZipCode | Age |</span><br><span class="line">  |<span class="comment">----|-----------|----------|-------------|---------|-----|</span></span><br><span class="line">  |  1 | John      | Smith    | NewYork     |   10199 |  21 |</span><br><span class="line">  |  2 | David     | Williams | Los Angeles |   90052 |  22 |</span><br><span class="line">  |  3 | Chole     | Anderson | Chicago     |   60607 |  24 |</span><br><span class="line">  |  4 | Emily     | Adams    | Houston     |   77201 |  23 |</span><br><span class="line"></span><br><span class="line">  eg2. <span class="keyword">SELECT</span> FirstName,LastName,City <span class="keyword">FROM</span> customers;</span><br><span class="line">  | ID | FirstName | LastName |     City    |</span><br><span class="line">  |<span class="comment">----|-----------|----------|-------------|</span></span><br><span class="line">  |  1 | John      | Smith    | NewYork     |</span><br><span class="line">  |  2 | David     | Williams | Los Angeles |</span><br><span class="line">  |  3 | Chole     | Anderson | Chicago     | </span><br><span class="line">  |  4 | Emily     | Adams    | Houston     |</span><br><span class="line"></span><br><span class="line"><span class="comment">/* The SQL DISTINCT keyword is used in conjunction with SELECT to eliminate all duplicate records and return only unique ones.(不选择重复的数据).*/</span></span><br><span class="line">  eg1. <span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> column_name1, column_name2 <span class="keyword">FROM</span> tbl_name;  </span><br><span class="line">  | ID | FirstName | LastName |     City    |</span><br><span class="line">  |<span class="comment">----|-----------|----------|-------------|</span></span><br><span class="line">  |  1 | John      | Smith    | NewYork     |</span><br><span class="line">  |  2 | David     | Williams | Los Angeles |</span><br><span class="line">  |  3 | Chole     | Anderson | Chicago     |</span><br><span class="line">  |  4 | Emily     | Adams    | Houston     |</span><br><span class="line">  |  5 | Yue       | Xing     | NewYork     |</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Sometimes we need to retrieve just a subset of records(限制选择数据条数).*/</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> <span class="keyword">column</span> <span class="keyword">list</span> <span class="keyword">FROM</span> table_name <span class="keyword">LIMIT</span> [<span class="built_in">number</span> <span class="keyword">of</span> <span class="keyword">records</span>];  </span><br><span class="line">  eg. <span class="keyword">SELECT</span> <span class="keyword">ID</span>, FirstName, LastName, City <span class="keyword">FROM</span> customers <span class="keyword">LIMIT</span> <span class="number">3</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">/* 从第2个位置开始拾取3条记录：(计数由0开始).*/</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> <span class="keyword">ID</span>, FirstName, LastName, City <span class="keyword">FROM</span> customers <span class="keyword">LIMIT</span> <span class="number">1</span>,<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* In SQL, you can provide the table name prior to the column name, by separating them with a dot.The following statements are equivalent:*/</span>  </span><br><span class="line">  eg. <span class="keyword">SELECT</span> City <span class="keyword">FROM</span> customers;</span><br><span class="line">  eg. <span class="keyword">SELECT</span> customers.City <span class="keyword">FROM</span> customers;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ORDER BY is used with SELECT to sort the returned data.*/</span> </span><br><span class="line">  eg. <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> customers <span class="keyword">ORDER</span> <span class="keyword">BY</span> FirstName,Age;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">databases</span>();</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">version</span>();</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">now</span>();</span><br></pre></td></tr></table></figure><h4 id="WHERE"><a href="#WHERE" class="headerlink" title="WHERE"></a>WHERE</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* The WHERE clause is used to extract only those records that fulfill a specified criterion.*/</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> column_list <span class="keyword">FROM</span> table_name <span class="keyword">WHERE</span> condition;</span><br><span class="line">  eg. <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> customers <span class="keyword">WHERE</span> <span class="keyword">ID</span> = <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* SQL Operators:</span></span><br><span class="line"><span class="comment">     | Operator | Describtion               |</span></span><br><span class="line"><span class="comment">     |----------|---------------------------|</span></span><br><span class="line"><span class="comment">     | =        | equal                     |</span></span><br><span class="line"><span class="comment">     | !=       | Not equal                 |</span></span><br><span class="line"><span class="comment">     | &gt;        | Greater than              |</span></span><br><span class="line"><span class="comment">     | &lt;        | Less than                 |</span></span><br><span class="line"><span class="comment">     | &gt;=       | Greater than or equal     |</span></span><br><span class="line"><span class="comment">     | &lt;=       | Less than or equal        |</span></span><br><span class="line"><span class="comment">     | BETWEEN  | between an inclusiverange |</span></span><br><span class="line"><span class="comment">     | AND      | ----                      |</span></span><br><span class="line"><span class="comment">     | OR       | ----                      |</span></span><br><span class="line"><span class="comment">     | IN       | ----                      |</span></span><br><span class="line"><span class="comment">     | NOT      | ---                       |</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"></span><br><span class="line">  eg. <span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name <span class="keyword">WHERE</span> column_name <span class="keyword">BETWEEN</span> value1 <span class="keyword">AND</span> value2;</span><br><span class="line">  eg. <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> customers <span class="keyword">WHERE</span> <span class="keyword">ID</span> <span class="keyword">BETWEEN</span> <span class="number">3</span> <span class="keyword">AND</span> <span class="number">7</span>;</span><br><span class="line">  eg. <span class="keyword">SELECT</span> <span class="keyword">ID</span>, FirstName <span class="keyword">FROM</span> customers <span class="keyword">WHERE</span> City = <span class="string">&#x27;New York&#x27;</span>;</span><br><span class="line">  eg. <span class="keyword">SELECT</span> <span class="keyword">ID</span>, Age <span class="keyword">FROM</span> customers <span class="keyword">WHERE</span> Age &gt;= <span class="number">30</span> <span class="keyword">AND</span> Age &lt;= <span class="number">40</span>;</span><br><span class="line">  eg. <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> customers <span class="keyword">WHERE</span> City = <span class="string">&#x27;New York&#x27;</span> <span class="keyword">AND</span> (Age=<span class="number">30</span> <span class="keyword">OR</span> Age=<span class="number">35</span>);</span><br><span class="line">  eg. <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> customers <span class="keyword">WHERE</span> City <span class="keyword">IN</span> (<span class="string">&#x27;New York&#x27;</span>, <span class="string">&#x27;Los Angeles&#x27;</span>);</span><br><span class="line">  eg. <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> customers <span class="keyword">WHERE</span> City <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="string">&#x27;New York&#x27;</span>, <span class="string">&#x27;Los Angeles&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="CONCAT"><a href="#CONCAT" class="headerlink" title="CONCAT()"></a>CONCAT()</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* The CONCAT function is used to concatenate two or more text values and returns the concatenating string.*/</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(FirstName, <span class="string">&#x27;, &#x27;</span> , City) <span class="keyword">FROM</span> customers; </span><br><span class="line">  | CONCAT(FirstName,&#x27;,&#x27;,City) |</span><br><span class="line">  |<span class="comment">----------------------------|</span></span><br><span class="line">  | John,NewYork               |</span><br><span class="line">  | David,Los Angeles          |</span><br><span class="line">  | Chole,Chicado              |</span><br></pre></td></tr></table></figure><h4 id="AS"><a href="#AS" class="headerlink" title="AS"></a>AS</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* A concatenation results in a new column. The default column name will be the CONCAT function.You can assign a custom name to the resulting.*/</span></span><br><span class="line">  column using the AS keyword:</span><br><span class="line">  eg. <span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(FirstName,<span class="string">&#x27;, &#x27;</span>, City) <span class="keyword">AS</span> new_column <span class="keyword">FROM</span> customers;</span><br><span class="line">  eg. <span class="keyword">SELECT</span> <span class="keyword">ID</span>, FirstName, LastName, Salary+<span class="number">500</span> <span class="keyword">AS</span> Salary <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><h4 id="Function"><a href="#Function" class="headerlink" title="Function: "></a>Function: <a id="function" target="_self"></a></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* The UPPER function converts all letters in the specified string to uppercase.*/</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">/* The LOWER function converts the string to lowercase.*/</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> FirstName, <span class="keyword">UPPER</span>(LastName) <span class="keyword">AS</span> LastName <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* The SQRT function returns the square root of given value in the argument.*/</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> Salary, <span class="keyword">SQRT</span>(Salary) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Similarly, the AVG function returns the average value of a numeric column:*/</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> <span class="keyword">AVG</span>(Salary) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* The SUM function is used to calculate the sum for a column 的 values.*/</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> <span class="keyword">SUM</span>(Salary) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* DESC:递减排列(子查询) / ASC:升序排列*/</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> <span class="keyword">AVG</span>(Salary) <span class="keyword">FROM</span> employees;</span><br><span class="line">  eg. <span class="keyword">SELECT</span> FirstName，Salary <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> Salary&gt;<span class="number">3100</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> Salary <span class="keyword">DESC</span>; </span><br><span class="line">  eg. <span class="keyword">SELECT</span> FirstName，Salary <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> Salary&gt;(<span class="keyword">SELECT</span> <span class="keyword">AVG</span>（Salary) <span class="keyword">FROM</span> employees）<span class="keyword">ORDER</span> <span class="keyword">BY</span> Salary <span class="keyword">DESC</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">/* The LIKE keyword is useful when specifying a search condition within your WHERE clause.*/</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> LastName <span class="keyword">LIKE</span> <span class="string">&#x27;%s&#x27;</span>; <span class="comment">/* 以s结尾的*/</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> FirstName <span class="keyword">LIKE</span> <span class="string">&#x27;A%&#x27;</span>; <span class="comment">/* 以A开头的*/</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> LastName <span class="keyword">LIKE</span> <span class="string">&#x27;_A&#x27;</span>;  </span><br><span class="line"><span class="comment">/* 2个字符*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* The MIN function is used to return the minimum value of an expression in a SELECT statement.*/</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> <span class="keyword">MIN</span>(Salary) <span class="keyword">AS</span> Salary <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><h4 id="JOIN"><a href="#JOIN" class="headerlink" title="JOIN:"></a>JOIN:</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* To join the two tables, specify them as a comma-separated list in the FROM clause:*/</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> customers.ID, customers.Name, orders.Name, orders.Amount <span class="keyword">FROM</span> customers, orders <span class="keyword">WHERE</span> customers.ID=orders.Customer_ID <span class="keyword">ORDER</span> <span class="keyword">BY</span> customers.ID;   </span><br><span class="line"></span><br><span class="line">            customers table</span><br><span class="line">  | ID  | Name  |     City     | Age |</span><br><span class="line">  | <span class="comment">--- | ----- | ------------ | --- |</span></span><br><span class="line">  | 1   | John  | New York     | 35  |</span><br><span class="line">  | 2   | David | Los Angeles  | 23  |</span><br><span class="line">  | 3   | Chole | Chicago      | 27  |</span><br><span class="line">  | 4   | Emily | Houston      | 34  |</span><br><span class="line">  | 5   | James | Philadelphia | 31  |</span><br><span class="line"></span><br><span class="line">    orders table</span><br><span class="line">  | ID |  Name   | Customer_ID | Amount |</span><br><span class="line">  |<span class="comment">----|---------|-------------|----------|</span></span><br><span class="line">  |  1 | Book    |           3 |     5000 |</span><br><span class="line">  |  2 | Box     |           5 |     3000 |</span><br><span class="line">  |  3 | Toy     |           2 |     4500 |</span><br><span class="line">  |  4 | Flowers |           4 |     1800 |</span><br><span class="line">  |  5 | Cake    |           1 |     6700 |</span><br><span class="line"></span><br><span class="line">    Joining Tables</span><br><span class="line">  | ID |  Name |   Name  | Amount |</span><br><span class="line">  |<span class="comment">----|-------|---------|--------|</span></span><br><span class="line">  |  1 | John  | Cake    |   6700 |</span><br><span class="line">  |  2 | David | Toy     |   4500 |</span><br><span class="line">  |  3 | Chole | Book    |   5000 |</span><br><span class="line">  |  4 | Emoly | Flowers |   1800 |</span><br><span class="line">  |  5 | James | Box     |   3000 |</span><br><span class="line"></span><br><span class="line"><span class="comment">/* AS*/</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> customers.ID, customers.Name, orders.Name, orders.Amount <span class="keyword">FROM</span> customers <span class="keyword">AS</span> ct, orders <span class="keyword">AS</span> <span class="keyword">ord</span> <span class="keyword">WHERE</span> ct.ID=ord.Customer_ID <span class="keyword">ORDER</span> <span class="keyword">BY</span> ct.ID;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># INNER JOIN 相当于 JOIN</span></span><br><span class="line">    eg. <span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table1 <span class="keyword">INNER</span> <span class="keyword">JOIN</span> table2 <span class="keyword">ON</span> table1.column_name=table2.column_name;</span><br><span class="line">  <span class="comment"># LEFT JOIN  LEFT JOIN返回左表中的所有行，即使右表中没有匹配项也是如此</span></span><br><span class="line">    eg. <span class="keyword">SELECT</span> table1.column1, table2.column2...FROM table1 <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> table2 <span class="keyword">ON</span> table1.column_name = table2.column_name;</span><br><span class="line">  <span class="comment"># RIGHT JOIN 即使左表中没有匹配项，RIGHT JOIN也会返回右表中的所有行</span></span><br><span class="line">    eg. <span class="keyword">SELECT</span> table1.column1, table2.column2...FROM table1 <span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> table2 <span class="keyword">ON</span> table1.column_name = table2.column_name;</span><br><span class="line"><span class="comment"># 3)UNION:UNION运算符用于组合两个或多个SELECT语句的结果集</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table1 <span class="keyword">UNION</span> <span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table2;</span><br><span class="line"><span class="comment"># 4)UNION ALL:UNION ALL选择每个表中的所有行并将它们组合成一个表</span></span><br><span class="line">  eg. <span class="keyword">SELECT</span> <span class="keyword">ID</span>, FirstName, LastName, City <span class="keyword">FROM</span> <span class="keyword">First</span> <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> <span class="keyword">ID</span>, FirstName, LastName, City <span class="keyword">FROM</span> <span class="keyword">Second</span>;</span><br></pre></td></tr></table></figure><h4 id="INSERT"><a href="#INSERT" class="headerlink" title="INSERT"></a>INSERT</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名 (列名<span class="number">1</span>,列名<span class="number">2</span>,...) <span class="keyword">VALUES</span> (列值<span class="number">1</span>,列值<span class="number">2</span>,...);</span><br><span class="line">eg. <span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name <span class="keyword">VALUES</span>(value1, value2, value3,...);</span><br><span class="line">eg. <span class="keyword">INSERT</span> <span class="keyword">INTO</span> Employees <span class="keyword">VALUES</span>(<span class="number">8</span>, <span class="string">&#x27;Anthony&#x27;</span>, <span class="string">&#x27;Young&#x27;</span>, <span class="number">35</span>);</span><br><span class="line"></span><br><span class="line">eg. <span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name (column1, column2, column3, ...,columnN)  <span class="keyword">VALUES</span> (value1, value2, value3,...valueN);</span><br><span class="line">eg. <span class="keyword">INSERT</span> <span class="keyword">INTO</span> Employees (<span class="keyword">ID</span>, FirstName, LastName, Age) <span class="keyword">VALUES</span> (<span class="number">8</span>, <span class="string">&#x27;Anthony&#x27;</span>, <span class="string">&#x27;Young&#x27;</span>, <span class="number">35</span>);</span><br></pre></td></tr></table></figure><h4 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE"></a>UPDATE</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> 表名 <span class="keyword">SET</span> 列名=值 <span class="keyword">where</span> 条件;</span><br><span class="line">eg. <span class="keyword">UPDATE</span> tbl_name <span class="keyword">SET</span> column1=value1, column2=value2, ... <span class="keyword">WHERE</span> condition;       </span><br><span class="line">eg. <span class="keyword">UPDATE</span> Employees <span class="keyword">SET</span> Salary=<span class="number">5000</span> <span class="keyword">WHERE</span> <span class="keyword">ID</span>=<span class="number">1</span>; </span><br></pre></td></tr></table></figure><h4 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eg. DELETE FROM tbl_name WHERE condition;</span><br><span class="line">eg. DELETE FROM Employees WHERE ID&#x3D;1;</span><br></pre></td></tr></table></figure><h4 id="CREATE-TABLES"><a href="#CREATE-TABLES" class="headerlink" title="CREATE TABLES"></a>CREATE TABLES</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &lt;表名&gt; </span><br><span class="line">(</span><br><span class="line">列名<span class="number">1</span> 数据类型[列级别约束条件][<span class="keyword">default</span>],</span><br><span class="line">    列名<span class="number">2</span> 数据类型[列级别约束条件][<span class="keyword">default</span>],</span><br><span class="line">    ...</span><br><span class="line">    [表级别约束条件]</span><br><span class="line">);</span><br><span class="line">eg. <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table_name(</span><br><span class="line">  column_name1 data_type(<span class="keyword">size</span>),</span><br><span class="line">  column_name2 data_type(<span class="keyword">size</span>),</span><br><span class="line">  column_name3 data_type(<span class="keyword">size</span>),</span><br><span class="line">  ....</span><br><span class="line">  column_Nu data_type(<span class="keyword">size</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">eg. <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">Users</span>(</span><br><span class="line">     UserID <span class="built_in">int</span>,</span><br><span class="line">     FirstName <span class="built_in">varchar</span>(<span class="number">100</span>), </span><br><span class="line">     LastName <span class="built_in">varchar</span>(<span class="number">100</span>),</span><br><span class="line">    City <span class="built_in">varchar</span>(<span class="number">100</span>),</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span>(UserID)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">eg. <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> testDB(</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">key</span>,         <span class="comment"># primary key(id)</span></span><br><span class="line">  <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">45</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">&#x27;student name&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="ALTER-用于添加，删除或修改现有表中的列"><a href="#ALTER-用于添加，删除或修改现有表中的列" class="headerlink" title="ALTER: 用于添加，删除或修改现有表中的列"></a>ALTER: 用于添加，删除或修改现有表中的列</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &lt;表名&gt; <span class="keyword">ADD</span> (&lt;列名&gt; &lt;类型&gt;,&lt;列名&gt; &lt;类型&gt;,...) [约束条件] [<span class="keyword">FIRST</span> | <span class="keyword">AFTER</span> 已存在列名];</span><br><span class="line">eg. <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> People <span class="keyword">ADD</span> DateOfBirth <span class="built_in">varchar</span>(<span class="number">50</span>);</span><br><span class="line">  上述SQL代码People表中添加一个名为DateOfBirth的新列</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &lt;表名&gt; <span class="keyword">DROP</span> &lt;列名&gt;;</span><br><span class="line">eg. <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> People <span class="keyword">DROP</span> DateOfBirth;</span><br><span class="line">  上述SQL代码删除People表中名为DateOfBirth的列。</span><br><span class="line"></span><br><span class="line">eg. <span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> People,People1;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASES</span> [<span class="keyword">IF</span> EXITSTS] db_name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &lt;表名&gt; <span class="keyword">CHANGE</span> &lt;旧列名&gt; &lt;新列名&gt; &lt;新数据类型&gt;;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &lt;表名&gt; <span class="keyword">MODIFY</span> &lt;列名&gt; &lt;列类型&gt; [<span class="keyword">FIRST</span>|<span class="keyword">AFTER</span>] &lt;列<span class="number">2</span>&gt;;</span><br><span class="line">eg. <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> People <span class="keyword">CHANGE</span> FirstName <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &lt;旧表名&gt; <span class="keyword">RENAME</span> [<span class="keyword">TO</span>] &lt;新表名&gt;;</span><br><span class="line">eg. <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> People <span class="keyword">RENAME</span> <span class="keyword">TO</span> <span class="keyword">Users</span>;</span><br><span class="line">  上述SQL代码重命名列</span><br><span class="line">  </span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASES</span> db_name [<span class="keyword">DEFAULT</span>] <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> [=] charset_name</span><br><span class="line">eg. <span class="keyword">ALTER</span> <span class="keyword">databases</span> test2 <span class="built_in">character</span> <span class="keyword">set</span> latin1;</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">&#x27;character%&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h3><h4 id="约束介绍"><a href="#约束介绍" class="headerlink" title="约束介绍"></a>约束介绍</h4><table><thead><tr><th>约束类型</th><th>非空约束</th><th>主键约束</th><th>唯一约束</th><th>默认约束</th><th>外键约束</th></tr></thead><tbody><tr><td>关键字</td><td>NOT NULL</td><td>PRIMARY KEY</td><td>UNIQUE</td><td>DEFAULT</td><td>FOREIGN KEY</td></tr></tbody></table><h4 id="NOT-NULL"><a href="#NOT-NULL" class="headerlink" title="NOT NULL"></a>NOT NULL</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*创建表时加非空约束*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> bookinfo(</span><br><span class="line">book_id <span class="built_in">int</span>,</span><br><span class="line">    book_name <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">/*修改表*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> bookinfo <span class="keyword">MODIFY</span> book_name <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="PRIMARY-KEY"><a href="#PRIMARY-KEY" class="headerlink" title="PRIMARY KEY"></a>PRIMARY KEY</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*单字段*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> bookinfo(</span><br><span class="line">book_id <span class="built_in">int</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">    book_name <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">    <span class="comment">/*CONSTRAINT pk_id PRIMARY KEY (book_id)*/</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">/*复合主键*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> bookinfo(</span><br><span class="line">book_id <span class="built_in">int</span>,</span><br><span class="line">    book_name <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span>(book_id,card_id)</span><br><span class="line">);</span><br><span class="line"><span class="comment">/*修改主键*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> bookinfo <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span>(book_id);</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> bookinfo <span class="keyword">MODIFY</span> book_id <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> bookinfo <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> PK_ID PRIMARY <span class="keyword">KEY</span>(book_id);</span><br><span class="line"><span class="comment">/*删除主键*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> bookinfo <span class="keyword">DROP</span> PRIMARY <span class="keyword">KEY</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="UNIQUE"><a href="#UNIQUE" class="headerlink" title="UNIQUE"></a>UNIQUE</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> bookinfo(</span><br><span class="line">book_id <span class="built_in">int</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">    book_name <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="comment">/*CONSTRAINT uk_bname UNIQUE (book_id)*/</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">/*删除主键*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> bookinfo <span class="keyword">DROP</span> <span class="keyword">KEY</span> uk_bname;</span><br></pre></td></tr></table></figure><h4 id="FOREIGN-KEY"><a href="#FOREIGN-KEY" class="headerlink" title="FOREIGN KEY"></a>FOREIGN KEY</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*创建外键*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> bookcategory(</span><br><span class="line">category_id <span class="built_in">int</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">    <span class="keyword">category</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    parent_id <span class="built_in">int</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> bookinfo(</span><br><span class="line">book_id <span class="built_in">int</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">    book_category_id <span class="built_in">int</span>,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> fk_cid <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (book_category_id) <span class="keyword">REFERENCES</span> bookcategory (category_id) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span>;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> bookinfo <span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> fk_cid;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> bookinfo <span class="keyword">ADD</span> <span class="keyword">FOREIGN</span>  <span class="keyword">KEY</span> (book_category_id) <span class="keyword">REFERENCE</span> bookcategory (category_id);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*CASCADE 从父表删除或更新且自动删除或更新子表中匹配的行*/</span></span><br></pre></td></tr></table></figure><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> 用户名@IP地址 <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">&#x27;密码&#x27;</span>; <span class="comment"># 指定的IP上登陆</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> 用户名@<span class="string">&#x27;%&#x27;</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">&#x27;密码&#x27;</span>;    <span class="comment"># 登陆不限定IP</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> 用户名@IP地址;</span><br></pre></td></tr></table></figure><h4 id="授权-查看权限-解除权限"><a href="#授权-查看权限-解除权限" class="headerlink" title="授权/查看权限/解除权限"></a>授权/查看权限/解除权限</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> 权限<span class="number">1</span>,...权限n <span class="keyword">ON</span> 数据库.* <span class="keyword">TO</span> 用户名@IP地址;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> 数据库.* <span class="keyword">TO</span> 用户名@IP地址;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GRANTS</span> <span class="keyword">FOR</span> 用户名@IP地址;</span><br><span class="line"></span><br><span class="line"><span class="keyword">REVOKE</span> 权限<span class="number">1</span>,...权限n <span class="keyword">ON</span> 数据库.* <span class="keyword">FROM</span> 用户名@IP地址;</span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> 数据库.* <span class="keyword">FROM</span> 用户名@IP地址;</span><br></pre></td></tr></table></figure><h3 id="忘记密码问题解决"><a href="#忘记密码问题解决" class="headerlink" title="忘记密码问题解决"></a>忘记密码问题解决</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">service mysql stop </span><br><span class="line">mysqld_safe --user=mysql --skip-grant-tables --skip-networking &amp;   <span class="comment"># 跳过授权表模式  </span></span><br><span class="line">mysql -uroot -p    <span class="comment"># 不输密码直接回车</span></span><br><span class="line">use mysql;</span><br><span class="line">update user <span class="built_in">set</span> password=PASSWORD(<span class="string">&quot;123&quot;</span>) <span class="built_in">where</span> user =<span class="string">&#x27;root&#x27;</span>;  <span class="comment"># 设置新密码为123  </span></span><br><span class="line">flush privileges;  </span><br><span class="line">quit;</span><br><span class="line"></span><br><span class="line">service mysql stop   </span><br><span class="line">service mysql start     <span class="comment"># 以正常模式启动</span></span><br><span class="line">mysql -u root -p        <span class="comment"># 回车输入新密码即可 </span></span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; delete from user <span class="built_in">where</span> user=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">MariaDB [(none)]&gt; delete from user <span class="built_in">where</span> password=<span class="string">&#x27;&#x27;</span>;  </span><br><span class="line">MariaDB [(none)]&gt; create database anyue default character <span class="built_in">set</span> latin1;  </span><br><span class="line">[root@xingyue masR5]<span class="comment"># mysql -uroot -p123456 anyue &lt; masR5.sql --default-character-set=lantin1</span></span><br></pre></td></tr></table></figure><p><a href="#目录" target="_self">回到顶部</a></p>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BatShell</title>
      <link href="/posts/8ef1acd.html"/>
      <url>/posts/8ef1acd.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-09-BatShell</p><a id="more"></a><h1 id="Windows-bat-脚本"><a href="#Windows-bat-脚本" class="headerlink" title="Windows bat 脚本"></a>Windows bat 脚本</h1><blockquote><p>批处理文件，在DOS和Windows（任意）系统中，.bat文件是可执行文件，由一系列命令构成，其中可以包含对其他程序的调用。<br><a href="https://www.jb51.net/article/151923.htm">BATSHELL参考</a></p></blockquote><h2 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h2><ul><li><p><code>echo</code>: 显示信息，或将命令回显打开或关上</p><ul><li>echo [on | off]</li><li>echo [message]</li></ul></li><li><p><code>@</code>: 表示不显示@后面的命令</p><ul><li>标签必须单独一行，并且以冒号打头。</li><li>如果命令扩展被启用，GOTO 会如下改变</li></ul></li><li><p><code>goto</code>: goto label, 无条件跳转</p><ul><li>label   指定批处理程序中用作标签的文字字符串<figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">goto</span> end</span><br><span class="line">:end</span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>rem</code>: 在批处理文件或 CONFIG.SYS 里加上注解或说明</p><ul><li>rem [comment]</li><li>:: [commnet]</li></ul></li><li><p><code>title</code>: 设置窗口标题</p><ul><li>title [string]</li></ul></li><li><p><code>pause</code>：暂停批处理程序，并显示以下消息:</p><ul><li>请按任意键继续. . .</li></ul></li><li><p><code>call</code>：call [drive:][path]filename [batch-parameters]</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">call</span> :an Hello 世界!</span><br><span class="line">:an</span><br><span class="line"><span class="built_in">echo</span> %<span class="number">1</span></span><br><span class="line"><span class="built_in">echo</span> %<span class="number">2</span></span><br><span class="line"><span class="built_in">pause</span>&gt;null</span><br><span class="line"></span><br><span class="line">输出为: Hello 世界！</span><br></pre></td></tr></table></figure></li><li><p><code>if</code>：执行批处理程序中的条件处理</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">IF</span> [<span class="keyword">NOT</span>] <span class="keyword">ERRORLEVEL</span> number command  </span><br><span class="line"><span class="keyword">IF</span> [<span class="keyword">NOT</span>] string1==string2 command </span><br><span class="line"><span class="keyword">IF</span> [<span class="keyword">NOT</span>] <span class="keyword">EXIST</span> filename command </span><br></pre></td></tr></table></figure></li><li><p><code>for</code>：对一组文件中的每一个文件执行某个特定命令</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> %variable <span class="keyword">in</span> (<span class="built_in">set</span>) <span class="keyword">DO</span> command [command-parameters]</span><br></pre></td></tr></table></figure><ul><li>在批处理程序中使用 for 命令时, 指定变量请使用 <code>%%variable</code>而不要用 <code>%variable</code>, 变量名称是区分大小写的，所以 %i不同于 %I</li></ul></li></ul><ul><li><p><code>set</code>：显示、设置或删除 cmd.exe 环境变量</p> <figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> [variable=[string]]  </span><br><span class="line">variable  # 指定环境变量名 </span><br><span class="line">string    # 指定要指派给变量的一系列字符串  </span><br><span class="line"><span class="built_in">SET</span> /A expression </span><br><span class="line"><span class="built_in">SET</span> /P variable=[promptString]</span><br></pre></td></tr></table></figure></li><li><p><code>del</code>：删除一个或数个文件</p>  <figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">DEL</span> [/P] [/F] [/S] [/Q] [/A[[:]attributes]] names</span><br></pre></td></tr></table></figure></li></ul><h2 id="参数："><a href="#参数：" class="headerlink" title="参数："></a>参数：</h2><ul><li><p>批脚本里的 <code>%*</code> 指出所有的参数(如 <code>%1 %2 %3 %4 %5 ...</code>)</p></li><li><p>批参数(%n)的替代已被增强：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">%~<span class="number">1</span>         - 删除引号(&quot;)，扩展 %<span class="number">1</span></span><br><span class="line">%~f1        - 将 %<span class="number">1</span> 扩展到一个完全合格的路径名</span><br><span class="line">%~d1        - 仅将 %<span class="number">1</span> 扩展到一个驱动器号</span><br><span class="line">%~p1        - 仅将 %<span class="number">1</span> 扩展到一个路径</span><br><span class="line">%~n1        - 仅将 %<span class="number">1</span> 扩展到一个文件名</span><br><span class="line">%~x1        - 仅将 %<span class="number">1</span> 扩展到一个文件扩展名</span><br><span class="line">%~s1        - 扩展的路径只含有短名</span><br><span class="line">%~a1        - 将 %<span class="number">1</span> 扩展到文件属性</span><br><span class="line">%~t1        - 将 %<span class="number">1</span> 扩展到文件的日期/时间</span><br><span class="line">%~z1        - 将 %<span class="number">1</span> 扩展到文件的大小</span><br><span class="line">%~$<span class="built_in">PATH</span>:<span class="number">1</span>   - 查找列在 <span class="built_in">PATH</span> 环境变量的目录，并将 %<span class="number">1</span></span><br><span class="line">              扩展到找到的第一个完全合格的名称。如果</span><br><span class="line">              环境变量名未被定义，或者没有找到文件，</span><br><span class="line">              此修改符会扩展到空字符串</span><br></pre></td></tr></table></figure></li><li><p>可以组合修改符来取得多重结果(d-Drive，p-Path):</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">%~dp0       - 获取当前路径</span><br><span class="line">%~dp1       - 只将 %<span class="number">1</span> 扩展到驱动器号和路径</span><br><span class="line">%~nx1       - 只将 %<span class="number">1</span> 扩展到文件名和扩展名</span><br><span class="line">%~dp$<span class="built_in">PATH</span>:<span class="number">1</span> - 在列在 <span class="built_in">PATH</span> 环境变量中的目录里查找 %<span class="number">1</span>，并扩展到找到的第一个文件的驱动器号和路径。</span><br><span class="line">%~ftza1     - 将 %<span class="number">1</span> 扩展到类似 <span class="built_in">DIR</span> 的输出行</span><br></pre></td></tr></table></figure></li><li><p><strong>%源字符串:~起始值,截取长度%</strong> (起始值从0开始；截取长度是可选的，如果省略逗号和截取长度，将会从起始值截取到结尾；</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> CRH </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络知识学习</title>
      <link href="/posts/ffc70460.html"/>
      <url>/posts/ffc70460.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-09-网络知识学习</p><a id="more"></a><h1 id="目录"><a href="#目录" class="headerlink" title="目录 "></a>目录 <a id="top"></a></h1><p><a href="#xianxu" target="_self">异直同交</a><br><a href="#switch" target="_self">交换机配置</a><br><a href="#route" target="_self">路由器配置</a><br><a href="#IPv4" target="_self">IP</a><br><a href="#netmask" target="_self">子网掩码</a><br><a href="#wangguan" target="_self">网关与路由</a><br><a href="#ziwanghuafen" target="_self">子网划分</a><br><a href="#wangluoshebei" target="_self">网络设备</a><br><a href="#OSI" target="_self">七层网络模型</a><br><a href="#xieyi" target="_self">TCP/IP</a><br><a href="#command" target="_self">常用网络命令</a><br><a href="#VMware" target="_self">VMware网络模式</a><br><a href="#luyoubiao" target="_self">路由表</a><br><a href="#ip-cmd" target="_self">ip命令</a></p><h2 id="网络学习"><a href="#网络学习" class="headerlink" title="网络学习:"></a>网络学习:</h2><h3 id="1-主机之间的通信其实是主机内运行的进程间的通信。按通信方式分为以下三类："><a href="#1-主机之间的通信其实是主机内运行的进程间的通信。按通信方式分为以下三类：" class="headerlink" title="1. 主机之间的通信其实是主机内运行的进程间的通信。按通信方式分为以下三类："></a>1. 主机之间的通信其实是主机内运行的<strong>进程间的通信</strong>。按通信方式分为以下三类：</h3><ul><li><p><code>客户/服务器方式（C/S模式）</code>:<strong>客户（client）</strong>和<strong>服务器（server）</strong>都是指通信中所涉及的两个应用进程。客户是服务请求方，服务器是服务提供方。数据处理方式为: <code>客户端从服务器获取数据，然后对数据进行处理，将处理结果返回给服务器，允许多个客户端对数据进行共同访问和处理</code>。  </p></li><li><p><code>浏览器/服务器类型（B/S模式）</code>:<strong>浏览器/服务器类型</strong>，即Browser/Server模式，<code>数据的运算已无需在客户端进行。客户端在安装浏览器之后，只负责显示服务器发来的信息，然后将用户操作返回给服务器，数据的运算可以全部在服务器上进行</code>。客户端只需要通过浏览器，就可以访问和显示任何服务器发来的信息，从而大大降低了网络的管理和维护的成本。这种模型称为浏览器服务器类型（B/S模式），又称为瘦客户端模型（Thin Client），与之相对的C/S模型称为胖客户端模型（Fat Client）。</p></li><li><p>服务端模型常见的为B/W/D(Browser Server /Web/Database Server，浏览器/网站服务器/数据库服务器。各层次分布完成不同的任务，以提高系统整体的可靠性、稳定性和灵活性，因此B/S模式又称为多层模型。</p></li></ul><h3 id="2-异直同交："><a href="#2-异直同交：" class="headerlink" title="2. 异直同交： "></a>2. 异直同交： <a id="xianxu"></a></h3><ul><li><code>异种设备</code>之间用直连线(<code>正线</code>)，两头的线序一样（同为T568A线序或T568B线序）；  </li><li><code>同种设备</code>之间用交叉线(<code>反线</code>)，两头的线序不一样（一头为T568A，另外一头为568B）； </li></ul><img src="/posts/ffc70460/%E5%8F%8C%E7%BB%9E%E7%BA%BF.jpg" class title="[双绞线]">  <img src="/posts/ffc70460/%E4%BF%A1%E9%81%93.jpg" class title="[信道]"><h3 id="3-线序排列以此为从左至右："><a href="#3-线序排列以此为从左至右：" class="headerlink" title="3. 线序排列以此为从左至右："></a>3. 线序排列以此为从左至右：</h3><ul><li>T568B线序为：<code>橙白-1，橙-2，绿白-3，蓝-4，蓝白-5，绿-6，褐白-7，褐-8</code>  </li><li>T568A线序为：<code>绿白-1，绿-2，橙白-3，蓝-4，蓝白-5，橙-6，褐白-7，褐-8</code></li></ul><h3 id="4-IP-点分十进制表示-："><a href="#4-IP-点分十进制表示-：" class="headerlink" title="4. IP(点分十进制表示)： "></a>4. IP(点分十进制表示)： <a id="IPv4"></a></h3><table><thead><tr><th>表一</th><th>8位</th><th>8位</th><th>8位</th><th>8位</th></tr></thead><tbody><tr><td>A类</td><td>0网络号(网络地址)</td><td>主机号(主机地址)</td><td>主机号(主机地址)</td><td>主机号(主机地址)</td></tr><tr><td>B类</td><td>10网络号</td><td>网络号</td><td>主机</td><td>主机</td></tr><tr><td>C类</td><td>110网络号</td><td>网络号</td><td>网络号</td><td>主机</td></tr></tbody></table><table><thead><tr><th>表二</th><th>二进制范围</th><th>十进制范围</th></tr></thead><tbody><tr><td>A类</td><td>0 0000000 - 0 1111111</td><td>0-127</td></tr><tr><td>B类</td><td>10 000000 00000000 - 10 111111 00000000</td><td>128-191</td></tr></tbody></table><table><thead><tr><th>表三</th><th>范围</th><th>默认子网掩码</th></tr></thead><tbody><tr><td>A类</td><td>1.0.0.0 ~ 126.0.0.0</td><td>默认子网：255.0.0.0，其中 0 与 127除外</td></tr><tr><td>B类</td><td>128.1.0.0 ~ 191.255.0.0</td><td>默认子网：255.255.0.0</td></tr><tr><td>C类</td><td>192.0.1.0 ~ 223.255.255.255</td><td>默认子网：255.255.255.0</td></tr></tbody></table><h4 id="4-1-重要：将（ip地址）和（掩码）与运算，就是子网地址-网络地址"><a href="#4-1-重要：将（ip地址）和（掩码）与运算，就是子网地址-网络地址" class="headerlink" title="4.1 重要：将（ip地址）和（掩码）与运算，就是子网地址(网络地址) "></a>4.1 重要：将（ip地址）和（掩码）与运算，就是子网地址(网络地址) <a id="netmask"></a></h4><p><strong>私有IP(在本地局域网上的IP):</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A类：10.0.0.0 ~ 10.255.255.255</span><br><span class="line">B类：172.16.0.0 ~ 172.31.255.255</span><br><span class="line">C类：192.168.0.0 ~ 192.168.255.255</span><br></pre></td></tr></table></figure><table><thead><tr><th>网络号/地址</th><th>主机号/地址</th><th>源地址</th><th>目的地址</th><th>意义</th></tr></thead><tbody><tr><td>全0</td><td>全0</td><td>可用</td><td>不可用</td><td>本网络所有主机</td></tr><tr><td>全0</td><td>主机号</td><td>可用</td><td>不可用</td><td>本网中的某个主机</td></tr><tr><td>网络号</td><td>全1</td><td>不可用</td><td>可用</td><td>对Net-id所有主机进行广播(直接广播地址)</td></tr><tr><td>全1</td><td>全1</td><td>不可用</td><td>可用</td><td>只在本网络内部广播各路由器均不转发(受限广播地址)</td></tr></tbody></table><blockquote><p><code>127.0.0.1~127.255.255.255</code>: 为回环地址, 用于回路测试。<br>网络地址全为0: 表示当前网络或网段;<br>网络地址全为1: 表示所有网络;<br>主机地址全为0: 表示网络地址或指定网络中的任何主机;<br>主机地址全为1: 表示网络中的所有节点;  </p></blockquote><img src="/posts/ffc70460/CCNA-4.png" class title="[IP图示]">  <img src="/posts/ffc70460/CCNA-5.png" class title="[可用IP图示]">      <img src="/posts/ffc70460/IP-1.png" class title="[保留IP图示]">   <img src="/posts/ffc70460/CCNA-7.jpg" class title="[公有IP与私有IP]"> <img src="/posts/ffc70460/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86%E5%9B%BE%E8%A7%A3.jpg" class title="[子网划分]">  <h4 id="4-2"><a href="#4-2" class="headerlink" title="4.2 "></a>4.2 <a id="wangguan"></a></h4><blockquote><p>网关: 网关实质上是<code>一个网络通向其他网络</code>的<code>IP地址</code>，不具体指一类产品，只要<code>连接两个不同网络</code>的设备都可以称作网关；多数工作在OSI模型应用层。默认网关必须是<code>电脑自己所在的网段中的IP地址</code>，而不能填写其他网段中的IP地址。作用: 不同网段数据转发，路由选择，默认路由，NAT转换。 </p></blockquote><blockquote><p>路由器是网关设备的一种，是连接Internet中各局域网、广域网的设备，它在互连网络中从多条路径中寻找通讯量最少的一条网络路径提供给用户通信。</p></blockquote><blockquote><p>路由: 指分组从源到目的地时，决定端到端路径的网络范围的进程，路由工作在OSI参考模型第三层。作用: 不同网段数据转发，路由选择;</p></blockquote><h3 id="5-子网的划分："><a href="#5-子网的划分：" class="headerlink" title="5. 子网的划分："></a>5. 子网的划分：<a id="ziwanghuafen"></a></h3><blockquote><p>CIDR 无类域间路由表示法：<code>IP/网络ID位数(netMask)</code><br>网络（网段）数量=<code>2^可变网络ID位数</code><br>一个网络主机数量(IP)=<code>2^主机ID位数-2</code>=<code>2^(32-网络ID位数)-2</code><br>网络ID=<code>IP 与 子网掩码(网络ID位数)</code>   </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">例1: 172.20.222.123&#x2F;20         172.20.230.100&#x2F;20</span><br><span class="line">    </span><br><span class="line">    172.20.11011110.123       172.20.11100110.100</span><br><span class="line">    255.255.11110000.0        255.255.11110000.0</span><br><span class="line">            11010000.0                11100000.0</span><br><span class="line">    netID: 172.20.208.0       netID: 172.20.224.0 不在一个网段</span><br><span class="line"></span><br><span class="line">例2: 192.168.199.111&#x2F;21</span><br><span class="line">    </span><br><span class="line">    192.168.11000111.111</span><br><span class="line">    255.255.11111000.0</span><br><span class="line"></span><br><span class="line">    192.168.11000000.0   </span><br><span class="line">    netID: 192.168.192.0</span><br><span class="line">    子网掩码: 255.255.248.0</span><br><span class="line"></span><br><span class="line">    192.168.11000 000.00000001  192.168.192.1&#x2F;21</span><br><span class="line">    192.168.11000 111.11111110  192.168.199.254&#x2F;21</span><br><span class="line">     </span><br><span class="line">例3: 222.111.188.123&#x2F;26</span><br><span class="line">    </span><br><span class="line">    222.111.188.01111011</span><br><span class="line">    255.255.255.11000000</span><br><span class="line"></span><br><span class="line">    222.111.188.01000000</span><br><span class="line">    netID: 222.111.188.64</span><br><span class="line">    netmask: 255.255.255.192</span><br><span class="line"></span><br><span class="line">    222.111.188.01 000001  222.111.188.65&#x2F;26</span><br><span class="line">    222.111.188.01 111110  222.111.188.126&#x2F;26</span><br><span class="line"></span><br><span class="line">例4:</span><br><span class="line">1 1 1 1 1 1 11  </span><br><span class="line">128 64 32 16 8 4 21&#x3D;255 (之和为255)  </span><br><span class="line"></span><br><span class="line">例5:</span><br><span class="line">划分子网，一个大网络(主机多ID多, 网络ID少)；划分为多个小网络(主机多ID少, 网络ID多)，网络ID位向主机ID位借N位，划分为 2^N 个子网</span><br><span class="line"></span><br><span class="line">10.0.0.0&#x2F;8 分成2个子网: 10.0.0.0&#x2F;9  10.128.0.0&#x2F;9</span><br><span class="line">10.0 0000000.0.0:</span><br><span class="line"> 10.0 0000000.0.1     min:10.0.0.1</span><br><span class="line"> 10.0 1111111.255.254 max:10.127.255.254  </span><br><span class="line">10.1 0000000.0.0</span><br><span class="line"> 10.1 0000000.0.1     min:10.128.0.1</span><br><span class="line"> 10.1 1111111.255.254 max:10.255.255.254</span><br><span class="line"></span><br><span class="line">例6:</span><br><span class="line">现有一个IP地址132.119.110.200 的子网掩码为255.255.255.240, 它所在的IP子网是什么？它所在子网的广播是地址是多少？</span><br><span class="line">子网IP: </span><br><span class="line">  128 64 32 16 8 4 2 1</span><br><span class="line">  132.119.100.11001000 </span><br><span class="line">  255.255.255.11110000     --&gt;132.119.100.11000000, 即132.119.100.192</span><br><span class="line"></span><br><span class="line">子网广播地址主机位全为1:</span><br><span class="line">  网络广播地址指的是网络位不变，主机位全为1，代表特定网段的所有节点。子网掩码1的数目等于网络位的长度</span><br><span class="line">  240:11110000 所以 网络位为：8+8+8+4&#x3D;28位 ，所以132.119.100.200的前28位位网络位。网络位不变，主机位全为1代表广播地址；</span><br><span class="line">  又因为 200:11001000 所以 广播地址就是132.119.100.11001111（11001111的后四位是主机位）即：132.119.100.207</span><br></pre></td></tr></table></figure><blockquote><p>利用主机借位的方法来划分子网，下面以C类网络为例（默认:/24）<br><code>网络地址：</code>192.168.10.0<br><code>子网掩码：</code>255.255.255.128，也即 192.168.10.0/25  </p></blockquote><ul><li>1、首先：<br> 主机位只有1位用于子网划分，余下7位用于定义主机号  </li><li>2、其次子网个数：<br> 2^借位数：即2^1=2个子网；<br> 每个子网主机数：2^(32-25) - 2 = 126；<br> 合法的子网，确定块增量：256 - 128 = 128，即从0开始，步长128；</li><li>3、列表格  </li></ul><table><thead><tr><th>-</th><th>项目1</th><th>项目2</th><th>注意</th></tr></thead><tbody><tr><td>子网</td><td>0</td><td>128</td><td>–</td></tr><tr><td>第一个主机</td><td>1</td><td>129</td><td>–</td></tr><tr><td>最后一个主机</td><td>126</td><td>254</td><td>–</td></tr><tr><td>广播地址</td><td>127</td><td>255</td><td>(广播地址总是下个子网前面的数)</td></tr></tbody></table><blockquote><p>利用主机借位的方法来划分子网，又以B类网络为例（默认/16）<br><code>网络地址：</code>128.1.0.0<br><code>子网掩码：</code>255.255.224.0 也即 128.1.0.0/19    </p></blockquote><ul><li>1、首先：<br>主机位只有3位用于子网划分，余下13位用于定义主机号</li><li>2、其次子网个数：<br>2^借位数，即2^3=8个子网；<br>每个子网主机数：2^13 - 2 = 8190；<br>合法的子网，确定块增量，256 - 224 = 32，即从0开始，步长32；  </li><li>3、列表格</li></ul><table><thead><tr><th>-</th><th>项目1</th><th>项目2</th><th>项目3</th><th>项目4</th><th>项目5</th><th>项目6</th><th>项目7</th><th>项目8</th></tr></thead><tbody><tr><td>子网</td><td>0.0</td><td>32.0</td><td>64.0</td><td>96.0</td><td>128.0</td><td>160.0</td><td>192.0</td><td>224.0</td></tr><tr><td>第一个主机</td><td>0.1</td><td>32.1</td><td>64.1</td><td>96.1</td><td>128.1</td><td>160.1</td><td>192.1</td><td>224.1</td></tr><tr><td>最后一个主机</td><td>0.254</td><td>63.254</td><td>64.254</td><td>127.254</td><td>159.254</td><td>191.254</td><td>223.254</td><td>255.254</td></tr><tr><td>广播地址</td><td>31.255</td><td>63.255</td><td>95.255</td><td>127.255</td><td>159.255</td><td>191.255</td><td>223.255</td><td>255.255</td></tr></tbody></table><ul><li>4、冲突域与广播域：  <ul><li>冲突域：连接在同一根线上的节点组成的区域；  </li><li>广播域：能够接收到同一个广播消息的节点的集合，其中任何一个节点发送一个广播帧，其他节点均能接收到；</li></ul></li></ul><h3 id="6-基本网络设备"><a href="#6-基本网络设备" class="headerlink" title="6.基本网络设备: "></a>6.基本网络设备: <a id="wangluoshebei"></a></h3><ul><li>冲突域：被看作是第一层(物理层)的概念，<strong>用Hub或者Repeater连接的所有节点集合可以被认为是在同一个冲突域内</strong>，它不会划分冲突域，一个Hub就是一个冲突域，一个广播域；  </li><li>广播域：被看作是第二层(数据链路层)的概念，<strong>接收同样广播消息的节点的集合</strong>，第二层设备（网桥，交换机）第三层设备（路由器）都可以划分冲突域的，当然也可以连接不同的冲突域，交换机的每个端口都是一个冲突域，一个交换机就是一个广播域；  </li><li><a href="https://blog.csdn.net/ugly_girl/article/details/80901887">广播域与冲突域</a>  </li></ul><img src="/posts/ffc70460/%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.jpg" class title="[交换机与路由器]"><h3 id="7-OSI各层的作用"><a href="#7-OSI各层的作用" class="headerlink" title="7.OSI各层的作用 "></a>7.OSI各层的作用 <a id="OSI"></a></h3><h4 id="物理层"><a href="#物理层" class="headerlink" title="物理层:"></a>物理层:</h4><ul><li>中继器：中继器最大的延长距离只有500米，即两台PC之间最多可以使用4台中继器. 双绞线的有效传输距离是100米，超过100米后由于信号衰减将出现信号无法识别的现象</li><li>集线器：相当于<strong>多个端口的中继器</strong>，没有软件系统，是<strong>纯硬件设备</strong>，其将多台计算机和网络设备连接在一起构成共享式局域网，对<strong>数据信号起中继的作用</strong>，集线器是指共享式集线器，其<strong>带宽为所有端口共享</strong>；</li></ul><h4 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层:"></a>数据链路层:</h4><ul><li><p>数据链路层的功能:</p><ul><li>1)完成网络之间相邻结点的可靠传输；</li><li>2)物理层传输的是比特流（Bit），数据链路层传输的就是帧（Frame）；</li><li>3)数据链路层是通过MAC(Media Access Control)地址负责主机之间数据的可靠传输;</li><li>4)CSMA/CD：载波侦听多路访问 冲突检测</li></ul></li><li><p>数据链路层的主要设备:  </p><ul><li><p><code>网桥(2端口,配合Hub)</code>是一种在<code>数据链路层实现中继</code>，用于<code>连接两个或更多个局域网的数据链路层设备</code>，它处理的对象是<code>数据链路层的协议数据单元---帧</code>，其处理功能包括检查帧的格式、进行差错校验、识别目标地址、选择路由并实现帧的转发等。网桥可以将两个LAN连接在一起，并且按<code>MAC地址转发</code>和<code>分割冲突域</code>的作用，但<code>无法隔绝广播域</code>，<code>网桥具有源mac地址进行学习，目标mac地址转发的功能*</code>  </p></li><li><p><code>交换机</code>:交换机可以看作是<code>多端口的网桥</code>，具有<code>源mac地址学习 目的mac地址转发的功能*</code>；<code>每个端口具有一个冲突域，隔绝冲突域，共具有一个广播域。</code> 对<code>已知单播帧</code>，只往对应端口转发；对于未知的单播帧，即交换机还没有学到的目的mac地址，会进行广播(发往除接收端口以外的所有接口)。对广播帧或组播帧进行广播。<code>交换机是端口带宽独享</code>，端口之间可以采用全双工进行数据传输，实现数据的线速转发（内部保存着MAC地址与Port的对应关系）</p></li><li><p><code>网卡</code>:网络适配器，是连接计算机与网络之间的硬件设备。功能:整理计算机发往网线的数据，并且将数据分解成适当大小的数据包之后向网络上发送出去。网卡的<code>Mac地址</code>是在它被生产时，厂家烧录到ROM（Read Only Memory只读存储）中的，是唯一且不可更改的。  </p><img src="/posts/ffc70460/Eth%E5%B8%A7%E6%A0%BC%E5%BC%8F.jpg" class title="[Eth帧格式]"></li></ul></li></ul><h4 id="网络层"><a href="#网络层" class="headerlink" title="网络层:"></a>网络层:</h4><ul><li>网络层的主要设备有<strong>路由器和三层交换机(路由器加上交换模块)。</strong></li><li>主要作用:<ul><li><code>转发网络层数据包，在复杂的网络拓扑结构中找出一条最佳的传输路径</code>，采用逐站传递的方式，把数据包从<code>源节点</code>传输到<code>目的节点</code>。进行网络与网络的连接，是把数据从一个网络发送到另一个网络，这个过程就叫路由。</li><li>路由器的<code>每个端口代表着一个网段</code>, 连接不同的网络（一般用于连接广域网), 它不仅能<code>隔离冲突域，还能检测广播数据包(主要指本地广播数据包)</code>，并丢弃广播包来<code>隔离广播域</code>，每个路由器是一个广播域。**在路由器中记录着路由表，路由器以此来转发数据，以实现网络间的通信，路由器可使<code>交换机划分的VLAN实现互相通信</code>。</li><li>注意:<ul><li>1)受限广播数据包（<strong>255.255.255.255，网络段和主机段全为1</strong>）不能通过路由器，只能将数据包广播给当前局域网的所有主机，故又称为<strong>本地广播</strong>；</li><li>2)直接广播（主机位全为1，如192.168.1.255/24）可通过路由器而将数据广播给指定网络的所有主机；</li><li>3)在实际的网络环境中，路由器不转发私有网络数据（对于目标地址为私有IP的数据包不转发）；</li><li>4)三层交换机兼具二层交换和三层路由的功能，在模拟器中一般用带有交换模块的路由器来模拟(dynamips)，或者在交换机上加上路由模块。</li></ul></li></ul></li><li><strong>集线器</strong>：工作于物理层、纯硬件、用于连接网络终端、<code>不能打破冲突域和广播域</code>。</li><li><strong>交换机</strong>：工作于数据链路层、拥有软件系统、用于连接网络终端、能够<code>隔离了冲突域</code>，<code>但是不能分割广播域</code>。交换机端口间不再形成冲突域，但每个端口自己仍然一个冲突域。</li><li><strong>路由器</strong>：工作于网络层、拥有软件系统、用于连接网络、可以打破冲突域也可以分割广播域，是连接大型网络的必备设备。<em>路由器的每个端口连接的是一个广播域</em></li></ul><h4 id="传输层："><a href="#传输层：" class="headerlink" title="传输层："></a>传输层：</h4><ul><li>传输层将数据进行分段并重组为数据流。位于传输层的服务将来自上层应用的数据进行分段和重组，并将它们合并到同一个数据流中。它们提供了端到端的数据传输服务，并可在互联网的发送主机和目标主机之间建立逻辑连接。</li><li>传输层负责提供如下机制:对上层应用程序进行<strong>多路复用、建立会话以及拆除虚电路</strong>。它还提供透明的数据传输，从而对高层隐藏随网络而异的信息。传输层可以是无连接的或面向连接的</li></ul><h4 id="会话层："><a href="#会话层：" class="headerlink" title="会话层："></a>会话层：</h4><ul><li>会话层负责在表示层实体之间建立、管理和终止会话，还对设备或节点之间的对话进行控制。它协调和组织系统之间的通信，为此提供了3 种不同的模式:单工、半双工和全双工。总之，会话层的基本功能是将不同应用程序的数据分离。</li></ul><h4 id="表示层："><a href="#表示层：" class="headerlink" title="表示层："></a>表示层：</h4><ul><li>表示层因其用途而得名，它向应用层提供数据，并负责数据转换和代码格式化。从本质上说，该层是一个转换器，提供编码和转换功能。</li></ul><h4 id="应用层："><a href="#应用层：" class="headerlink" title="应用层："></a>应用层：</h4><ul><li>应用层是<code>实际应用程序之间的接口</code>，牢记这一点很重要。这意味着诸如Microsoft Word 等应用程序并不位于应用层中，而是与应用层协议交互；</li><li>应用层让应用程序能够将信息沿协议横向下传输，从而充当了应用程序的组成部分和下一层之间的接口。换句话说，IE并不位于应用层中，而是在需要处理远程资源时与应用层协议交互；</li></ul><h3 id="8-DoD与OSI"><a href="#8-DoD与OSI" class="headerlink" title="8.DoD与OSI "></a>8.DoD与OSI <a id="xieyi"></a></h3><blockquote><p><em>TCP/IP协议簇</em>（Transmission Control Protocol/Internet Protocol）最早发源于美国国防部(缩写为DoD)的因特网的前身ARPA网项目, 1983年1月1日取代旧的网络控制协议NCP, 成为今天的互联网和局域网的基石和标准<br>定义了四层: <strong>应用层、传输层、Internet层、网络访问层</strong>对应OSI的(应用层、表示层、会话层)、传输层、网络层、(数据链路层、物理层);<br>下层为上层提供服务, 体现出上层的类型；</p></blockquote><ul><li><p>模型  </p><img src="/posts/ffc70460/CCNA-1.png" class title="[DoD模型与OSI]">  <img src="/posts/ffc70460/CCNA-2.png" class title="[DoD模型中的协议]">         <img src="/posts/ffc70460/CCNA-3.png" class title="[知名端口号]"></li><li><p>链路层/网络层协议</p><ul><li><strong>地址解析协议(ARP)**：根据已知的IP地址查找主机的硬件地址， 其工作原理如下:IP需要发送数据报时，它必须将目标端的硬件地址告知网络接入层协议，如以太网或无线。(上层协议已经将目标端的IP 地址告诉它)，如果IP 在ARP 缓存中没有找到目标主机的硬件地址，它将使用ARP 获悉这种信息。(**在TCP/IP模型中，ARP协议属于IP层；在OSI模型中，ARP协议属于链路层</strong>)</li><li><strong>RARP（Reverse Address Resolution Protocol，反向地址转换协议）</strong>：用于实现物理地址向逻辑地址转换。</li></ul></li><li><p>传输层协议(TCP UDP)：</p><ul><li><p><code>TCP</code> 和<code>UDP</code> 必须使用<strong>端口号与上层通信</strong>，因为端口号跟踪通过网络同时进行的不同会话。据端口号是源主机动态分配的，其值不小于1024     </p></li><li><p>TCP（Transmission Control Protocol，传输控制协议）功能和特点：用于在不可靠网络上<code>提供可靠</code>的端到端字节流传输服务，<code>面向连接</code>的，通信双方采用<code>三次握手协议</code>建立双方的连接，实现通信，能够提供可靠的交付，数据传输的单位是报文段（segment）</p><img src="/posts/ffc70460/TCP%E6%8A%A5%E5%A4%B4.jpg" class title="[TCP报头]">  <img src="/posts/ffc70460/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.jpg" class title="[TCP三次握手]">    <img src="/posts/ffc70460/TCP%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.jpg" class title="[TCP四次挥手]">    <img src="/posts/ffc70460/TCP.png" class title="[TCP]">  </li><li><p>UDP（User Datagram Protocol：用户数据报协议）功能和特点：<code>无连接</code>的，即传输数据前发送端和接收端不建立连接，只负责将应用程序传给传输层的数据发送出去，不保证他们能可靠交付目的地，只提供尽最大努力交付，数据传输的单位使用户数据报，可靠性欠佳，但通信开销较小，应用于一些可靠性要求不高的地方，如视频点播。   </p><img src="/posts/ffc70460/UDP%E6%8A%A5%E5%A4%B4.jpg" class title="[UDP报头]"></li></ul></li><li><p>应用层协议：</p><ul><li>DNS（ <code>Domain Name System</code>，实现域名到IP地址的解析）概述：TCP/IP协议创建了一种ASCII码形式的主机命名形式，称为域名（Domain Name），例如贵州大学主页域名<a href="http://www.gzu.edu.cn/">www.gzu.edu.cn</a>, IP地址是210.40.0.58. DNS是一种分布式的网络目录服务，可以实现域名解析为IP地址,使用<strong>UDP的53号端口</strong>进行通信。</li><li>HTTP（<code>HyperText Transfer Protocol</code>，超文本传输协议）概述：是<code>应用层</code>上一种请求/响应式的协议，实现客户端与服务器的通信，WWW发布信息的主要协议。HTTP通过URL（统一资源定位符）来定位Web服务器资源。URL是Internet上用来描述信息资源的字符串，包括服务器的域名（或IP地址）、目录和文件，默认连接<code>端口是TCP 80</code>。</li><li>FTP（ <code>File Transfer Protocol</code>，文件传送协议）概述： FTP是因特网上使用得最广泛的文件传送协议，<code>采用C/S工作模式。通过建立TCP连接</code>，使网络上不同主机之间能够进行高效的文件传输，实现文件资源共享和信息传递。FTP客户端先通过<code>TCP 21号端口建立控制连接，传输控制信息</code>，在控制连接建立的基础上，每当客户端要下载或上传文件时，再通过<code>TCP 20号端口建立数据连接，传输数据</code>。</li><li>TFTP（<code>Trivial File Transfer Protocol</code>, 简单文件传送协议）TFTP 是一个很小且易于实现的文件传送协议。<code>TFTP 采用C/S方式，使用 UDP 数据报</code>，因此 TFTP 需要有自己的差错改正措施。TFTP 只支持文件传输而不支持交互。TFTP 没有一个庞大的命令集，没有列目录的功能，也不能对用户进行身份鉴别。使用<code>UDP69端口</code>进行通信，利用确认和超时重传机制保证传输的可靠性。</li><li>DHCP/BOOTP（<code>Dynamic Host Configuration Protocol</code>，动态主机分配协议，Bootstrap Protocol自举协议）概述：<code>BOOTP是一种基于UDP的协议</code>，主要用于无盘工作站从服务器获得自己的IP地址。DHCP是从原来的BOOTP协议发展而来的，引入“租约“概念，分为两部分：服务器端和客户端。DHCP服务器集中管理IP地址的动态分配以及网络上启用DHCP客户端的其他相关配置信息，并负责处理客户端的DHCP要求；而客户端则使用服务器端分配下来的IP网络配置数据，<code>UDP 67 用于DHCP服务器，UDP 68用于DHCP客户端</code></li><li>SMTP协议： <code>Simple Mail Transfer Protocol </code>，简单邮件传输协议，建立在<code>TCP基础上，连接端口为25</code>。发信人向源邮件服务器<code>发送邮件</code>使用 SMTP 协议。</li><li>POP协议：<code>Post Office Protocol</code>，邮局协议，建立在TCP上，不支持在线阅读，为邮件读取协议，允许用户自己将邮件下载到本地磁盘，再对邮件进行阅读、修改等操作，现在使用的是它的第三个版本 POP3，<code>POP3 服务默认的TCP端口号是110</code>；</li><li>IMAP：<code>Internet Mail Access Protocol</code>,交互式邮件存取协议,一种比POP更高级的消息访问管理协议，建立在TCP连接基础上；</li><li>Telnet：<code>TCP/IP Terminal Emulation Protocol</code>, TCP/IP终端仿真协议，Telnet是标准的提供远程登陆功能的应用，能够运行于不同操作系统的主机之间。用户通过Telnet 就可在其所在地通过 TCP 连接注册（即登录）到远地的另一个主机上（使用主机名或 IP 地址）。TELNET 能将用户的击键传到远地主机，同时也能将远地主机的输出通过 TCP 连接返回到用户屏幕。这种服务是透明的，因为用户感觉到好像键盘和显示器是直接连在远地主机上，<code>默认使用TCP23号端口</code>；<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">端口号总结:</span><br><span class="line">  DNS: 默认UDP 53号端口</span><br><span class="line">  TFTP: 默认UDP 69端口</span><br><span class="line">  DHCP: 默认UDP 67端口 用于DHCP服务器, UDP 68端口用于DHCP客户端</span><br><span class="line">  http: 默认TCP 80端口</span><br><span class="line">  SMTP: 默认TCP 25端口</span><br><span class="line">  POP3: 默认TCP 110端口</span><br><span class="line">  Telnet: 默认TCP 23号端口</span><br><span class="line">  FTP: 客户端先通过TCP 21号端口建立控制连接, 传输控制信息, </span><br><span class="line">  TCP 20号端口建立数据连接，传输数据。</span><br></pre></td></tr></table></figure></li></ul><img src="/posts/ffc70460/CCNA-6.png" class title="[各个层相关协议]"> </li></ul><h3 id="9-常用网络命令："><a href="#9-常用网络命令：" class="headerlink" title="9. 常用网络命令："></a>9. 常用网络命令：<a id="command"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">ping：连通性测试，用于测试本机主机名和IP地址，验证与远程主机的连接</span><br><span class="line">  -t   <span class="comment"># 不间断ping该IP地址</span></span><br><span class="line">  -a   <span class="comment"># 将地址解析成计算机名</span></span><br><span class="line">  -n  count    <span class="comment"># 发送count个数据包探测</span></span><br><span class="line">  -i  time     <span class="comment"># TTL = time </span></span><br><span class="line"></span><br><span class="line">ifconfig： 排除DNS域名解析故障</span><br><span class="line">  ipconfig /flushdhs    <span class="comment"># 刷新DNS解析器缓存</span></span><br><span class="line"></span><br><span class="line">traceroute IP           <span class="comment"># 显示数据包所经过的路由器IP地址</span></span><br><span class="line"></span><br><span class="line">arp： 用于显示和修改IP和物理地址的映射表，ARP表</span><br><span class="line">  -a<span class="comment"># 查看地址解析表，后可跟IP地址</span></span><br><span class="line">  -s<span class="comment"># 在arp缓存中添加项，-d 删除</span></span><br><span class="line"> </span><br><span class="line">netstat：显协议统计信息和当前TCP/IP连接</span><br><span class="line">  -a <span class="comment"># 显示所有连接监听端口</span></span><br><span class="line">  -n<span class="comment"># 以数字形式监听IP地址和端口号</span></span><br><span class="line">  -s <span class="comment"># 按各协议分别显示统计数据</span></span><br><span class="line">  -r <span class="comment"># 显示路由表</span></span><br><span class="line">  -e<span class="comment"># 显示以太网卡统计数据</span></span><br><span class="line"></span><br><span class="line">nmap  端口扫描工具</span><br><span class="line">  -sP // 探测网络主机工作状态</span><br><span class="line">  -sT //  扫描TCP协议端口</span><br></pre></td></tr></table></figure><h3 id="10-关于VMware-三种网络方式："><a href="#10-关于VMware-三种网络方式：" class="headerlink" title="10. 关于VMware 三种网络方式："></a>10. 关于VMware 三种网络方式：<a id="VMware"></a></h3><h4 id="桥接模式-Bridged-VMnet0："><a href="#桥接模式-Bridged-VMnet0：" class="headerlink" title="桥接模式(Bridged), VMnet0："></a>桥接模式(Bridged), VMnet0：</h4><img src="/posts/ffc70460/VMnet0.png" class title="[桥接模式]">  <ul><li>抽象为体现在物理机的网卡为<code>VMnet0</code>；</li><li>原理：桥接模式就是将主机网卡与虚拟机虚拟的网卡利用虚拟网桥进行通信；  </li><li>在桥接的作用下，物理主机虚拟为一个<strong>交换机</strong>，所有桥接设置的虚拟机连接到这个交换机的一个接口上，物理主机也同样插在这个交换机当中，所以所有桥接下的网卡与网卡都是交换模式的，相互可以访问而不干扰。在桥接模式下，<strong>虚拟机ip地址需要与主机在同一个网段，如果需要联网，则网关与DNS需要与主机网卡一致</strong>。网关（Gateway）就是一个网络连接到另一个网络的“关口”，工作在网络层及之上  </li></ul><h4 id="主机模式-Host-only-VMnet1："><a href="#主机模式-Host-only-VMnet1：" class="headerlink" title="主机模式(Host-only), VMnet1："></a>主机模式(Host-only), VMnet1：</h4><img src="/posts/ffc70460/VMnet1.png" class title="[主机模式]">    <ul><li>体现在物理机的网卡为<code>VMnet1</code>；</li><li>原理：Host-Only模式其实就是NAT模式去除了虚拟NAT设备，然后使用<strong>VMware Network Adapter VMnet1</strong>虚拟网卡连接VMnet1虚拟交换机来与虚拟机通信的，<strong>Host-Only模式将虚拟机与外网隔开</strong>，使得虚拟机成为一个独立的系统，只与主机相互通讯；  </li><li>要使得虚拟机能联网，可以将主机网卡共享给VMware Network Adapter VMnet1网卡，从而达到虚拟机联网的目的；</li></ul><h4 id="NAT模式-地址转换-VMnet8："><a href="#NAT模式-地址转换-VMnet8：" class="headerlink" title="NAT模式(地址转换),VMnet8："></a>NAT模式(地址转换),VMnet8：</h4><img src="/posts/ffc70460/VMnet8.png" class title="[NAT模式]">    <ul><li>体现在物理机的网卡为<code>VMnet8</code>；</li><li>原理：在NAT模式中，主机网卡直接与虚拟NAT设备相连，然后虚拟NAT设备与虚拟DHCP服务器一起连接在虚拟交换机VMnet8上，这样就实现了虚拟机联网；</li><li><code>VMware Network Adapter VMnet8</code>的作用是主机与虚拟机之间的通信；</li></ul><h3 id="11-路由表构成-route-n"><a href="#11-路由表构成-route-n" class="headerlink" title="11.路由表构成(route -n) "></a>11.路由表构成(route -n) <a id="luyoubiao"></a></h3><ul><li><p><code>Destination</code>：数据包的发送路径(主路由、网络路由、默认路由)  </p></li><li><p><code>Netmask</code></p></li><li><p><code>Interface</code>：本路由器的出口</p></li><li><p><code>Gateway</code>  </p><ul><li>直连网络不用配置  </li><li>非直连: 下一个路由器邻近本路由器的接口地址<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Kernel IP routing table  </span><br><span class="line">Destination   Gateway         Genmask        Flags   Metric    Ref   Use   Iface  </span><br><span class="line">192.168.1.0   172.16.0.1      255.255.255.0  UG      0         0     0     eth0   </span><br><span class="line">172.16.0.0    0.0.0.0         255.255.0.0    U       0         0     0     eth0</span><br><span class="line">10.0.0.0      0.0.0.0         255.0.0.0      U       0         0     0     eth1 </span><br></pre></td></tr></table></figure></li></ul></li><li><p>route记录更改</p><table><thead><tr><th>子命令/参数</th><th>说明</th></tr></thead><tbody><tr><td>-n</td><td>直接使用IP地址，不进行DNS解析主机</td></tr><tr><td>add</td><td>添加路由信息</td></tr><tr><td>del</td><td>删除路由信息</td></tr><tr><td>-net</td><td>到一个网路的路由，后接网络号地址</td></tr><tr><td>-host</td><td>到一个主机路由，后接主机地址</td></tr><tr><td>netmask</td><td>为添加的路由指定子网掩码</td></tr><tr><td>gw</td><td>为发往目标网络/主机的任何分组指定网关</td></tr><tr><td>dev</td><td>指定由哪个网络设备出去，后接网络设备名</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">route add -net 100.0.0.0 netmask 255.0.0.0 gw 192.168.30.200  <span class="comment"># 网络路由</span></span><br><span class="line">route add default gw 192.168.30.2 <span class="comment"># 默认路由 0.0.0.0 </span></span><br><span class="line">route add -host 6.6.6.6 gw 3.3.3.100  <span class="comment"># 主机路由</span></span><br><span class="line">route del default gw 192.168.30.2  </span><br><span class="line">route del -host 6.6.6.6</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 route添加路由时，设定的路由必须与自己系统的网络接口或者IP可以直接互通，才能添加成功；  </span></span><br><span class="line"><span class="comment"># IP地址是属于主机的，而不是网卡； </span></span><br></pre></td></tr></table></figure></li></ul><h3 id="15-ip命令"><a href="#15-ip命令" class="headerlink" title="15.ip命令 "></a>15.ip命令 <a id="ip-cmd"></a></h3><ul><li><p>Usage：ip [option] OBJECT [COMMAND | help]</p><ul><li><p>ip link</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip -s link show</span><br><span class="line">ip link <span class="built_in">set</span> DEVICE [up|down]</span><br></pre></td></tr></table></figure></li><li><p>ip addr</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ip addr add 10.2.2.2/8 dev eth1 label eth1:1</span><br><span class="line">ip addr del ADDRESS dev DEV</span><br><span class="line">ip addr show dev DEV to PREFIX</span><br><span class="line">ip addr flush dev DEV to PREFIX</span><br></pre></td></tr></table></figure></li><li><p>ip route</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ip route add to 10.2.2.2/8 dev eth0 via 192.168.10.1</span><br><span class="line">ip route show </span><br><span class="line">ip route flush</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><a href="#top" target="_self">返回顶部</a></p>]]></content>
      
      
      <categories>
          
          <category> CRH </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CCNA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> hello-world </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建个人博客</title>
      <link href="/posts/c442673f.html"/>
      <url>/posts/c442673f.html</url>
      
        <content type="html"><![CDATA[<p>2019-06-08-搭建博客</p><a id="more"></a><h2 id="基础搭建"><a href="#基础搭建" class="headerlink" title="基础搭建"></a>基础搭建</h2><h3 id="创建一个仓库，用于存放个人博客文件"><a href="#创建一个仓库，用于存放个人博客文件" class="headerlink" title="创建一个仓库，用于存放个人博客文件"></a>创建一个仓库，用于存放个人博客文件</h3><ul><li><p>在Github首页右上角头像左侧加号点选择 New repositor(新存储库)或点击这里进行创建一个仓库.</p><img src="/posts/c442673f/01-CreateBlog.jpg" class title="创建仓库">  </li><li><p>开启Github Pages</p><img src="/posts/c442673f/02-CreateBlog.jpg" class title="创建仓库">  </li><li><p>进入仓库设置项，进行主题的选择</p><img src="/posts/c442673f/03-CreateBlog.jpg" class title="创建仓库">  </li></ul><h2 id="Hexo-的搭建"><a href="#Hexo-的搭建" class="headerlink" title="Hexo 的搭建"></a>Hexo 的搭建</h2><blockquote><p>Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持<code>Markdown</code>格式，有众多优秀插件和主题。</p></blockquote><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><h5 id="Linux-类Linux下利用nvm安装Node比较好，https-github-com-nvm-sh-nvm"><a href="#Linux-类Linux下利用nvm安装Node比较好，https-github-com-nvm-sh-nvm" class="headerlink" title="Linux/类Linux下利用nvm安装Node比较好，https://github.com/nvm-sh/nvm"></a>Linux/类Linux下利用nvm安装Node比较好，<a href="https://github.com/nvm-sh/nvm">https://github.com/nvm-sh/nvm</a></h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</span><br><span class="line">$ wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</span><br></pre></td></tr></table></figure><h5 id="Windows下nvm安装配置，https-github-com-coreybutler-nvm-windows"><a href="#Windows下nvm安装配置，https-github-com-coreybutler-nvm-windows" class="headerlink" title="Windows下nvm安装配置，https://github.com/coreybutler/nvm-windows"></a>Windows下nvm安装配置，<a href="https://github.com/coreybutler/nvm-windows">https://github.com/coreybutler/nvm-windows</a></h5><blockquote><p>nvm 安装好后，利用 nvm 相关命令安装node.js<br><a href="https://blog.csdn.net/qq_27626333/article/details/77857223">参考配置 nvm</a><br><a href="https://www.cnblogs.com/wyy1234/p/9727142.html">参考cnblog博客</a></p></blockquote><ul><li><p>配置nvm安装目录下的 settings.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ root: F:\Design\nvm</span><br><span class="line">$ path: F:\Design\nodejs</span><br><span class="line">$ arch: 64 </span><br><span class="line">$ proxy: none </span><br><span class="line">$ node_mirror: https://npm.taobao.org/mirrors/node/</span><br><span class="line">$ npm_mirror: https://npm.taobao.org/mirrors/npm/</span><br></pre></td></tr></table></figure></li><li><p>配置用npm下载包时全局安装的包路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm config set prefix “F:\Design\nvm\npm”</span><br><span class="line">$ %NPM_HOME%&#x3D;F:\Design\nvm\npm</span><br></pre></td></tr></table></figure></li><li><p>配置国内仓库  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li></ul><p>:link:<a href="https://npm.taobao.org/mirrors/node/">淘宝Node镜像</a><br>:link:<a href="https://npm.taobao.org/mirrors/npm/">淘宝Npm镜像</a>  </p><h3 id="nvm-命令"><a href="#nvm-命令" class="headerlink" title="nvm 命令"></a>nvm 命令</h3><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">nvm arch 32/64</td><td align="left">显示Node是以32位还是64位模式运行</td></tr><tr><td align="left">nvm install <version> [arch]</version></td><td align="left">下载需要的Node版本,默认64位</td></tr><tr><td align="left">nvm list [available]</td><td align="left">列出node.js安装,在末尾输入可用的类型以显示可供下载的版本列表</td></tr><tr><td align="left">nvm on</td><td align="left">启用版本管理</td></tr><tr><td align="left">nvm off</td><td align="left">禁用版本管理</td></tr><tr><td align="left">nvm proxy [url]</td><td align="left">设置代理,留空以查看当前代理,设置为“none”以删除代理</td></tr><tr><td align="left">nvm uninstall <version></version></td><td align="left">卸载指定版本</td></tr><tr><td align="left">nvm use <version> [arch]</version></td><td align="left">使用指定Node版本,可以指定位数</td></tr><tr><td align="left">nvm root [path]</td><td align="left">设置nvm应存储不同版本node.js的目录</td></tr><tr><td align="left">nvm version</td><td align="left">显示当前的 nvm 版本</td></tr><tr><td align="left">nvm node_mirror <node_mirror_url></node_mirror_url></td><td align="left">Set the node mirror(China)</td></tr><tr><td align="left">nvm npm_mirror <npm_mirror_url></npm_mirror_url></td><td align="left">–</td></tr></tbody></table><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p><a href="https://hexo.io/zh-cn/docs/">Hexo官方参考文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ hexo init &lt;folder&gt;  // 必须为空目录</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── <span class="built_in">source</span></span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br><span class="line"></span><br><span class="line">$ hexo new [layout] &lt;title&gt;  <span class="comment"># hexo new &quot;post title with whitespace&quot;  </span></span><br><span class="line">$ hexo g  <span class="comment"># generate 网页文件</span></span><br><span class="line">$ hexo s  <span class="comment"># server https://localhost:4000 预览网页</span></span><br><span class="line">$ hexo clean </span><br><span class="line">$ hexo d  <span class="comment"># deployer push 到仓库</span></span><br></pre></td></tr></table></figure><h3 id="配置优化Hexo-命令都是在博客主目录执行"><a href="#配置优化Hexo-命令都是在博客主目录执行" class="headerlink" title="配置优化Hexo(命令都是在博客主目录执行)"></a>配置优化Hexo(命令都是在博客主目录执行)</h3><h4 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h4><p>:link:<a href="https://github.com/cczeng/BlogBackup/blob/master/_config.yml">参考配置</a></p><h4 id="安装hexo-deployer-git扩展"><a href="#安装hexo-deployer-git扩展" class="headerlink" title="安装hexo-deployer-git扩展"></a>安装<code>hexo-deployer-git</code>扩展</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">  </span><br><span class="line">deploy:</span><br><span class="line"><span class="built_in">type</span>: git</span><br><span class="line">repo: git@github.com:anyue967/anyue967.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><h4 id="添加插件"><a href="#添加插件" class="headerlink" title="添加插件"></a>添加插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-helper-live2d --save</span><br></pre></td></tr></table></figure><p>:link:<a href="https://github.com/EYHN/hexo-helper-live2d">参考官方 live-2d配置文件</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-search --save</span><br><span class="line"></span><br><span class="line">search:</span><br><span class="line">path: search.xml</span><br><span class="line">field: post</span><br><span class="line">format: html</span><br><span class="line"><span class="built_in">limit</span>: 10000</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-filter-optimize --save</span><br></pre></td></tr></table></figure><h2 id="npm-Nodejs-Package-Manager-相关命令"><a href="#npm-Nodejs-Package-Manager-相关命令" class="headerlink" title="npm (Nodejs Package Manager)相关命令"></a>npm (Nodejs Package Manager)相关命令</h2><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">npm -v</td><td align="left">查询node版本</td></tr><tr><td align="left">npm install xx -g</td><td align="left">全局安装模块,如:<code>gulp@3.9.1</code></td></tr><tr><td align="left">npm install xx –save</td><td align="left">本地安装模块并写入 json配置</td></tr><tr><td align="left">npm search xx</td><td align="left">搜索模块</td></tr><tr><td align="left">npm outdated</td><td align="left">过时模块</td></tr><tr><td align="left">npm update xx</td><td align="left">更新模块</td></tr><tr><td align="left">npm search xx</td><td align="left">搜索模块</td></tr><tr><td align="left">npm cache clear</td><td align="left">清空本地缓存</td></tr><tr><td align="left">npm uninstall xx</td><td align="left">卸载模块</td></tr><tr><td align="left">npm list -g | grep xx</td><td align="left">查找全局安装模块</td></tr><tr><td align="left">npm list xx</td><td align="left">查看模块版本号</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm config <span class="built_in">set</span> prefix “F:\Design\nvm\npm”      <span class="comment"># 配置用npm下载模块时全局安装的包路径</span></span><br><span class="line">$ npm config <span class="built_in">set</span> proxy=http://xxx               <span class="comment"># 设置代理</span></span><br><span class="line">$ npm config <span class="built_in">set</span> registry=<span class="string">&quot;http://r.cnmpjs.org&quot;</span>     <span class="comment"># 设置镜像仓库</span></span><br><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org`  <span class="comment"># 使用淘宝镜像命令</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ npm cache add &lt;tarball file&gt;</span><br><span class="line">$ npm cache add &lt;folder&gt;</span><br><span class="line">$ npm cache add &lt;tarball url&gt; </span><br><span class="line">$ npm cache add &lt;git url&gt; </span><br><span class="line">$ npm cache add &lt;name&gt;@&lt;version&gt;  </span><br><span class="line">$ npm cache clean </span><br><span class="line">$ npm cache verify  </span><br><span class="line"></span><br><span class="line">npm start</span><br><span class="line">npm stop</span><br><span class="line">npm restart</span><br></pre></td></tr></table></figure><h2 id="nrm-的安装和使用"><a href="#nrm-的安装和使用" class="headerlink" title="nrm 的安装和使用"></a>nrm 的安装和使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">npm install nrm -g    <span class="comment"># 全局安装nrm  </span></span><br><span class="line">nrm ls    <span class="comment"># 列出可用的镜像源  </span></span><br><span class="line"></span><br><span class="line">  * npm -------- https://registry.npmjs.org/</span><br><span class="line">    yarn ------- https://registry.yarnpkg.com/</span><br><span class="line">    cnpm ------- http://r.cnpmjs.org/</span><br><span class="line">    taobao ----- https://registry.npm.taobao.org/</span><br><span class="line">    nj --------- https://registry.nodejitsu.com/</span><br><span class="line">    npmMirror -- https://skimdb.npmjs.com/registry/</span><br><span class="line">    edunpm ----- http://registry.enpmjs.org/</span><br><span class="line">nrm use taobao    <span class="comment"># 选择国内淘宝镜像源</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CRH </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
